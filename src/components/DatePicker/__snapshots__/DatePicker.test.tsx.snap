// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<DatePicker /> meta.plaintext handling should react on meta.plaintext correctly 1`] = `
<FieldLine
  field={
    Object {
      "disabled": false,
      "id": "mock-field",
      "name": "mock-field",
      "onBlur": [MockFunction],
      "onChange": [MockFunction],
      "value": "",
    }
  }
  inputSize="9"
  label="field0"
  labelClass="text-right"
  labelSize="3"
  meta={
    Object {
      "error": null,
      "isRequired": false,
      "isValidating": false,
      "plaintext": true,
      "stringFormatter": [MockFunction],
      "touched": false,
      "valid": true,
    }
  }
>
  <Input
    disabled={false}
    id="mock-field"
    name="mock-field"
    onBlur={[MockFunction]}
    onChange={[MockFunction]}
    plaintext={true}
    type="text"
    value=""
  />
</FieldLine>
`;

exports[`<DatePicker /> should render correctly 1`] = `
<FieldLine
  field={
    Object {
      "disabled": false,
      "id": "mock-field",
      "name": "mock-field",
      "onBlur": [MockFunction],
      "onChange": [MockFunction],
      "value": "",
    }
  }
  inputSize="9"
  label="field0"
  labelClass="text-right"
  labelSize="3"
  meta={
    Object {
      "error": null,
      "isRequired": false,
      "isValidating": false,
      "plaintext": false,
      "stringFormatter": [MockFunction],
      "touched": false,
      "valid": true,
    }
  }
>
  <DateTime
    className=""
    closeOnSelect={true}
    closeOnTab={true}
    dateFormat={true}
    defaultValue=""
    input={true}
    inputProps={
      Object {
        "disabled": false,
      }
    }
    onBlur={[Function]}
    onChange={[Function]}
    onFocus={[Function]}
    onNavigateBack={[Function]}
    onNavigateForward={[Function]}
    onViewModeChange={[Function]}
    strictParsing={true}
    timeConstraints={Object {}}
    timeFormat={true}
    utc={false}
    value={null}
  />
</FieldLine>
`;
