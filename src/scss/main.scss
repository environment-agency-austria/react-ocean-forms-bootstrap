// Adapting the react-select styles to better suit
// the bootstrap design
.Select {
  &.is-focused,
  &.is-focused:not(.is-open) {
    outline: none;

    > .Select-control {
      color: #495057;
      background-color: #fff;
      border-color: #80bdff;
      outline: 0;
      box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);
      z-index: 3;
    }

    &.is-invalid {
      > .Select-control {
        border-color: #dc3545;
        box-shadow: 0 0 0 0.2rem rgba(220, 53, 69, 0.25);
      }
    }
  }

  &.is-invalid > .Select-control {
    border-color: #dc3545;

    ~ .invalid-feedback {
      display: block;
    }
  }

  &.is-disabled {
    .Select-placeholder {
      box-shadow: inset 0 1px 1px rgba(0,0,0,.075);
      background-color: #e9ecef;
      opacity: 1;
    }

    .Select-arrow-zone {
      display: none;
    }
  }
}

.input-group {
  .react-select-control {
    flex: 1 1 auto;
  }
}

.input-group > .react-select-control:not(:last-child) .Select-control {
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

.input-group-append .btn {
  z-index: 0;
}

.react-select-control.is-invalid~.invalid-feedback {
  display: block;
}

// * marker for required fields
.field-required {
  cursor: help;
  margin-right: -10px;
}

.form-group.is-invalid {
  .col-form-label,
  .form-check-label,
  .check-label-col {
    color: #f4511e;
  }
}

.form-group.is-touched {
  label {
    color: #0856B6;
  }
}

// Workaround for checkboxes with an info button
.input-group.has-info {
  .form-check-label {
    flex: 1 1 auto;
    width: 1%;
    padding-right: 1em;
  }
}

// Better display of disabled OnOffToggleButtons
.btn.btn-outline-primary.active.disabled {
  color: #fff;
  background-color: #007bff;
  border-color: #007bff;
}

.validation-summary {
  h4 {
    font-weight: normal;

    // Workaround for scrollIntoView - with this
    // little hack we don't need to offset the
    // scroll position to include the header height.
    margin-top: -70px;
    padding-top: 70px;
  }

  ul {
    padding-left: 1em;
    margin-bottom: 0;
  }

  li {
    list-style-type: none;
    margin-bottom: 5px;

    a {
      color: #7f2a10;
    }
  }
}

form.plaintext {
  .form-group {
    margin-bottom: 0;

    label {
      font-weight: bold;
    }
  }
}

[dir=rtl] {
  .validation-summary {
    ul {
      padding-right: 1em;
    }
  }

  .field-required {
    margin-right: 0;
    margin-left: -10px;
  }

  .Select.has-value.is-clearable.Select--single>.Select-control .Select-value {
    padding-left: 42px;
    padding-right: 10px;
  }

  .row.form-group {
    .custom-file-label {
      padding-right: 80px;
    }
  }
}

@media (max-width: 575.9px) {
  .row.form-group {
    .col-form-label.text-right,
    .check-label-col.text-right {
      text-align: left !important;
    }

    .form-check-label {
      padding-left: 20px;
    }
  }

  [dir=rtl] {
    .row.form-group {
      .col-form-label.text-right,
      .check-label-col.text-right {
        text-align: right !important;
      }

      .form-check-label {
        padding-left: 0;
        padding-right: 20px;
      }
    }
  }
}
