// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<FieldLine /> should support prefixes and suffixes 1`] = `
ReactWrapper {
  "length": 1,
  Symbol(enzyme.__unrendered__): <FieldLine
    field={
      Object {
        "id": "field0",
        "invalid": false,
        "name": "field0",
        "onBlur": [MockFunction],
        "onChange": [MockFunction],
        "value": "",
      }
    }
    info={null}
    label="ojs_select_placeholder"
    meta={
      Object {
        "error": null,
        "isValidating": false,
        "stringFormatter": [MockFunction] {
          "calls": Array [
            Array [
              "ojs_select_placeholder",
            ],
            Array [
              "demo",
            ],
            Array [
              "blubb",
            ],
          ],
          "results": Array [
            Object {
              "isThrow": false,
              "value": "ojs_select_placeholder",
            },
            Object {
              "isThrow": false,
              "value": "demo",
            },
            Object {
              "isThrow": false,
              "value": "blubb",
            },
          ],
        },
        "valid": true,
      }
    }
    prefix="demo"
    suffix="blubb"
    validators={null}
  >
    <TestComponent />
  </FieldLine>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__node__): Object {
    "instance": FieldLine {
      "_reactInternalFiber": FiberNode {
        "_debugID": 162,
        "_debugIsCurrentlyTiming": false,
        "_debugOwner": FiberNode {
          "_debugID": 161,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": null,
          "_debugSource": null,
          "alternate": null,
          "child": [Circular],
          "effectTag": 1,
          "expirationTime": 0,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {
              "children": <TestComponent />,
              "field": Object {
                "id": "field0",
                "invalid": false,
                "name": "field0",
                "onBlur": [MockFunction],
                "onChange": [MockFunction],
                "value": "",
              },
              "info": null,
              "label": "ojs_select_placeholder",
              "meta": Object {
                "error": null,
                "isValidating": false,
                "stringFormatter": [MockFunction] {
                  "calls": Array [
                    Array [
                      "ojs_select_placeholder",
                    ],
                    Array [
                      "demo",
                    ],
                    Array [
                      "blubb",
                    ],
                  ],
                  "results": Array [
                    Object {
                      "isThrow": false,
                      "value": "ojs_select_placeholder",
                    },
                    Object {
                      "isThrow": false,
                      "value": "demo",
                    },
                    Object {
                      "isThrow": false,
                      "value": "blubb",
                    },
                  ],
                },
                "valid": true,
              },
              "prefix": "demo",
              "suffix": "blubb",
              "validators": null,
            },
          },
          "memoizedState": Object {
            "context": null,
            "mount": true,
            "props": Object {
              "children": <TestComponent />,
              "field": Object {
                "id": "field0",
                "invalid": false,
                "name": "field0",
                "onBlur": [MockFunction],
                "onChange": [MockFunction],
                "value": "",
              },
              "info": null,
              "label": "ojs_select_placeholder",
              "meta": Object {
                "error": null,
                "isValidating": false,
                "stringFormatter": [MockFunction] {
                  "calls": Array [
                    Array [
                      "ojs_select_placeholder",
                    ],
                    Array [
                      "demo",
                    ],
                    Array [
                      "blubb",
                    ],
                  ],
                  "results": Array [
                    Object {
                      "isThrow": false,
                      "value": "ojs_select_placeholder",
                    },
                    Object {
                      "isThrow": false,
                      "value": "demo",
                    },
                    Object {
                      "isThrow": false,
                      "value": "blubb",
                    },
                  ],
                },
                "valid": true,
              },
              "prefix": "demo",
              "suffix": "blubb",
              "validators": null,
            },
          },
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {
              "children": <TestComponent />,
              "field": Object {
                "id": "field0",
                "invalid": false,
                "name": "field0",
                "onBlur": [MockFunction],
                "onChange": [MockFunction],
                "value": "",
              },
              "info": null,
              "label": "ojs_select_placeholder",
              "meta": Object {
                "error": null,
                "isValidating": false,
                "stringFormatter": [MockFunction] {
                  "calls": Array [
                    Array [
                      "ojs_select_placeholder",
                    ],
                    Array [
                      "demo",
                    ],
                    Array [
                      "blubb",
                    ],
                  ],
                  "results": Array [
                    Object {
                      "isThrow": false,
                      "value": "ojs_select_placeholder",
                    },
                    Object {
                      "isThrow": false,
                      "value": "demo",
                    },
                    Object {
                      "isThrow": false,
                      "value": "blubb",
                    },
                  ],
                },
                "valid": true,
              },
              "prefix": "demo",
              "suffix": "blubb",
              "validators": null,
            },
          },
          "ref": null,
          "return": FiberNode {
            "_debugID": 159,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "alternate": FiberNode {
              "_debugID": 159,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "alternate": [Circular],
              "child": null,
              "effectTag": 0,
              "expirationTime": 1,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": null,
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseTime": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                    class="row form-group"
                  >
                    <label
                      class="text-right col-sm-3 col-form-label"
                      for="field0"
                    >
                      ojs_select_placeholder
                    </label>
                    <div
                      class="col-sm-9"
                    >
                      <div
                        class="input-group"
                      >
                        <div
                          class="input-group-prepend"
                        >
                          <span
                            class="input-group-text"
                          >
                            demo
                          </span>
                        </div>
                        <div
                          id="field0"
                        />
                        <div
                          class="input-group-append"
                        >
                          <span
                            class="input-group-text"
                          >
                            blubb
                          </span>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "remainingExpirationTime": 0,
              },
              "tag": 3,
              "treeBaseTime": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": null,
                "expirationTime": 1,
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": Object {
                  "callback": null,
                  "expirationTime": 1,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "children": <TestComponent />,
                          "field": Object {
                            "id": "field0",
                            "invalid": false,
                            "name": "field0",
                            "onBlur": [MockFunction],
                            "onChange": [MockFunction],
                            "value": "",
                          },
                          "info": null,
                          "label": "ojs_select_placeholder",
                          "meta": Object {
                            "error": null,
                            "isValidating": false,
                            "stringFormatter": [MockFunction] {
                              "calls": Array [
                                Array [
                                  "ojs_select_placeholder",
                                ],
                                Array [
                                  "demo",
                                ],
                                Array [
                                  "blubb",
                                ],
                              ],
                              "results": Array [
                                Object {
                                  "isThrow": false,
                                  "value": "ojs_select_placeholder",
                                },
                                Object {
                                  "isThrow": false,
                                  "value": "demo",
                                },
                                Object {
                                  "isThrow": false,
                                  "value": "blubb",
                                },
                              ],
                            },
                            "valid": true,
                          },
                          "prefix": "demo",
                          "suffix": "blubb",
                          "validators": null,
                        }
                      }
                    />,
                  },
                  "tag": 0,
                },
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": Object {
                  "callback": null,
                  "expirationTime": 1,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "children": <TestComponent />,
                          "field": Object {
                            "id": "field0",
                            "invalid": false,
                            "name": "field0",
                            "onBlur": [MockFunction],
                            "onChange": [MockFunction],
                            "value": "",
                          },
                          "info": null,
                          "label": "ojs_select_placeholder",
                          "meta": Object {
                            "error": null,
                            "isValidating": false,
                            "stringFormatter": [MockFunction] {
                              "calls": Array [
                                Array [
                                  "ojs_select_placeholder",
                                ],
                                Array [
                                  "demo",
                                ],
                                Array [
                                  "blubb",
                                ],
                              ],
                              "results": Array [
                                Object {
                                  "isThrow": false,
                                  "value": "ojs_select_placeholder",
                                },
                                Object {
                                  "isThrow": false,
                                  "value": "demo",
                                },
                                Object {
                                  "isThrow": false,
                                  "value": "blubb",
                                },
                              ],
                            },
                            "valid": true,
                          },
                          "prefix": "demo",
                          "suffix": "blubb",
                          "validators": null,
                        }
                      }
                    />,
                  },
                  "tag": 0,
                },
              },
            },
            "child": [Circular],
            "effectTag": 32,
            "expirationTime": 0,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": null,
            "memoizedState": Object {
              "element": <WrapperComponent
                Component={[Function]}
                context={null}
                props={
                  Object {
                    "children": <TestComponent />,
                    "field": Object {
                      "id": "field0",
                      "invalid": false,
                      "name": "field0",
                      "onBlur": [MockFunction],
                      "onChange": [MockFunction],
                      "value": "",
                    },
                    "info": null,
                    "label": "ojs_select_placeholder",
                    "meta": Object {
                      "error": null,
                      "isValidating": false,
                      "stringFormatter": [MockFunction] {
                        "calls": Array [
                          Array [
                            "ojs_select_placeholder",
                          ],
                          Array [
                            "demo",
                          ],
                          Array [
                            "blubb",
                          ],
                        ],
                        "results": Array [
                          Object {
                            "isThrow": false,
                            "value": "ojs_select_placeholder",
                          },
                          Object {
                            "isThrow": false,
                            "value": "demo",
                          },
                          Object {
                            "isThrow": false,
                            "value": "blubb",
                          },
                        ],
                      },
                      "valid": true,
                    },
                    "prefix": "demo",
                    "suffix": "blubb",
                    "validators": null,
                  }
                }
              />,
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": null,
            "selfBaseTime": 0,
            "sibling": null,
            "stateNode": Object {
              "containerInfo": <div>
                <div
                  class="row form-group"
                >
                  <label
                    class="text-right col-sm-3 col-form-label"
                    for="field0"
                  >
                    ojs_select_placeholder
                  </label>
                  <div
                    class="col-sm-9"
                  >
                    <div
                      class="input-group"
                    >
                      <div
                        class="input-group-prepend"
                      >
                        <span
                          class="input-group-text"
                        >
                          demo
                        </span>
                      </div>
                      <div
                        id="field0"
                      />
                      <div
                        class="input-group-append"
                      >
                        <span
                          class="input-group-text"
                        >
                          blubb
                        </span>
                      </div>
                    </div>
                  </div>
                </div>
              </div>,
              "context": Object {},
              "current": [Circular],
              "earliestPendingTime": 0,
              "earliestSuspendedTime": 0,
              "finishedWork": null,
              "firstBatch": null,
              "hydrate": false,
              "latestPendingTime": 0,
              "latestPingedTime": 0,
              "latestSuspendedTime": 0,
              "nextScheduledRoot": null,
              "pendingChildren": null,
              "pendingCommitExpirationTime": 0,
              "pendingContext": null,
              "remainingExpirationTime": 0,
            },
            "tag": 3,
            "treeBaseTime": 0,
            "type": null,
            "updateQueue": Object {
              "baseState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                    Object {
                      "children": <TestComponent />,
                      "field": Object {
                        "id": "field0",
                        "invalid": false,
                        "name": "field0",
                        "onBlur": [MockFunction],
                        "onChange": [MockFunction],
                        "value": "",
                      },
                      "info": null,
                      "label": "ojs_select_placeholder",
                      "meta": Object {
                        "error": null,
                        "isValidating": false,
                        "stringFormatter": [MockFunction] {
                          "calls": Array [
                            Array [
                              "ojs_select_placeholder",
                            ],
                            Array [
                              "demo",
                            ],
                            Array [
                              "blubb",
                            ],
                          ],
                          "results": Array [
                            Object {
                              "isThrow": false,
                              "value": "ojs_select_placeholder",
                            },
                            Object {
                              "isThrow": false,
                              "value": "demo",
                            },
                            Object {
                              "isThrow": false,
                              "value": "blubb",
                            },
                          ],
                        },
                        "valid": true,
                      },
                      "prefix": "demo",
                      "suffix": "blubb",
                      "validators": null,
                    }
                  }
                />,
              },
              "expirationTime": 0,
              "firstCapturedEffect": null,
              "firstCapturedUpdate": null,
              "firstEffect": null,
              "firstUpdate": null,
              "lastCapturedEffect": null,
              "lastCapturedUpdate": null,
              "lastEffect": null,
              "lastUpdate": null,
            },
          },
          "selfBaseTime": 0,
          "sibling": null,
          "stateNode": WrapperComponent {
            "_reactInternalFiber": [Circular],
            "_reactInternalInstance": Object {},
            "context": Object {},
            "props": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "children": <TestComponent />,
                "field": Object {
                  "id": "field0",
                  "invalid": false,
                  "name": "field0",
                  "onBlur": [MockFunction],
                  "onChange": [MockFunction],
                  "value": "",
                },
                "info": null,
                "label": "ojs_select_placeholder",
                "meta": Object {
                  "error": null,
                  "isValidating": false,
                  "stringFormatter": [MockFunction] {
                    "calls": Array [
                      Array [
                        "ojs_select_placeholder",
                      ],
                      Array [
                        "demo",
                      ],
                      Array [
                        "blubb",
                      ],
                    ],
                    "results": Array [
                      Object {
                        "isThrow": false,
                        "value": "ojs_select_placeholder",
                      },
                      Object {
                        "isThrow": false,
                        "value": "demo",
                      },
                      Object {
                        "isThrow": false,
                        "value": "blubb",
                      },
                    ],
                  },
                  "valid": true,
                },
                "prefix": "demo",
                "suffix": "blubb",
                "validators": null,
              },
            },
            "refs": Object {},
            "state": Object {
              "context": null,
              "mount": true,
              "props": Object {
                "children": <TestComponent />,
                "field": Object {
                  "id": "field0",
                  "invalid": false,
                  "name": "field0",
                  "onBlur": [MockFunction],
                  "onChange": [MockFunction],
                  "value": "",
                },
                "info": null,
                "label": "ojs_select_placeholder",
                "meta": Object {
                  "error": null,
                  "isValidating": false,
                  "stringFormatter": [MockFunction] {
                    "calls": Array [
                      Array [
                        "ojs_select_placeholder",
                      ],
                      Array [
                        "demo",
                      ],
                      Array [
                        "blubb",
                      ],
                    ],
                    "results": Array [
                      Object {
                        "isThrow": false,
                        "value": "ojs_select_placeholder",
                      },
                      Object {
                        "isThrow": false,
                        "value": "demo",
                      },
                      Object {
                        "isThrow": false,
                        "value": "blubb",
                      },
                    ],
                  },
                  "valid": true,
                },
                "prefix": "demo",
                "suffix": "blubb",
                "validators": null,
              },
            },
            "updater": Object {
              "enqueueForceUpdate": [Function],
              "enqueueReplaceState": [Function],
              "enqueueSetState": [Function],
              "isMounted": [Function],
            },
          },
          "tag": 2,
          "treeBaseTime": 0,
          "type": [Function],
          "updateQueue": null,
        },
        "_debugSource": null,
        "alternate": null,
        "child": FiberNode {
          "_debugID": 163,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": [Circular],
          "_debugSource": null,
          "alternate": null,
          "child": FiberNode {
            "_debugID": 164,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": null,
            "alternate": null,
            "child": FiberNode {
              "_debugID": 165,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "alternate": null,
              "child": FiberNode {
                "_debugID": 167,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 168,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "alternate": null,
                  "child": null,
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 2,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": "ojs_select_placeholder",
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": "ojs_select_placeholder",
                  "ref": null,
                  "return": [Circular],
                  "selfBaseTime": 0,
                  "sibling": null,
                  "stateNode": ojs_select_placeholder,
                  "tag": 6,
                  "treeBaseTime": 0,
                  "type": null,
                  "updateQueue": null,
                },
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": Array [
                    null,
                    null,
                    "ojs_select_placeholder",
                    null,
                  ],
                  "className": "text-right col-sm-3 col-form-label",
                  "htmlFor": "field0",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": Array [
                    null,
                    null,
                    "ojs_select_placeholder",
                    null,
                  ],
                  "className": "text-right col-sm-3 col-form-label",
                  "htmlFor": "field0",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseTime": 0,
                "sibling": null,
                "stateNode": <label
                  class="text-right col-sm-3 col-form-label"
                  for="field0"
                >
                  ojs_select_placeholder
                </label>,
                "tag": 5,
                "treeBaseTime": 0,
                "type": "label",
                "updateQueue": null,
              },
              "effectTag": 1,
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": Array [
                  null,
                  null,
                  "ojs_select_placeholder",
                  null,
                ],
                "className": "text-right",
                "for": "field0",
                "sm": "3",
                "tag": "label",
                "widths": Array [
                  "xs",
                  "sm",
                  "md",
                  "lg",
                  "xl",
                ],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": Array [
                  null,
                  null,
                  "ojs_select_placeholder",
                  null,
                ],
                "className": "text-right",
                "for": "field0",
                "sm": "3",
                "tag": "label",
                "widths": Array [
                  "xs",
                  "sm",
                  "md",
                  "lg",
                  "xl",
                ],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseTime": 0,
              "sibling": FiberNode {
                "_debugID": 166,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 169,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 170,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 171,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": null,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 172,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": null,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 176,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": null,
                          "alternate": null,
                          "child": FiberNode {
                            "_debugID": 177,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": null,
                            "alternate": null,
                            "child": FiberNode {
                              "_debugID": 178,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": null,
                              "alternate": null,
                              "child": null,
                              "effectTag": 0,
                              "expirationTime": 0,
                              "firstEffect": null,
                              "index": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": "demo",
                                "className": "input-group-text",
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "children": "demo",
                                "className": "input-group-text",
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseTime": 0,
                              "sibling": null,
                              "stateNode": <span
                                class="input-group-text"
                              >
                                demo
                              </span>,
                              "tag": 5,
                              "treeBaseTime": 0,
                              "type": "span",
                              "updateQueue": null,
                            },
                            "effectTag": 1,
                            "expirationTime": 0,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": "demo",
                              "tag": "span",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": "demo",
                              "tag": "span",
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseTime": 0,
                            "sibling": null,
                            "stateNode": null,
                            "tag": 1,
                            "treeBaseTime": 0,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": <InputGroupText
                              tag="span"
                            >
                              demo
                            </InputGroupText>,
                            "className": "input-group-prepend",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": <InputGroupText
                              tag="span"
                            >
                              demo
                            </InputGroupText>,
                            "className": "input-group-prepend",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseTime": 0,
                          "sibling": null,
                          "stateNode": <div
                            class="input-group-prepend"
                          >
                            <span
                              class="input-group-text"
                            >
                              demo
                            </span>
                          </div>,
                          "tag": 5,
                          "treeBaseTime": 0,
                          "type": "div",
                          "updateQueue": null,
                        },
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "addonType": "prepend",
                          "children": "demo",
                          "tag": "div",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "addonType": "prepend",
                          "children": "demo",
                          "tag": "div",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseTime": 0,
                        "sibling": FiberNode {
                          "_debugID": 173,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": null,
                          "child": FiberNode {
                            "_debugID": 179,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": null,
                            "alternate": null,
                            "child": null,
                            "effectTag": 0,
                            "expirationTime": 0,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "id": "field0",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "id": "field0",
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseTime": 0,
                            "sibling": null,
                            "stateNode": <div
                              id="field0"
                            />,
                            "tag": 5,
                            "treeBaseTime": 0,
                            "type": "div",
                            "updateQueue": null,
                          },
                          "effectTag": 1,
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 1,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {},
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {},
                          "ref": null,
                          "return": [Circular],
                          "selfBaseTime": 0,
                          "sibling": FiberNode {
                            "_debugID": 174,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": null,
                            "alternate": null,
                            "child": FiberNode {
                              "_debugID": 180,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": null,
                              "alternate": null,
                              "child": FiberNode {
                                "_debugID": 181,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": [Circular],
                                "_debugSource": null,
                                "alternate": null,
                                "child": FiberNode {
                                  "_debugID": 182,
                                  "_debugIsCurrentlyTiming": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": null,
                                  "alternate": null,
                                  "child": null,
                                  "effectTag": 0,
                                  "expirationTime": 0,
                                  "firstEffect": null,
                                  "index": 0,
                                  "key": null,
                                  "lastEffect": null,
                                  "memoizedProps": Object {
                                    "children": "blubb",
                                    "className": "input-group-text",
                                  },
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": Object {
                                    "children": "blubb",
                                    "className": "input-group-text",
                                  },
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseTime": 0,
                                  "sibling": null,
                                  "stateNode": <span
                                    class="input-group-text"
                                  >
                                    blubb
                                  </span>,
                                  "tag": 5,
                                  "treeBaseTime": 0,
                                  "type": "span",
                                  "updateQueue": null,
                                },
                                "effectTag": 1,
                                "expirationTime": 0,
                                "firstEffect": null,
                                "index": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "children": "blubb",
                                  "tag": "span",
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": Object {
                                  "children": "blubb",
                                  "tag": "span",
                                },
                                "ref": null,
                                "return": [Circular],
                                "selfBaseTime": 0,
                                "sibling": null,
                                "stateNode": null,
                                "tag": 1,
                                "treeBaseTime": 0,
                                "type": [Function],
                                "updateQueue": null,
                              },
                              "effectTag": 0,
                              "expirationTime": 0,
                              "firstEffect": null,
                              "index": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": <InputGroupText
                                  tag="span"
                                >
                                  blubb
                                </InputGroupText>,
                                "className": "input-group-append",
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "children": <InputGroupText
                                  tag="span"
                                >
                                  blubb
                                </InputGroupText>,
                                "className": "input-group-append",
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseTime": 0,
                              "sibling": null,
                              "stateNode": <div
                                class="input-group-append"
                              >
                                <span
                                  class="input-group-text"
                                >
                                  blubb
                                </span>
                              </div>,
                              "tag": 5,
                              "treeBaseTime": 0,
                              "type": "div",
                              "updateQueue": null,
                            },
                            "effectTag": 1,
                            "expirationTime": 0,
                            "firstEffect": null,
                            "index": 2,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "addonType": "append",
                              "children": "blubb",
                              "tag": "div",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "addonType": "append",
                              "children": "blubb",
                              "tag": "div",
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseTime": 0,
                            "sibling": FiberNode {
                              "_debugID": 175,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": null,
                              "alternate": null,
                              "child": null,
                              "effectTag": 1,
                              "expirationTime": 0,
                              "firstEffect": null,
                              "index": 4,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "context": Object {
                                  "stringFormatter": [MockFunction] {
                                    "calls": Array [
                                      Array [
                                        "ojs_select_placeholder",
                                      ],
                                      Array [
                                        "demo",
                                      ],
                                      Array [
                                        "blubb",
                                      ],
                                    ],
                                    "results": Array [
                                      Object {
                                        "isThrow": false,
                                        "value": "ojs_select_placeholder",
                                      },
                                      Object {
                                        "isThrow": false,
                                        "value": "demo",
                                      },
                                      Object {
                                        "isThrow": false,
                                        "value": "blubb",
                                      },
                                    ],
                                  },
                                },
                                "error": null,
                                "id": "field0_errors",
                                "invalid": false,
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "context": Object {
                                  "stringFormatter": [MockFunction] {
                                    "calls": Array [
                                      Array [
                                        "ojs_select_placeholder",
                                      ],
                                      Array [
                                        "demo",
                                      ],
                                      Array [
                                        "blubb",
                                      ],
                                    ],
                                    "results": Array [
                                      Object {
                                        "isThrow": false,
                                        "value": "ojs_select_placeholder",
                                      },
                                      Object {
                                        "isThrow": false,
                                        "value": "demo",
                                      },
                                      Object {
                                        "isThrow": false,
                                        "value": "blubb",
                                      },
                                    ],
                                  },
                                },
                                "error": null,
                                "id": "field0_errors",
                                "invalid": false,
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseTime": 0,
                              "sibling": null,
                              "stateNode": null,
                              "tag": 1,
                              "treeBaseTime": 0,
                              "type": [Function],
                              "updateQueue": null,
                            },
                            "stateNode": null,
                            "tag": 1,
                            "treeBaseTime": 0,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "stateNode": null,
                          "tag": 1,
                          "treeBaseTime": 0,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "stateNode": null,
                        "tag": 1,
                        "treeBaseTime": 0,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": Array [
                          <InputGroupAddon
                            addonType="prepend"
                            tag="div"
                          >
                            demo
                          </InputGroupAddon>,
                          <TestComponent />,
                          <InputGroupAddon
                            addonType="append"
                            tag="div"
                          >
                            blubb
                          </InputGroupAddon>,
                          null,
                          <FieldError
                            context={
                              Object {
                                "stringFormatter": [MockFunction] {
                                  "calls": Array [
                                    Array [
                                      "ojs_select_placeholder",
                                    ],
                                    Array [
                                      "demo",
                                    ],
                                    Array [
                                      "blubb",
                                    ],
                                  ],
                                  "results": Array [
                                    Object {
                                      "isThrow": false,
                                      "value": "ojs_select_placeholder",
                                    },
                                    Object {
                                      "isThrow": false,
                                      "value": "demo",
                                    },
                                    Object {
                                      "isThrow": false,
                                      "value": "blubb",
                                    },
                                  ],
                                },
                              }
                            }
                            error={null}
                            id="field0_errors"
                            invalid={false}
                          />,
                        ],
                        "className": "input-group",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": Array [
                          <InputGroupAddon
                            addonType="prepend"
                            tag="div"
                          >
                            demo
                          </InputGroupAddon>,
                          <TestComponent />,
                          <InputGroupAddon
                            addonType="append"
                            tag="div"
                          >
                            blubb
                          </InputGroupAddon>,
                          null,
                          <FieldError
                            context={
                              Object {
                                "stringFormatter": [MockFunction] {
                                  "calls": Array [
                                    Array [
                                      "ojs_select_placeholder",
                                    ],
                                    Array [
                                      "demo",
                                    ],
                                    Array [
                                      "blubb",
                                    ],
                                  ],
                                  "results": Array [
                                    Object {
                                      "isThrow": false,
                                      "value": "ojs_select_placeholder",
                                    },
                                    Object {
                                      "isThrow": false,
                                      "value": "demo",
                                    },
                                    Object {
                                      "isThrow": false,
                                      "value": "blubb",
                                    },
                                  ],
                                },
                              }
                            }
                            error={null}
                            id="field0_errors"
                            invalid={false}
                          />,
                        ],
                        "className": "input-group",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseTime": 0,
                      "sibling": null,
                      "stateNode": <div
                        class="input-group"
                      >
                        <div
                          class="input-group-prepend"
                        >
                          <span
                            class="input-group-text"
                          >
                            demo
                          </span>
                        </div>
                        <div
                          id="field0"
                        />
                        <div
                          class="input-group-append"
                        >
                          <span
                            class="input-group-text"
                          >
                            blubb
                          </span>
                        </div>
                      </div>,
                      "tag": 5,
                      "treeBaseTime": 0,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "effectTag": 1,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": Array [
                        <InputGroupAddon
                          addonType="prepend"
                          tag="div"
                        >
                          demo
                        </InputGroupAddon>,
                        <TestComponent />,
                        <InputGroupAddon
                          addonType="append"
                          tag="div"
                        >
                          blubb
                        </InputGroupAddon>,
                        null,
                        <FieldError
                          context={
                            Object {
                              "stringFormatter": [MockFunction] {
                                "calls": Array [
                                  Array [
                                    "ojs_select_placeholder",
                                  ],
                                  Array [
                                    "demo",
                                  ],
                                  Array [
                                    "blubb",
                                  ],
                                ],
                                "results": Array [
                                  Object {
                                    "isThrow": false,
                                    "value": "ojs_select_placeholder",
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": "demo",
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": "blubb",
                                  },
                                ],
                              },
                            }
                          }
                          error={null}
                          id="field0_errors"
                          invalid={false}
                        />,
                      ],
                      "tag": "div",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": Array [
                        <InputGroupAddon
                          addonType="prepend"
                          tag="div"
                        >
                          demo
                        </InputGroupAddon>,
                        <TestComponent />,
                        <InputGroupAddon
                          addonType="append"
                          tag="div"
                        >
                          blubb
                        </InputGroupAddon>,
                        null,
                        <FieldError
                          context={
                            Object {
                              "stringFormatter": [MockFunction] {
                                "calls": Array [
                                  Array [
                                    "ojs_select_placeholder",
                                  ],
                                  Array [
                                    "demo",
                                  ],
                                  Array [
                                    "blubb",
                                  ],
                                ],
                                "results": Array [
                                  Object {
                                    "isThrow": false,
                                    "value": "ojs_select_placeholder",
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": "demo",
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": "blubb",
                                  },
                                ],
                              },
                            }
                          }
                          error={null}
                          id="field0_errors"
                          invalid={false}
                        />,
                      ],
                      "tag": "div",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseTime": 0,
                    "sibling": null,
                    "stateNode": null,
                    "tag": 1,
                    "treeBaseTime": 0,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": Array [
                      <InputGroup
                        tag="div"
                      >
                        <InputGroupAddon
                          addonType="prepend"
                          tag="div"
                        >
                          demo
                        </InputGroupAddon>
                        <TestComponent />
                        <InputGroupAddon
                          addonType="append"
                          tag="div"
                        >
                          blubb
                        </InputGroupAddon>
                        <FieldError
                          context={
                            Object {
                              "stringFormatter": [MockFunction] {
                                "calls": Array [
                                  Array [
                                    "ojs_select_placeholder",
                                  ],
                                  Array [
                                    "demo",
                                  ],
                                  Array [
                                    "blubb",
                                  ],
                                ],
                                "results": Array [
                                  Object {
                                    "isThrow": false,
                                    "value": "ojs_select_placeholder",
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": "demo",
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": "blubb",
                                  },
                                ],
                              },
                            }
                          }
                          error={null}
                          id="field0_errors"
                          invalid={false}
                        />
                      </InputGroup>,
                      null,
                    ],
                    "className": "col-sm-9",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": Array [
                      <InputGroup
                        tag="div"
                      >
                        <InputGroupAddon
                          addonType="prepend"
                          tag="div"
                        >
                          demo
                        </InputGroupAddon>
                        <TestComponent />
                        <InputGroupAddon
                          addonType="append"
                          tag="div"
                        >
                          blubb
                        </InputGroupAddon>
                        <FieldError
                          context={
                            Object {
                              "stringFormatter": [MockFunction] {
                                "calls": Array [
                                  Array [
                                    "ojs_select_placeholder",
                                  ],
                                  Array [
                                    "demo",
                                  ],
                                  Array [
                                    "blubb",
                                  ],
                                ],
                                "results": Array [
                                  Object {
                                    "isThrow": false,
                                    "value": "ojs_select_placeholder",
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": "demo",
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": "blubb",
                                  },
                                ],
                              },
                            }
                          }
                          error={null}
                          id="field0_errors"
                          invalid={false}
                        />
                      </InputGroup>,
                      null,
                    ],
                    "className": "col-sm-9",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseTime": 0,
                  "sibling": null,
                  "stateNode": <div
                    class="col-sm-9"
                  >
                    <div
                      class="input-group"
                    >
                      <div
                        class="input-group-prepend"
                      >
                        <span
                          class="input-group-text"
                        >
                          demo
                        </span>
                      </div>
                      <div
                        id="field0"
                      />
                      <div
                        class="input-group-append"
                      >
                        <span
                          class="input-group-text"
                        >
                          blubb
                        </span>
                      </div>
                    </div>
                  </div>,
                  "tag": 5,
                  "treeBaseTime": 0,
                  "type": "div",
                  "updateQueue": null,
                },
                "effectTag": 1,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 1,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": Array [
                    <InputGroup
                      tag="div"
                    >
                      <InputGroupAddon
                        addonType="prepend"
                        tag="div"
                      >
                        demo
                      </InputGroupAddon>
                      <TestComponent />
                      <InputGroupAddon
                        addonType="append"
                        tag="div"
                      >
                        blubb
                      </InputGroupAddon>
                      <FieldError
                        context={
                          Object {
                            "stringFormatter": [MockFunction] {
                              "calls": Array [
                                Array [
                                  "ojs_select_placeholder",
                                ],
                                Array [
                                  "demo",
                                ],
                                Array [
                                  "blubb",
                                ],
                              ],
                              "results": Array [
                                Object {
                                  "isThrow": false,
                                  "value": "ojs_select_placeholder",
                                },
                                Object {
                                  "isThrow": false,
                                  "value": "demo",
                                },
                                Object {
                                  "isThrow": false,
                                  "value": "blubb",
                                },
                              ],
                            },
                          }
                        }
                        error={null}
                        id="field0_errors"
                        invalid={false}
                      />
                    </InputGroup>,
                    null,
                  ],
                  "sm": "9",
                  "tag": "div",
                  "widths": Array [
                    "xs",
                    "sm",
                    "md",
                    "lg",
                    "xl",
                  ],
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": Array [
                    <InputGroup
                      tag="div"
                    >
                      <InputGroupAddon
                        addonType="prepend"
                        tag="div"
                      >
                        demo
                      </InputGroupAddon>
                      <TestComponent />
                      <InputGroupAddon
                        addonType="append"
                        tag="div"
                      >
                        blubb
                      </InputGroupAddon>
                      <FieldError
                        context={
                          Object {
                            "stringFormatter": [MockFunction] {
                              "calls": Array [
                                Array [
                                  "ojs_select_placeholder",
                                ],
                                Array [
                                  "demo",
                                ],
                                Array [
                                  "blubb",
                                ],
                              ],
                              "results": Array [
                                Object {
                                  "isThrow": false,
                                  "value": "ojs_select_placeholder",
                                },
                                Object {
                                  "isThrow": false,
                                  "value": "demo",
                                },
                                Object {
                                  "isThrow": false,
                                  "value": "blubb",
                                },
                              ],
                            },
                          }
                        }
                        error={null}
                        id="field0_errors"
                        invalid={false}
                      />
                    </InputGroup>,
                    null,
                  ],
                  "sm": "9",
                  "tag": "div",
                  "widths": Array [
                    "xs",
                    "sm",
                    "md",
                    "lg",
                    "xl",
                  ],
                },
                "ref": null,
                "return": [Circular],
                "selfBaseTime": 0,
                "sibling": null,
                "stateNode": null,
                "tag": 1,
                "treeBaseTime": 0,
                "type": [Function],
                "updateQueue": null,
              },
              "stateNode": null,
              "tag": 1,
              "treeBaseTime": 0,
              "type": [Function],
              "updateQueue": null,
            },
            "effectTag": 0,
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "children": Array [
                <Label
                  className="text-right"
                  for="field0"
                  sm="3"
                  tag="label"
                  widths={
                    Array [
                      "xs",
                      "sm",
                      "md",
                      "lg",
                      "xl",
                    ]
                  }
                >
                  ojs_select_placeholder
                </Label>,
                <Col
                  sm="9"
                  tag="div"
                  widths={
                    Array [
                      "xs",
                      "sm",
                      "md",
                      "lg",
                      "xl",
                    ]
                  }
                >
                  <InputGroup
                    tag="div"
                  >
                    <InputGroupAddon
                      addonType="prepend"
                      tag="div"
                    >
                      demo
                    </InputGroupAddon>
                    <TestComponent />
                    <InputGroupAddon
                      addonType="append"
                      tag="div"
                    >
                      blubb
                    </InputGroupAddon>
                    <FieldError
                      context={
                        Object {
                          "stringFormatter": [MockFunction] {
                            "calls": Array [
                              Array [
                                "ojs_select_placeholder",
                              ],
                              Array [
                                "demo",
                              ],
                              Array [
                                "blubb",
                              ],
                            ],
                            "results": Array [
                              Object {
                                "isThrow": false,
                                "value": "ojs_select_placeholder",
                              },
                              Object {
                                "isThrow": false,
                                "value": "demo",
                              },
                              Object {
                                "isThrow": false,
                                "value": "blubb",
                              },
                            ],
                          },
                        }
                      }
                      error={null}
                      id="field0_errors"
                      invalid={false}
                    />
                  </InputGroup>
                </Col>,
              ],
              "className": "row form-group",
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "children": Array [
                <Label
                  className="text-right"
                  for="field0"
                  sm="3"
                  tag="label"
                  widths={
                    Array [
                      "xs",
                      "sm",
                      "md",
                      "lg",
                      "xl",
                    ]
                  }
                >
                  ojs_select_placeholder
                </Label>,
                <Col
                  sm="9"
                  tag="div"
                  widths={
                    Array [
                      "xs",
                      "sm",
                      "md",
                      "lg",
                      "xl",
                    ]
                  }
                >
                  <InputGroup
                    tag="div"
                  >
                    <InputGroupAddon
                      addonType="prepend"
                      tag="div"
                    >
                      demo
                    </InputGroupAddon>
                    <TestComponent />
                    <InputGroupAddon
                      addonType="append"
                      tag="div"
                    >
                      blubb
                    </InputGroupAddon>
                    <FieldError
                      context={
                        Object {
                          "stringFormatter": [MockFunction] {
                            "calls": Array [
                              Array [
                                "ojs_select_placeholder",
                              ],
                              Array [
                                "demo",
                              ],
                              Array [
                                "blubb",
                              ],
                            ],
                            "results": Array [
                              Object {
                                "isThrow": false,
                                "value": "ojs_select_placeholder",
                              },
                              Object {
                                "isThrow": false,
                                "value": "demo",
                              },
                              Object {
                                "isThrow": false,
                                "value": "blubb",
                              },
                            ],
                          },
                        }
                      }
                      error={null}
                      id="field0_errors"
                      invalid={false}
                    />
                  </InputGroup>
                </Col>,
              ],
              "className": "row form-group",
            },
            "ref": null,
            "return": [Circular],
            "selfBaseTime": 0,
            "sibling": null,
            "stateNode": <div
              class="row form-group"
            >
              <label
                class="text-right col-sm-3 col-form-label"
                for="field0"
              >
                ojs_select_placeholder
              </label>
              <div
                class="col-sm-9"
              >
                <div
                  class="input-group"
                >
                  <div
                    class="input-group-prepend"
                  >
                    <span
                      class="input-group-text"
                    >
                      demo
                    </span>
                  </div>
                  <div
                    id="field0"
                  />
                  <div
                    class="input-group-append"
                  >
                    <span
                      class="input-group-text"
                    >
                      blubb
                    </span>
                  </div>
                </div>
              </div>
            </div>,
            "tag": 5,
            "treeBaseTime": 0,
            "type": "div",
            "updateQueue": null,
          },
          "effectTag": 1,
          "expirationTime": 0,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "children": Array [
              <Label
                className="text-right"
                for="field0"
                sm="3"
                tag="label"
                widths={
                  Array [
                    "xs",
                    "sm",
                    "md",
                    "lg",
                    "xl",
                  ]
                }
              >
                ojs_select_placeholder
              </Label>,
              <Col
                sm="9"
                tag="div"
                widths={
                  Array [
                    "xs",
                    "sm",
                    "md",
                    "lg",
                    "xl",
                  ]
                }
              >
                <InputGroup
                  tag="div"
                >
                  <InputGroupAddon
                    addonType="prepend"
                    tag="div"
                  >
                    demo
                  </InputGroupAddon>
                  <TestComponent />
                  <InputGroupAddon
                    addonType="append"
                    tag="div"
                  >
                    blubb
                  </InputGroupAddon>
                  <FieldError
                    context={
                      Object {
                        "stringFormatter": [MockFunction] {
                          "calls": Array [
                            Array [
                              "ojs_select_placeholder",
                            ],
                            Array [
                              "demo",
                            ],
                            Array [
                              "blubb",
                            ],
                          ],
                          "results": Array [
                            Object {
                              "isThrow": false,
                              "value": "ojs_select_placeholder",
                            },
                            Object {
                              "isThrow": false,
                              "value": "demo",
                            },
                            Object {
                              "isThrow": false,
                              "value": "blubb",
                            },
                          ],
                        },
                      }
                    }
                    error={null}
                    id="field0_errors"
                    invalid={false}
                  />
                </InputGroup>
              </Col>,
            ],
            "className": "",
            "row": true,
            "tag": "div",
          },
          "memoizedState": null,
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "children": Array [
              <Label
                className="text-right"
                for="field0"
                sm="3"
                tag="label"
                widths={
                  Array [
                    "xs",
                    "sm",
                    "md",
                    "lg",
                    "xl",
                  ]
                }
              >
                ojs_select_placeholder
              </Label>,
              <Col
                sm="9"
                tag="div"
                widths={
                  Array [
                    "xs",
                    "sm",
                    "md",
                    "lg",
                    "xl",
                  ]
                }
              >
                <InputGroup
                  tag="div"
                >
                  <InputGroupAddon
                    addonType="prepend"
                    tag="div"
                  >
                    demo
                  </InputGroupAddon>
                  <TestComponent />
                  <InputGroupAddon
                    addonType="append"
                    tag="div"
                  >
                    blubb
                  </InputGroupAddon>
                  <FieldError
                    context={
                      Object {
                        "stringFormatter": [MockFunction] {
                          "calls": Array [
                            Array [
                              "ojs_select_placeholder",
                            ],
                            Array [
                              "demo",
                            ],
                            Array [
                              "blubb",
                            ],
                          ],
                          "results": Array [
                            Object {
                              "isThrow": false,
                              "value": "ojs_select_placeholder",
                            },
                            Object {
                              "isThrow": false,
                              "value": "demo",
                            },
                            Object {
                              "isThrow": false,
                              "value": "blubb",
                            },
                          ],
                        },
                      }
                    }
                    error={null}
                    id="field0_errors"
                    invalid={false}
                  />
                </InputGroup>
              </Col>,
            ],
            "className": "",
            "row": true,
            "tag": "div",
          },
          "ref": null,
          "return": [Circular],
          "selfBaseTime": 0,
          "sibling": null,
          "stateNode": null,
          "tag": 1,
          "treeBaseTime": 0,
          "type": [Function],
          "updateQueue": null,
        },
        "effectTag": 1,
        "expirationTime": 0,
        "firstEffect": null,
        "index": 0,
        "key": null,
        "lastEffect": null,
        "memoizedProps": Object {
          "children": <TestComponent />,
          "field": Object {
            "id": "field0",
            "invalid": false,
            "name": "field0",
            "onBlur": [MockFunction],
            "onChange": [MockFunction],
            "value": "",
          },
          "info": null,
          "label": "ojs_select_placeholder",
          "meta": Object {
            "error": null,
            "isValidating": false,
            "stringFormatter": [MockFunction] {
              "calls": Array [
                Array [
                  "ojs_select_placeholder",
                ],
                Array [
                  "demo",
                ],
                Array [
                  "blubb",
                ],
              ],
              "results": Array [
                Object {
                  "isThrow": false,
                  "value": "ojs_select_placeholder",
                },
                Object {
                  "isThrow": false,
                  "value": "demo",
                },
                Object {
                  "isThrow": false,
                  "value": "blubb",
                },
              ],
            },
            "valid": true,
          },
          "prefix": "demo",
          "suffix": "blubb",
          "validators": null,
        },
        "memoizedState": Object {
          "infoVisible": false,
        },
        "mode": 0,
        "nextEffect": null,
        "pendingProps": Object {
          "children": <TestComponent />,
          "field": Object {
            "id": "field0",
            "invalid": false,
            "name": "field0",
            "onBlur": [MockFunction],
            "onChange": [MockFunction],
            "value": "",
          },
          "info": null,
          "label": "ojs_select_placeholder",
          "meta": Object {
            "error": null,
            "isValidating": false,
            "stringFormatter": [MockFunction] {
              "calls": Array [
                Array [
                  "ojs_select_placeholder",
                ],
                Array [
                  "demo",
                ],
                Array [
                  "blubb",
                ],
              ],
              "results": Array [
                Object {
                  "isThrow": false,
                  "value": "ojs_select_placeholder",
                },
                Object {
                  "isThrow": false,
                  "value": "demo",
                },
                Object {
                  "isThrow": false,
                  "value": "blubb",
                },
              ],
            },
            "valid": true,
          },
          "prefix": "demo",
          "suffix": "blubb",
          "validators": null,
        },
        "ref": null,
        "return": FiberNode {
          "_debugID": 161,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": null,
          "_debugSource": null,
          "alternate": null,
          "child": [Circular],
          "effectTag": 1,
          "expirationTime": 0,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {
              "children": <TestComponent />,
              "field": Object {
                "id": "field0",
                "invalid": false,
                "name": "field0",
                "onBlur": [MockFunction],
                "onChange": [MockFunction],
                "value": "",
              },
              "info": null,
              "label": "ojs_select_placeholder",
              "meta": Object {
                "error": null,
                "isValidating": false,
                "stringFormatter": [MockFunction] {
                  "calls": Array [
                    Array [
                      "ojs_select_placeholder",
                    ],
                    Array [
                      "demo",
                    ],
                    Array [
                      "blubb",
                    ],
                  ],
                  "results": Array [
                    Object {
                      "isThrow": false,
                      "value": "ojs_select_placeholder",
                    },
                    Object {
                      "isThrow": false,
                      "value": "demo",
                    },
                    Object {
                      "isThrow": false,
                      "value": "blubb",
                    },
                  ],
                },
                "valid": true,
              },
              "prefix": "demo",
              "suffix": "blubb",
              "validators": null,
            },
          },
          "memoizedState": Object {
            "context": null,
            "mount": true,
            "props": Object {
              "children": <TestComponent />,
              "field": Object {
                "id": "field0",
                "invalid": false,
                "name": "field0",
                "onBlur": [MockFunction],
                "onChange": [MockFunction],
                "value": "",
              },
              "info": null,
              "label": "ojs_select_placeholder",
              "meta": Object {
                "error": null,
                "isValidating": false,
                "stringFormatter": [MockFunction] {
                  "calls": Array [
                    Array [
                      "ojs_select_placeholder",
                    ],
                    Array [
                      "demo",
                    ],
                    Array [
                      "blubb",
                    ],
                  ],
                  "results": Array [
                    Object {
                      "isThrow": false,
                      "value": "ojs_select_placeholder",
                    },
                    Object {
                      "isThrow": false,
                      "value": "demo",
                    },
                    Object {
                      "isThrow": false,
                      "value": "blubb",
                    },
                  ],
                },
                "valid": true,
              },
              "prefix": "demo",
              "suffix": "blubb",
              "validators": null,
            },
          },
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {
              "children": <TestComponent />,
              "field": Object {
                "id": "field0",
                "invalid": false,
                "name": "field0",
                "onBlur": [MockFunction],
                "onChange": [MockFunction],
                "value": "",
              },
              "info": null,
              "label": "ojs_select_placeholder",
              "meta": Object {
                "error": null,
                "isValidating": false,
                "stringFormatter": [MockFunction] {
                  "calls": Array [
                    Array [
                      "ojs_select_placeholder",
                    ],
                    Array [
                      "demo",
                    ],
                    Array [
                      "blubb",
                    ],
                  ],
                  "results": Array [
                    Object {
                      "isThrow": false,
                      "value": "ojs_select_placeholder",
                    },
                    Object {
                      "isThrow": false,
                      "value": "demo",
                    },
                    Object {
                      "isThrow": false,
                      "value": "blubb",
                    },
                  ],
                },
                "valid": true,
              },
              "prefix": "demo",
              "suffix": "blubb",
              "validators": null,
            },
          },
          "ref": null,
          "return": FiberNode {
            "_debugID": 159,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "alternate": FiberNode {
              "_debugID": 159,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "alternate": [Circular],
              "child": null,
              "effectTag": 0,
              "expirationTime": 1,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": null,
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseTime": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                    class="row form-group"
                  >
                    <label
                      class="text-right col-sm-3 col-form-label"
                      for="field0"
                    >
                      ojs_select_placeholder
                    </label>
                    <div
                      class="col-sm-9"
                    >
                      <div
                        class="input-group"
                      >
                        <div
                          class="input-group-prepend"
                        >
                          <span
                            class="input-group-text"
                          >
                            demo
                          </span>
                        </div>
                        <div
                          id="field0"
                        />
                        <div
                          class="input-group-append"
                        >
                          <span
                            class="input-group-text"
                          >
                            blubb
                          </span>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "remainingExpirationTime": 0,
              },
              "tag": 3,
              "treeBaseTime": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": null,
                "expirationTime": 1,
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": Object {
                  "callback": null,
                  "expirationTime": 1,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "children": <TestComponent />,
                          "field": Object {
                            "id": "field0",
                            "invalid": false,
                            "name": "field0",
                            "onBlur": [MockFunction],
                            "onChange": [MockFunction],
                            "value": "",
                          },
                          "info": null,
                          "label": "ojs_select_placeholder",
                          "meta": Object {
                            "error": null,
                            "isValidating": false,
                            "stringFormatter": [MockFunction] {
                              "calls": Array [
                                Array [
                                  "ojs_select_placeholder",
                                ],
                                Array [
                                  "demo",
                                ],
                                Array [
                                  "blubb",
                                ],
                              ],
                              "results": Array [
                                Object {
                                  "isThrow": false,
                                  "value": "ojs_select_placeholder",
                                },
                                Object {
                                  "isThrow": false,
                                  "value": "demo",
                                },
                                Object {
                                  "isThrow": false,
                                  "value": "blubb",
                                },
                              ],
                            },
                            "valid": true,
                          },
                          "prefix": "demo",
                          "suffix": "blubb",
                          "validators": null,
                        }
                      }
                    />,
                  },
                  "tag": 0,
                },
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": Object {
                  "callback": null,
                  "expirationTime": 1,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "children": <TestComponent />,
                          "field": Object {
                            "id": "field0",
                            "invalid": false,
                            "name": "field0",
                            "onBlur": [MockFunction],
                            "onChange": [MockFunction],
                            "value": "",
                          },
                          "info": null,
                          "label": "ojs_select_placeholder",
                          "meta": Object {
                            "error": null,
                            "isValidating": false,
                            "stringFormatter": [MockFunction] {
                              "calls": Array [
                                Array [
                                  "ojs_select_placeholder",
                                ],
                                Array [
                                  "demo",
                                ],
                                Array [
                                  "blubb",
                                ],
                              ],
                              "results": Array [
                                Object {
                                  "isThrow": false,
                                  "value": "ojs_select_placeholder",
                                },
                                Object {
                                  "isThrow": false,
                                  "value": "demo",
                                },
                                Object {
                                  "isThrow": false,
                                  "value": "blubb",
                                },
                              ],
                            },
                            "valid": true,
                          },
                          "prefix": "demo",
                          "suffix": "blubb",
                          "validators": null,
                        }
                      }
                    />,
                  },
                  "tag": 0,
                },
              },
            },
            "child": [Circular],
            "effectTag": 32,
            "expirationTime": 0,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": null,
            "memoizedState": Object {
              "element": <WrapperComponent
                Component={[Function]}
                context={null}
                props={
                  Object {
                    "children": <TestComponent />,
                    "field": Object {
                      "id": "field0",
                      "invalid": false,
                      "name": "field0",
                      "onBlur": [MockFunction],
                      "onChange": [MockFunction],
                      "value": "",
                    },
                    "info": null,
                    "label": "ojs_select_placeholder",
                    "meta": Object {
                      "error": null,
                      "isValidating": false,
                      "stringFormatter": [MockFunction] {
                        "calls": Array [
                          Array [
                            "ojs_select_placeholder",
                          ],
                          Array [
                            "demo",
                          ],
                          Array [
                            "blubb",
                          ],
                        ],
                        "results": Array [
                          Object {
                            "isThrow": false,
                            "value": "ojs_select_placeholder",
                          },
                          Object {
                            "isThrow": false,
                            "value": "demo",
                          },
                          Object {
                            "isThrow": false,
                            "value": "blubb",
                          },
                        ],
                      },
                      "valid": true,
                    },
                    "prefix": "demo",
                    "suffix": "blubb",
                    "validators": null,
                  }
                }
              />,
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": null,
            "selfBaseTime": 0,
            "sibling": null,
            "stateNode": Object {
              "containerInfo": <div>
                <div
                  class="row form-group"
                >
                  <label
                    class="text-right col-sm-3 col-form-label"
                    for="field0"
                  >
                    ojs_select_placeholder
                  </label>
                  <div
                    class="col-sm-9"
                  >
                    <div
                      class="input-group"
                    >
                      <div
                        class="input-group-prepend"
                      >
                        <span
                          class="input-group-text"
                        >
                          demo
                        </span>
                      </div>
                      <div
                        id="field0"
                      />
                      <div
                        class="input-group-append"
                      >
                        <span
                          class="input-group-text"
                        >
                          blubb
                        </span>
                      </div>
                    </div>
                  </div>
                </div>
              </div>,
              "context": Object {},
              "current": [Circular],
              "earliestPendingTime": 0,
              "earliestSuspendedTime": 0,
              "finishedWork": null,
              "firstBatch": null,
              "hydrate": false,
              "latestPendingTime": 0,
              "latestPingedTime": 0,
              "latestSuspendedTime": 0,
              "nextScheduledRoot": null,
              "pendingChildren": null,
              "pendingCommitExpirationTime": 0,
              "pendingContext": null,
              "remainingExpirationTime": 0,
            },
            "tag": 3,
            "treeBaseTime": 0,
            "type": null,
            "updateQueue": Object {
              "baseState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                    Object {
                      "children": <TestComponent />,
                      "field": Object {
                        "id": "field0",
                        "invalid": false,
                        "name": "field0",
                        "onBlur": [MockFunction],
                        "onChange": [MockFunction],
                        "value": "",
                      },
                      "info": null,
                      "label": "ojs_select_placeholder",
                      "meta": Object {
                        "error": null,
                        "isValidating": false,
                        "stringFormatter": [MockFunction] {
                          "calls": Array [
                            Array [
                              "ojs_select_placeholder",
                            ],
                            Array [
                              "demo",
                            ],
                            Array [
                              "blubb",
                            ],
                          ],
                          "results": Array [
                            Object {
                              "isThrow": false,
                              "value": "ojs_select_placeholder",
                            },
                            Object {
                              "isThrow": false,
                              "value": "demo",
                            },
                            Object {
                              "isThrow": false,
                              "value": "blubb",
                            },
                          ],
                        },
                        "valid": true,
                      },
                      "prefix": "demo",
                      "suffix": "blubb",
                      "validators": null,
                    }
                  }
                />,
              },
              "expirationTime": 0,
              "firstCapturedEffect": null,
              "firstCapturedUpdate": null,
              "firstEffect": null,
              "firstUpdate": null,
              "lastCapturedEffect": null,
              "lastCapturedUpdate": null,
              "lastEffect": null,
              "lastUpdate": null,
            },
          },
          "selfBaseTime": 0,
          "sibling": null,
          "stateNode": WrapperComponent {
            "_reactInternalFiber": [Circular],
            "_reactInternalInstance": Object {},
            "context": Object {},
            "props": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "children": <TestComponent />,
                "field": Object {
                  "id": "field0",
                  "invalid": false,
                  "name": "field0",
                  "onBlur": [MockFunction],
                  "onChange": [MockFunction],
                  "value": "",
                },
                "info": null,
                "label": "ojs_select_placeholder",
                "meta": Object {
                  "error": null,
                  "isValidating": false,
                  "stringFormatter": [MockFunction] {
                    "calls": Array [
                      Array [
                        "ojs_select_placeholder",
                      ],
                      Array [
                        "demo",
                      ],
                      Array [
                        "blubb",
                      ],
                    ],
                    "results": Array [
                      Object {
                        "isThrow": false,
                        "value": "ojs_select_placeholder",
                      },
                      Object {
                        "isThrow": false,
                        "value": "demo",
                      },
                      Object {
                        "isThrow": false,
                        "value": "blubb",
                      },
                    ],
                  },
                  "valid": true,
                },
                "prefix": "demo",
                "suffix": "blubb",
                "validators": null,
              },
            },
            "refs": Object {},
            "state": Object {
              "context": null,
              "mount": true,
              "props": Object {
                "children": <TestComponent />,
                "field": Object {
                  "id": "field0",
                  "invalid": false,
                  "name": "field0",
                  "onBlur": [MockFunction],
                  "onChange": [MockFunction],
                  "value": "",
                },
                "info": null,
                "label": "ojs_select_placeholder",
                "meta": Object {
                  "error": null,
                  "isValidating": false,
                  "stringFormatter": [MockFunction] {
                    "calls": Array [
                      Array [
                        "ojs_select_placeholder",
                      ],
                      Array [
                        "demo",
                      ],
                      Array [
                        "blubb",
                      ],
                    ],
                    "results": Array [
                      Object {
                        "isThrow": false,
                        "value": "ojs_select_placeholder",
                      },
                      Object {
                        "isThrow": false,
                        "value": "demo",
                      },
                      Object {
                        "isThrow": false,
                        "value": "blubb",
                      },
                    ],
                  },
                  "valid": true,
                },
                "prefix": "demo",
                "suffix": "blubb",
                "validators": null,
              },
            },
            "updater": Object {
              "enqueueForceUpdate": [Function],
              "enqueueReplaceState": [Function],
              "enqueueSetState": [Function],
              "isMounted": [Function],
            },
          },
          "tag": 2,
          "treeBaseTime": 0,
          "type": [Function],
          "updateQueue": null,
        },
        "selfBaseTime": 0,
        "sibling": null,
        "stateNode": [Circular],
        "tag": 2,
        "treeBaseTime": 0,
        "type": [Function],
        "updateQueue": null,
      },
      "_reactInternalInstance": Object {},
      "context": Object {},
      "props": Object {
        "children": <TestComponent />,
        "field": Object {
          "id": "field0",
          "invalid": false,
          "name": "field0",
          "onBlur": [MockFunction],
          "onChange": [MockFunction],
          "value": "",
        },
        "info": null,
        "label": "ojs_select_placeholder",
        "meta": Object {
          "error": null,
          "isValidating": false,
          "stringFormatter": [MockFunction] {
            "calls": Array [
              Array [
                "ojs_select_placeholder",
              ],
              Array [
                "demo",
              ],
              Array [
                "blubb",
              ],
            ],
            "results": Array [
              Object {
                "isThrow": false,
                "value": "ojs_select_placeholder",
              },
              Object {
                "isThrow": false,
                "value": "demo",
              },
              Object {
                "isThrow": false,
                "value": "blubb",
              },
            ],
          },
          "valid": true,
        },
        "prefix": "demo",
        "suffix": "blubb",
        "validators": null,
      },
      "refs": Object {},
      "state": Object {
        "infoVisible": false,
      },
      "toggleInfo": [Function],
      "updater": Object {
        "enqueueForceUpdate": [Function],
        "enqueueReplaceState": [Function],
        "enqueueSetState": [Function],
        "isMounted": [Function],
      },
    },
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <TestComponent />,
      "field": Object {
        "id": "field0",
        "invalid": false,
        "name": "field0",
        "onBlur": [MockFunction],
        "onChange": [MockFunction],
        "value": "",
      },
      "info": null,
      "label": "ojs_select_placeholder",
      "meta": Object {
        "error": null,
        "isValidating": false,
        "stringFormatter": [MockFunction] {
          "calls": Array [
            Array [
              "ojs_select_placeholder",
            ],
            Array [
              "demo",
            ],
            Array [
              "blubb",
            ],
          ],
          "results": Array [
            Object {
              "isThrow": false,
              "value": "ojs_select_placeholder",
            },
            Object {
              "isThrow": false,
              "value": "demo",
            },
            Object {
              "isThrow": false,
              "value": "blubb",
            },
          ],
        },
        "valid": true,
      },
      "prefix": "demo",
      "suffix": "blubb",
      "validators": null,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <Label
            className="text-right"
            for="field0"
            sm="3"
            tag="label"
            widths={
              Array [
                "xs",
                "sm",
                "md",
                "lg",
                "xl",
              ]
            }
          >
            ojs_select_placeholder
          </Label>,
          <Col
            sm="9"
            tag="div"
            widths={
              Array [
                "xs",
                "sm",
                "md",
                "lg",
                "xl",
              ]
            }
          >
            <InputGroup
              tag="div"
            >
              <InputGroupAddon
                addonType="prepend"
                tag="div"
              >
                demo
              </InputGroupAddon>
              <TestComponent />
              <InputGroupAddon
                addonType="append"
                tag="div"
              >
                blubb
              </InputGroupAddon>
              <FieldError
                context={
                  Object {
                    "stringFormatter": [MockFunction] {
                      "calls": Array [
                        Array [
                          "ojs_select_placeholder",
                        ],
                        Array [
                          "demo",
                        ],
                        Array [
                          "blubb",
                        ],
                      ],
                      "results": Array [
                        Object {
                          "isThrow": false,
                          "value": "ojs_select_placeholder",
                        },
                        Object {
                          "isThrow": false,
                          "value": "demo",
                        },
                        Object {
                          "isThrow": false,
                          "value": "blubb",
                        },
                      ],
                    },
                  }
                }
                error={null}
                id="field0_errors"
                invalid={false}
              />
            </InputGroup>
          </Col>,
        ],
        "className": "",
        "row": true,
        "tag": "div",
      },
      "ref": null,
      "rendered": Object {
        "instance": <div
          class="row form-group"
        >
          <label
            class="text-right col-sm-3 col-form-label"
            for="field0"
          >
            ojs_select_placeholder
          </label>
          <div
            class="col-sm-9"
          >
            <div
              class="input-group"
            >
              <div
                class="input-group-prepend"
              >
                <span
                  class="input-group-text"
                >
                  demo
                </span>
              </div>
              <div
                id="field0"
              />
              <div
                class="input-group-append"
              >
                <span
                  class="input-group-text"
                >
                  blubb
                </span>
              </div>
            </div>
          </div>
        </div>,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <Label
              className="text-right"
              for="field0"
              sm="3"
              tag="label"
              widths={
                Array [
                  "xs",
                  "sm",
                  "md",
                  "lg",
                  "xl",
                ]
              }
            >
              ojs_select_placeholder
            </Label>,
            <Col
              sm="9"
              tag="div"
              widths={
                Array [
                  "xs",
                  "sm",
                  "md",
                  "lg",
                  "xl",
                ]
              }
            >
              <InputGroup
                tag="div"
              >
                <InputGroupAddon
                  addonType="prepend"
                  tag="div"
                >
                  demo
                </InputGroupAddon>
                <TestComponent />
                <InputGroupAddon
                  addonType="append"
                  tag="div"
                >
                  blubb
                </InputGroupAddon>
                <FieldError
                  context={
                    Object {
                      "stringFormatter": [MockFunction] {
                        "calls": Array [
                          Array [
                            "ojs_select_placeholder",
                          ],
                          Array [
                            "demo",
                          ],
                          Array [
                            "blubb",
                          ],
                        ],
                        "results": Array [
                          Object {
                            "isThrow": false,
                            "value": "ojs_select_placeholder",
                          },
                          Object {
                            "isThrow": false,
                            "value": "demo",
                          },
                          Object {
                            "isThrow": false,
                            "value": "blubb",
                          },
                        ],
                      },
                    }
                  }
                  error={null}
                  id="field0_errors"
                  invalid={false}
                />
              </InputGroup>
            </Col>,
          ],
          "className": "row form-group",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": Array [
                null,
                null,
                "ojs_select_placeholder",
                null,
              ],
              "className": "text-right",
              "for": "field0",
              "sm": "3",
              "tag": "label",
              "widths": Array [
                "xs",
                "sm",
                "md",
                "lg",
                "xl",
              ],
            },
            "ref": null,
            "rendered": Object {
              "instance": <label
                class="text-right col-sm-3 col-form-label"
                for="field0"
              >
                ojs_select_placeholder
              </label>,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  null,
                  null,
                  "ojs_select_placeholder",
                  null,
                ],
                "className": "text-right col-sm-3 col-form-label",
                "htmlFor": "field0",
              },
              "ref": null,
              "rendered": Array [
                "ojs_select_placeholder",
              ],
              "type": "label",
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": Array [
                <InputGroup
                  tag="div"
                >
                  <InputGroupAddon
                    addonType="prepend"
                    tag="div"
                  >
                    demo
                  </InputGroupAddon>
                  <TestComponent />
                  <InputGroupAddon
                    addonType="append"
                    tag="div"
                  >
                    blubb
                  </InputGroupAddon>
                  <FieldError
                    context={
                      Object {
                        "stringFormatter": [MockFunction] {
                          "calls": Array [
                            Array [
                              "ojs_select_placeholder",
                            ],
                            Array [
                              "demo",
                            ],
                            Array [
                              "blubb",
                            ],
                          ],
                          "results": Array [
                            Object {
                              "isThrow": false,
                              "value": "ojs_select_placeholder",
                            },
                            Object {
                              "isThrow": false,
                              "value": "demo",
                            },
                            Object {
                              "isThrow": false,
                              "value": "blubb",
                            },
                          ],
                        },
                      }
                    }
                    error={null}
                    id="field0_errors"
                    invalid={false}
                  />
                </InputGroup>,
                null,
              ],
              "sm": "9",
              "tag": "div",
              "widths": Array [
                "xs",
                "sm",
                "md",
                "lg",
                "xl",
              ],
            },
            "ref": null,
            "rendered": Object {
              "instance": <div
                class="col-sm-9"
              >
                <div
                  class="input-group"
                >
                  <div
                    class="input-group-prepend"
                  >
                    <span
                      class="input-group-text"
                    >
                      demo
                    </span>
                  </div>
                  <div
                    id="field0"
                  />
                  <div
                    class="input-group-append"
                  >
                    <span
                      class="input-group-text"
                    >
                      blubb
                    </span>
                  </div>
                </div>
              </div>,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <InputGroup
                    tag="div"
                  >
                    <InputGroupAddon
                      addonType="prepend"
                      tag="div"
                    >
                      demo
                    </InputGroupAddon>
                    <TestComponent />
                    <InputGroupAddon
                      addonType="append"
                      tag="div"
                    >
                      blubb
                    </InputGroupAddon>
                    <FieldError
                      context={
                        Object {
                          "stringFormatter": [MockFunction] {
                            "calls": Array [
                              Array [
                                "ojs_select_placeholder",
                              ],
                              Array [
                                "demo",
                              ],
                              Array [
                                "blubb",
                              ],
                            ],
                            "results": Array [
                              Object {
                                "isThrow": false,
                                "value": "ojs_select_placeholder",
                              },
                              Object {
                                "isThrow": false,
                                "value": "demo",
                              },
                              Object {
                                "isThrow": false,
                                "value": "blubb",
                              },
                            ],
                          },
                        }
                      }
                      error={null}
                      id="field0_errors"
                      invalid={false}
                    />
                  </InputGroup>,
                  null,
                ],
                "className": "col-sm-9",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": Array [
                      <InputGroupAddon
                        addonType="prepend"
                        tag="div"
                      >
                        demo
                      </InputGroupAddon>,
                      <TestComponent />,
                      <InputGroupAddon
                        addonType="append"
                        tag="div"
                      >
                        blubb
                      </InputGroupAddon>,
                      null,
                      <FieldError
                        context={
                          Object {
                            "stringFormatter": [MockFunction] {
                              "calls": Array [
                                Array [
                                  "ojs_select_placeholder",
                                ],
                                Array [
                                  "demo",
                                ],
                                Array [
                                  "blubb",
                                ],
                              ],
                              "results": Array [
                                Object {
                                  "isThrow": false,
                                  "value": "ojs_select_placeholder",
                                },
                                Object {
                                  "isThrow": false,
                                  "value": "demo",
                                },
                                Object {
                                  "isThrow": false,
                                  "value": "blubb",
                                },
                              ],
                            },
                          }
                        }
                        error={null}
                        id="field0_errors"
                        invalid={false}
                      />,
                    ],
                    "tag": "div",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": <div
                      class="input-group"
                    >
                      <div
                        class="input-group-prepend"
                      >
                        <span
                          class="input-group-text"
                        >
                          demo
                        </span>
                      </div>
                      <div
                        id="field0"
                      />
                      <div
                        class="input-group-append"
                      >
                        <span
                          class="input-group-text"
                        >
                          blubb
                        </span>
                      </div>
                    </div>,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        <InputGroupAddon
                          addonType="prepend"
                          tag="div"
                        >
                          demo
                        </InputGroupAddon>,
                        <TestComponent />,
                        <InputGroupAddon
                          addonType="append"
                          tag="div"
                        >
                          blubb
                        </InputGroupAddon>,
                        null,
                        <FieldError
                          context={
                            Object {
                              "stringFormatter": [MockFunction] {
                                "calls": Array [
                                  Array [
                                    "ojs_select_placeholder",
                                  ],
                                  Array [
                                    "demo",
                                  ],
                                  Array [
                                    "blubb",
                                  ],
                                ],
                                "results": Array [
                                  Object {
                                    "isThrow": false,
                                    "value": "ojs_select_placeholder",
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": "demo",
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": "blubb",
                                  },
                                ],
                              },
                            }
                          }
                          error={null}
                          id="field0_errors"
                          invalid={false}
                        />,
                      ],
                      "className": "input-group",
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "function",
                        "props": Object {
                          "addonType": "prepend",
                          "children": "demo",
                          "tag": "div",
                        },
                        "ref": null,
                        "rendered": Object {
                          "instance": <div
                            class="input-group-prepend"
                          >
                            <span
                              class="input-group-text"
                            >
                              demo
                            </span>
                          </div>,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": <InputGroupText
                              tag="span"
                            >
                              demo
                            </InputGroupText>,
                            "className": "input-group-prepend",
                          },
                          "ref": null,
                          "rendered": Array [
                            Object {
                              "instance": null,
                              "key": undefined,
                              "nodeType": "function",
                              "props": Object {
                                "children": "demo",
                                "tag": "span",
                              },
                              "ref": null,
                              "rendered": Object {
                                "instance": <span
                                  class="input-group-text"
                                >
                                  demo
                                </span>,
                                "key": undefined,
                                "nodeType": "host",
                                "props": Object {
                                  "children": "demo",
                                  "className": "input-group-text",
                                },
                                "ref": null,
                                "rendered": Array [
                                  "demo",
                                ],
                                "type": "span",
                              },
                              "type": [Function],
                            },
                          ],
                          "type": "div",
                        },
                        "type": [Function],
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "function",
                        "props": Object {},
                        "ref": null,
                        "rendered": Object {
                          "instance": <div
                            id="field0"
                          />,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "id": "field0",
                          },
                          "ref": null,
                          "rendered": Array [
                            undefined,
                          ],
                          "type": "div",
                        },
                        "type": [Function],
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "function",
                        "props": Object {
                          "addonType": "append",
                          "children": "blubb",
                          "tag": "div",
                        },
                        "ref": null,
                        "rendered": Object {
                          "instance": <div
                            class="input-group-append"
                          >
                            <span
                              class="input-group-text"
                            >
                              blubb
                            </span>
                          </div>,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": <InputGroupText
                              tag="span"
                            >
                              blubb
                            </InputGroupText>,
                            "className": "input-group-append",
                          },
                          "ref": null,
                          "rendered": Array [
                            Object {
                              "instance": null,
                              "key": undefined,
                              "nodeType": "function",
                              "props": Object {
                                "children": "blubb",
                                "tag": "span",
                              },
                              "ref": null,
                              "rendered": Object {
                                "instance": <span
                                  class="input-group-text"
                                >
                                  blubb
                                </span>,
                                "key": undefined,
                                "nodeType": "host",
                                "props": Object {
                                  "children": "blubb",
                                  "className": "input-group-text",
                                },
                                "ref": null,
                                "rendered": Array [
                                  "blubb",
                                ],
                                "type": "span",
                              },
                              "type": [Function],
                            },
                          ],
                          "type": "div",
                        },
                        "type": [Function],
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "function",
                        "props": Object {
                          "context": Object {
                            "stringFormatter": [MockFunction] {
                              "calls": Array [
                                Array [
                                  "ojs_select_placeholder",
                                ],
                                Array [
                                  "demo",
                                ],
                                Array [
                                  "blubb",
                                ],
                              ],
                              "results": Array [
                                Object {
                                  "isThrow": false,
                                  "value": "ojs_select_placeholder",
                                },
                                Object {
                                  "isThrow": false,
                                  "value": "demo",
                                },
                                Object {
                                  "isThrow": false,
                                  "value": "blubb",
                                },
                              ],
                            },
                          },
                          "error": null,
                          "id": "field0_errors",
                          "invalid": false,
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                    ],
                    "type": "div",
                  },
                  "type": [Function],
                },
              ],
              "type": "div",
            },
            "type": [Function],
          },
        ],
        "type": "div",
      },
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": FieldLine {
        "_reactInternalFiber": FiberNode {
          "_debugID": 162,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": FiberNode {
            "_debugID": 161,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "alternate": null,
            "child": [Circular],
            "effectTag": 1,
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "children": <TestComponent />,
                "field": Object {
                  "id": "field0",
                  "invalid": false,
                  "name": "field0",
                  "onBlur": [MockFunction],
                  "onChange": [MockFunction],
                  "value": "",
                },
                "info": null,
                "label": "ojs_select_placeholder",
                "meta": Object {
                  "error": null,
                  "isValidating": false,
                  "stringFormatter": [MockFunction] {
                    "calls": Array [
                      Array [
                        "ojs_select_placeholder",
                      ],
                      Array [
                        "demo",
                      ],
                      Array [
                        "blubb",
                      ],
                    ],
                    "results": Array [
                      Object {
                        "isThrow": false,
                        "value": "ojs_select_placeholder",
                      },
                      Object {
                        "isThrow": false,
                        "value": "demo",
                      },
                      Object {
                        "isThrow": false,
                        "value": "blubb",
                      },
                    ],
                  },
                  "valid": true,
                },
                "prefix": "demo",
                "suffix": "blubb",
                "validators": null,
              },
            },
            "memoizedState": Object {
              "context": null,
              "mount": true,
              "props": Object {
                "children": <TestComponent />,
                "field": Object {
                  "id": "field0",
                  "invalid": false,
                  "name": "field0",
                  "onBlur": [MockFunction],
                  "onChange": [MockFunction],
                  "value": "",
                },
                "info": null,
                "label": "ojs_select_placeholder",
                "meta": Object {
                  "error": null,
                  "isValidating": false,
                  "stringFormatter": [MockFunction] {
                    "calls": Array [
                      Array [
                        "ojs_select_placeholder",
                      ],
                      Array [
                        "demo",
                      ],
                      Array [
                        "blubb",
                      ],
                    ],
                    "results": Array [
                      Object {
                        "isThrow": false,
                        "value": "ojs_select_placeholder",
                      },
                      Object {
                        "isThrow": false,
                        "value": "demo",
                      },
                      Object {
                        "isThrow": false,
                        "value": "blubb",
                      },
                    ],
                  },
                  "valid": true,
                },
                "prefix": "demo",
                "suffix": "blubb",
                "validators": null,
              },
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "children": <TestComponent />,
                "field": Object {
                  "id": "field0",
                  "invalid": false,
                  "name": "field0",
                  "onBlur": [MockFunction],
                  "onChange": [MockFunction],
                  "value": "",
                },
                "info": null,
                "label": "ojs_select_placeholder",
                "meta": Object {
                  "error": null,
                  "isValidating": false,
                  "stringFormatter": [MockFunction] {
                    "calls": Array [
                      Array [
                        "ojs_select_placeholder",
                      ],
                      Array [
                        "demo",
                      ],
                      Array [
                        "blubb",
                      ],
                    ],
                    "results": Array [
                      Object {
                        "isThrow": false,
                        "value": "ojs_select_placeholder",
                      },
                      Object {
                        "isThrow": false,
                        "value": "demo",
                      },
                      Object {
                        "isThrow": false,
                        "value": "blubb",
                      },
                    ],
                  },
                  "valid": true,
                },
                "prefix": "demo",
                "suffix": "blubb",
                "validators": null,
              },
            },
            "ref": null,
            "return": FiberNode {
              "_debugID": 159,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "alternate": FiberNode {
                "_debugID": 159,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "alternate": [Circular],
                "child": null,
                "effectTag": 0,
                "expirationTime": 1,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": null,
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "selfBaseTime": 0,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div>
                    <div
                      class="row form-group"
                    >
                      <label
                        class="text-right col-sm-3 col-form-label"
                        for="field0"
                      >
                        ojs_select_placeholder
                      </label>
                      <div
                        class="col-sm-9"
                      >
                        <div
                          class="input-group"
                        >
                          <div
                            class="input-group-prepend"
                          >
                            <span
                              class="input-group-text"
                            >
                              demo
                            </span>
                          </div>
                          <div
                            id="field0"
                          />
                          <div
                            class="input-group-append"
                          >
                            <span
                              class="input-group-text"
                            >
                              blubb
                            </span>
                          </div>
                        </div>
                      </div>
                    </div>
                  </div>,
                  "context": Object {},
                  "current": [Circular],
                  "earliestPendingTime": 0,
                  "earliestSuspendedTime": 0,
                  "finishedWork": null,
                  "firstBatch": null,
                  "hydrate": false,
                  "latestPendingTime": 0,
                  "latestPingedTime": 0,
                  "latestSuspendedTime": 0,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingCommitExpirationTime": 0,
                  "pendingContext": null,
                  "remainingExpirationTime": 0,
                },
                "tag": 3,
                "treeBaseTime": 0,
                "type": null,
                "updateQueue": Object {
                  "baseState": null,
                  "expirationTime": 1,
                  "firstCapturedEffect": null,
                  "firstCapturedUpdate": null,
                  "firstEffect": null,
                  "firstUpdate": Object {
                    "callback": null,
                    "expirationTime": 1,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "children": <TestComponent />,
                            "field": Object {
                              "id": "field0",
                              "invalid": false,
                              "name": "field0",
                              "onBlur": [MockFunction],
                              "onChange": [MockFunction],
                              "value": "",
                            },
                            "info": null,
                            "label": "ojs_select_placeholder",
                            "meta": Object {
                              "error": null,
                              "isValidating": false,
                              "stringFormatter": [MockFunction] {
                                "calls": Array [
                                  Array [
                                    "ojs_select_placeholder",
                                  ],
                                  Array [
                                    "demo",
                                  ],
                                  Array [
                                    "blubb",
                                  ],
                                ],
                                "results": Array [
                                  Object {
                                    "isThrow": false,
                                    "value": "ojs_select_placeholder",
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": "demo",
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": "blubb",
                                  },
                                ],
                              },
                              "valid": true,
                            },
                            "prefix": "demo",
                            "suffix": "blubb",
                            "validators": null,
                          }
                        }
                      />,
                    },
                    "tag": 0,
                  },
                  "lastCapturedEffect": null,
                  "lastCapturedUpdate": null,
                  "lastEffect": null,
                  "lastUpdate": Object {
                    "callback": null,
                    "expirationTime": 1,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "children": <TestComponent />,
                            "field": Object {
                              "id": "field0",
                              "invalid": false,
                              "name": "field0",
                              "onBlur": [MockFunction],
                              "onChange": [MockFunction],
                              "value": "",
                            },
                            "info": null,
                            "label": "ojs_select_placeholder",
                            "meta": Object {
                              "error": null,
                              "isValidating": false,
                              "stringFormatter": [MockFunction] {
                                "calls": Array [
                                  Array [
                                    "ojs_select_placeholder",
                                  ],
                                  Array [
                                    "demo",
                                  ],
                                  Array [
                                    "blubb",
                                  ],
                                ],
                                "results": Array [
                                  Object {
                                    "isThrow": false,
                                    "value": "ojs_select_placeholder",
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": "demo",
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": "blubb",
                                  },
                                ],
                              },
                              "valid": true,
                            },
                            "prefix": "demo",
                            "suffix": "blubb",
                            "validators": null,
                          }
                        }
                      />,
                    },
                    "tag": 0,
                  },
                },
              },
              "child": [Circular],
              "effectTag": 32,
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": null,
              "memoizedState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                    Object {
                      "children": <TestComponent />,
                      "field": Object {
                        "id": "field0",
                        "invalid": false,
                        "name": "field0",
                        "onBlur": [MockFunction],
                        "onChange": [MockFunction],
                        "value": "",
                      },
                      "info": null,
                      "label": "ojs_select_placeholder",
                      "meta": Object {
                        "error": null,
                        "isValidating": false,
                        "stringFormatter": [MockFunction] {
                          "calls": Array [
                            Array [
                              "ojs_select_placeholder",
                            ],
                            Array [
                              "demo",
                            ],
                            Array [
                              "blubb",
                            ],
                          ],
                          "results": Array [
                            Object {
                              "isThrow": false,
                              "value": "ojs_select_placeholder",
                            },
                            Object {
                              "isThrow": false,
                              "value": "demo",
                            },
                            Object {
                              "isThrow": false,
                              "value": "blubb",
                            },
                          ],
                        },
                        "valid": true,
                      },
                      "prefix": "demo",
                      "suffix": "blubb",
                      "validators": null,
                    }
                  }
                />,
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseTime": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                    class="row form-group"
                  >
                    <label
                      class="text-right col-sm-3 col-form-label"
                      for="field0"
                    >
                      ojs_select_placeholder
                    </label>
                    <div
                      class="col-sm-9"
                    >
                      <div
                        class="input-group"
                      >
                        <div
                          class="input-group-prepend"
                        >
                          <span
                            class="input-group-text"
                          >
                            demo
                          </span>
                        </div>
                        <div
                          id="field0"
                        />
                        <div
                          class="input-group-append"
                        >
                          <span
                            class="input-group-text"
                          >
                            blubb
                          </span>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "remainingExpirationTime": 0,
              },
              "tag": 3,
              "treeBaseTime": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={null}
                    props={
                      Object {
                        "children": <TestComponent />,
                        "field": Object {
                          "id": "field0",
                          "invalid": false,
                          "name": "field0",
                          "onBlur": [MockFunction],
                          "onChange": [MockFunction],
                          "value": "",
                        },
                        "info": null,
                        "label": "ojs_select_placeholder",
                        "meta": Object {
                          "error": null,
                          "isValidating": false,
                          "stringFormatter": [MockFunction] {
                            "calls": Array [
                              Array [
                                "ojs_select_placeholder",
                              ],
                              Array [
                                "demo",
                              ],
                              Array [
                                "blubb",
                              ],
                            ],
                            "results": Array [
                              Object {
                                "isThrow": false,
                                "value": "ojs_select_placeholder",
                              },
                              Object {
                                "isThrow": false,
                                "value": "demo",
                              },
                              Object {
                                "isThrow": false,
                                "value": "blubb",
                              },
                            ],
                          },
                          "valid": true,
                        },
                        "prefix": "demo",
                        "suffix": "blubb",
                        "validators": null,
                      }
                    }
                  />,
                },
                "expirationTime": 0,
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": null,
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": null,
              },
            },
            "selfBaseTime": 0,
            "sibling": null,
            "stateNode": WrapperComponent {
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {},
              "props": Object {
                "Component": [Function],
                "context": null,
                "props": Object {
                  "children": <TestComponent />,
                  "field": Object {
                    "id": "field0",
                    "invalid": false,
                    "name": "field0",
                    "onBlur": [MockFunction],
                    "onChange": [MockFunction],
                    "value": "",
                  },
                  "info": null,
                  "label": "ojs_select_placeholder",
                  "meta": Object {
                    "error": null,
                    "isValidating": false,
                    "stringFormatter": [MockFunction] {
                      "calls": Array [
                        Array [
                          "ojs_select_placeholder",
                        ],
                        Array [
                          "demo",
                        ],
                        Array [
                          "blubb",
                        ],
                      ],
                      "results": Array [
                        Object {
                          "isThrow": false,
                          "value": "ojs_select_placeholder",
                        },
                        Object {
                          "isThrow": false,
                          "value": "demo",
                        },
                        Object {
                          "isThrow": false,
                          "value": "blubb",
                        },
                      ],
                    },
                    "valid": true,
                  },
                  "prefix": "demo",
                  "suffix": "blubb",
                  "validators": null,
                },
              },
              "refs": Object {},
              "state": Object {
                "context": null,
                "mount": true,
                "props": Object {
                  "children": <TestComponent />,
                  "field": Object {
                    "id": "field0",
                    "invalid": false,
                    "name": "field0",
                    "onBlur": [MockFunction],
                    "onChange": [MockFunction],
                    "value": "",
                  },
                  "info": null,
                  "label": "ojs_select_placeholder",
                  "meta": Object {
                    "error": null,
                    "isValidating": false,
                    "stringFormatter": [MockFunction] {
                      "calls": Array [
                        Array [
                          "ojs_select_placeholder",
                        ],
                        Array [
                          "demo",
                        ],
                        Array [
                          "blubb",
                        ],
                      ],
                      "results": Array [
                        Object {
                          "isThrow": false,
                          "value": "ojs_select_placeholder",
                        },
                        Object {
                          "isThrow": false,
                          "value": "demo",
                        },
                        Object {
                          "isThrow": false,
                          "value": "blubb",
                        },
                      ],
                    },
                    "valid": true,
                  },
                  "prefix": "demo",
                  "suffix": "blubb",
                  "validators": null,
                },
              },
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 2,
            "treeBaseTime": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "_debugSource": null,
          "alternate": null,
          "child": FiberNode {
            "_debugID": 163,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": null,
            "alternate": null,
            "child": FiberNode {
              "_debugID": 164,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "alternate": null,
              "child": FiberNode {
                "_debugID": 165,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 167,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 168,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "alternate": null,
                    "child": null,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 2,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": "ojs_select_placeholder",
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": "ojs_select_placeholder",
                    "ref": null,
                    "return": [Circular],
                    "selfBaseTime": 0,
                    "sibling": null,
                    "stateNode": ojs_select_placeholder,
                    "tag": 6,
                    "treeBaseTime": 0,
                    "type": null,
                    "updateQueue": null,
                  },
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": Array [
                      null,
                      null,
                      "ojs_select_placeholder",
                      null,
                    ],
                    "className": "text-right col-sm-3 col-form-label",
                    "htmlFor": "field0",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": Array [
                      null,
                      null,
                      "ojs_select_placeholder",
                      null,
                    ],
                    "className": "text-right col-sm-3 col-form-label",
                    "htmlFor": "field0",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseTime": 0,
                  "sibling": null,
                  "stateNode": <label
                    class="text-right col-sm-3 col-form-label"
                    for="field0"
                  >
                    ojs_select_placeholder
                  </label>,
                  "tag": 5,
                  "treeBaseTime": 0,
                  "type": "label",
                  "updateQueue": null,
                },
                "effectTag": 1,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": Array [
                    null,
                    null,
                    "ojs_select_placeholder",
                    null,
                  ],
                  "className": "text-right",
                  "for": "field0",
                  "sm": "3",
                  "tag": "label",
                  "widths": Array [
                    "xs",
                    "sm",
                    "md",
                    "lg",
                    "xl",
                  ],
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": Array [
                    null,
                    null,
                    "ojs_select_placeholder",
                    null,
                  ],
                  "className": "text-right",
                  "for": "field0",
                  "sm": "3",
                  "tag": "label",
                  "widths": Array [
                    "xs",
                    "sm",
                    "md",
                    "lg",
                    "xl",
                  ],
                },
                "ref": null,
                "return": [Circular],
                "selfBaseTime": 0,
                "sibling": FiberNode {
                  "_debugID": 166,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 169,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 170,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": null,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 171,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": null,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 172,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": null,
                          "alternate": null,
                          "child": FiberNode {
                            "_debugID": 176,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": null,
                            "alternate": null,
                            "child": FiberNode {
                              "_debugID": 177,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": null,
                              "alternate": null,
                              "child": FiberNode {
                                "_debugID": 178,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": [Circular],
                                "_debugSource": null,
                                "alternate": null,
                                "child": null,
                                "effectTag": 0,
                                "expirationTime": 0,
                                "firstEffect": null,
                                "index": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "children": "demo",
                                  "className": "input-group-text",
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": Object {
                                  "children": "demo",
                                  "className": "input-group-text",
                                },
                                "ref": null,
                                "return": [Circular],
                                "selfBaseTime": 0,
                                "sibling": null,
                                "stateNode": <span
                                  class="input-group-text"
                                >
                                  demo
                                </span>,
                                "tag": 5,
                                "treeBaseTime": 0,
                                "type": "span",
                                "updateQueue": null,
                              },
                              "effectTag": 1,
                              "expirationTime": 0,
                              "firstEffect": null,
                              "index": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": "demo",
                                "tag": "span",
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "children": "demo",
                                "tag": "span",
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseTime": 0,
                              "sibling": null,
                              "stateNode": null,
                              "tag": 1,
                              "treeBaseTime": 0,
                              "type": [Function],
                              "updateQueue": null,
                            },
                            "effectTag": 0,
                            "expirationTime": 0,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": <InputGroupText
                                tag="span"
                              >
                                demo
                              </InputGroupText>,
                              "className": "input-group-prepend",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": <InputGroupText
                                tag="span"
                              >
                                demo
                              </InputGroupText>,
                              "className": "input-group-prepend",
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseTime": 0,
                            "sibling": null,
                            "stateNode": <div
                              class="input-group-prepend"
                            >
                              <span
                                class="input-group-text"
                              >
                                demo
                              </span>
                            </div>,
                            "tag": 5,
                            "treeBaseTime": 0,
                            "type": "div",
                            "updateQueue": null,
                          },
                          "effectTag": 1,
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "addonType": "prepend",
                            "children": "demo",
                            "tag": "div",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "addonType": "prepend",
                            "children": "demo",
                            "tag": "div",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseTime": 0,
                          "sibling": FiberNode {
                            "_debugID": 173,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": null,
                            "child": FiberNode {
                              "_debugID": 179,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": null,
                              "alternate": null,
                              "child": null,
                              "effectTag": 0,
                              "expirationTime": 0,
                              "firstEffect": null,
                              "index": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "id": "field0",
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "id": "field0",
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseTime": 0,
                              "sibling": null,
                              "stateNode": <div
                                id="field0"
                              />,
                              "tag": 5,
                              "treeBaseTime": 0,
                              "type": "div",
                              "updateQueue": null,
                            },
                            "effectTag": 1,
                            "expirationTime": 0,
                            "firstEffect": null,
                            "index": 1,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {},
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {},
                            "ref": null,
                            "return": [Circular],
                            "selfBaseTime": 0,
                            "sibling": FiberNode {
                              "_debugID": 174,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": null,
                              "alternate": null,
                              "child": FiberNode {
                                "_debugID": 180,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": [Circular],
                                "_debugSource": null,
                                "alternate": null,
                                "child": FiberNode {
                                  "_debugID": 181,
                                  "_debugIsCurrentlyTiming": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": null,
                                  "alternate": null,
                                  "child": FiberNode {
                                    "_debugID": 182,
                                    "_debugIsCurrentlyTiming": false,
                                    "_debugOwner": [Circular],
                                    "_debugSource": null,
                                    "alternate": null,
                                    "child": null,
                                    "effectTag": 0,
                                    "expirationTime": 0,
                                    "firstEffect": null,
                                    "index": 0,
                                    "key": null,
                                    "lastEffect": null,
                                    "memoizedProps": Object {
                                      "children": "blubb",
                                      "className": "input-group-text",
                                    },
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": Object {
                                      "children": "blubb",
                                      "className": "input-group-text",
                                    },
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseTime": 0,
                                    "sibling": null,
                                    "stateNode": <span
                                      class="input-group-text"
                                    >
                                      blubb
                                    </span>,
                                    "tag": 5,
                                    "treeBaseTime": 0,
                                    "type": "span",
                                    "updateQueue": null,
                                  },
                                  "effectTag": 1,
                                  "expirationTime": 0,
                                  "firstEffect": null,
                                  "index": 0,
                                  "key": null,
                                  "lastEffect": null,
                                  "memoizedProps": Object {
                                    "children": "blubb",
                                    "tag": "span",
                                  },
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": Object {
                                    "children": "blubb",
                                    "tag": "span",
                                  },
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseTime": 0,
                                  "sibling": null,
                                  "stateNode": null,
                                  "tag": 1,
                                  "treeBaseTime": 0,
                                  "type": [Function],
                                  "updateQueue": null,
                                },
                                "effectTag": 0,
                                "expirationTime": 0,
                                "firstEffect": null,
                                "index": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "children": <InputGroupText
                                    tag="span"
                                  >
                                    blubb
                                  </InputGroupText>,
                                  "className": "input-group-append",
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": Object {
                                  "children": <InputGroupText
                                    tag="span"
                                  >
                                    blubb
                                  </InputGroupText>,
                                  "className": "input-group-append",
                                },
                                "ref": null,
                                "return": [Circular],
                                "selfBaseTime": 0,
                                "sibling": null,
                                "stateNode": <div
                                  class="input-group-append"
                                >
                                  <span
                                    class="input-group-text"
                                  >
                                    blubb
                                  </span>
                                </div>,
                                "tag": 5,
                                "treeBaseTime": 0,
                                "type": "div",
                                "updateQueue": null,
                              },
                              "effectTag": 1,
                              "expirationTime": 0,
                              "firstEffect": null,
                              "index": 2,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "addonType": "append",
                                "children": "blubb",
                                "tag": "div",
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "addonType": "append",
                                "children": "blubb",
                                "tag": "div",
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseTime": 0,
                              "sibling": FiberNode {
                                "_debugID": 175,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": [Circular],
                                "_debugSource": null,
                                "alternate": null,
                                "child": null,
                                "effectTag": 1,
                                "expirationTime": 0,
                                "firstEffect": null,
                                "index": 4,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "context": Object {
                                    "stringFormatter": [MockFunction] {
                                      "calls": Array [
                                        Array [
                                          "ojs_select_placeholder",
                                        ],
                                        Array [
                                          "demo",
                                        ],
                                        Array [
                                          "blubb",
                                        ],
                                      ],
                                      "results": Array [
                                        Object {
                                          "isThrow": false,
                                          "value": "ojs_select_placeholder",
                                        },
                                        Object {
                                          "isThrow": false,
                                          "value": "demo",
                                        },
                                        Object {
                                          "isThrow": false,
                                          "value": "blubb",
                                        },
                                      ],
                                    },
                                  },
                                  "error": null,
                                  "id": "field0_errors",
                                  "invalid": false,
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": Object {
                                  "context": Object {
                                    "stringFormatter": [MockFunction] {
                                      "calls": Array [
                                        Array [
                                          "ojs_select_placeholder",
                                        ],
                                        Array [
                                          "demo",
                                        ],
                                        Array [
                                          "blubb",
                                        ],
                                      ],
                                      "results": Array [
                                        Object {
                                          "isThrow": false,
                                          "value": "ojs_select_placeholder",
                                        },
                                        Object {
                                          "isThrow": false,
                                          "value": "demo",
                                        },
                                        Object {
                                          "isThrow": false,
                                          "value": "blubb",
                                        },
                                      ],
                                    },
                                  },
                                  "error": null,
                                  "id": "field0_errors",
                                  "invalid": false,
                                },
                                "ref": null,
                                "return": [Circular],
                                "selfBaseTime": 0,
                                "sibling": null,
                                "stateNode": null,
                                "tag": 1,
                                "treeBaseTime": 0,
                                "type": [Function],
                                "updateQueue": null,
                              },
                              "stateNode": null,
                              "tag": 1,
                              "treeBaseTime": 0,
                              "type": [Function],
                              "updateQueue": null,
                            },
                            "stateNode": null,
                            "tag": 1,
                            "treeBaseTime": 0,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "stateNode": null,
                          "tag": 1,
                          "treeBaseTime": 0,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": Array [
                            <InputGroupAddon
                              addonType="prepend"
                              tag="div"
                            >
                              demo
                            </InputGroupAddon>,
                            <TestComponent />,
                            <InputGroupAddon
                              addonType="append"
                              tag="div"
                            >
                              blubb
                            </InputGroupAddon>,
                            null,
                            <FieldError
                              context={
                                Object {
                                  "stringFormatter": [MockFunction] {
                                    "calls": Array [
                                      Array [
                                        "ojs_select_placeholder",
                                      ],
                                      Array [
                                        "demo",
                                      ],
                                      Array [
                                        "blubb",
                                      ],
                                    ],
                                    "results": Array [
                                      Object {
                                        "isThrow": false,
                                        "value": "ojs_select_placeholder",
                                      },
                                      Object {
                                        "isThrow": false,
                                        "value": "demo",
                                      },
                                      Object {
                                        "isThrow": false,
                                        "value": "blubb",
                                      },
                                    ],
                                  },
                                }
                              }
                              error={null}
                              id="field0_errors"
                              invalid={false}
                            />,
                          ],
                          "className": "input-group",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": Array [
                            <InputGroupAddon
                              addonType="prepend"
                              tag="div"
                            >
                              demo
                            </InputGroupAddon>,
                            <TestComponent />,
                            <InputGroupAddon
                              addonType="append"
                              tag="div"
                            >
                              blubb
                            </InputGroupAddon>,
                            null,
                            <FieldError
                              context={
                                Object {
                                  "stringFormatter": [MockFunction] {
                                    "calls": Array [
                                      Array [
                                        "ojs_select_placeholder",
                                      ],
                                      Array [
                                        "demo",
                                      ],
                                      Array [
                                        "blubb",
                                      ],
                                    ],
                                    "results": Array [
                                      Object {
                                        "isThrow": false,
                                        "value": "ojs_select_placeholder",
                                      },
                                      Object {
                                        "isThrow": false,
                                        "value": "demo",
                                      },
                                      Object {
                                        "isThrow": false,
                                        "value": "blubb",
                                      },
                                    ],
                                  },
                                }
                              }
                              error={null}
                              id="field0_errors"
                              invalid={false}
                            />,
                          ],
                          "className": "input-group",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseTime": 0,
                        "sibling": null,
                        "stateNode": <div
                          class="input-group"
                        >
                          <div
                            class="input-group-prepend"
                          >
                            <span
                              class="input-group-text"
                            >
                              demo
                            </span>
                          </div>
                          <div
                            id="field0"
                          />
                          <div
                            class="input-group-append"
                          >
                            <span
                              class="input-group-text"
                            >
                              blubb
                            </span>
                          </div>
                        </div>,
                        "tag": 5,
                        "treeBaseTime": 0,
                        "type": "div",
                        "updateQueue": null,
                      },
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": Array [
                          <InputGroupAddon
                            addonType="prepend"
                            tag="div"
                          >
                            demo
                          </InputGroupAddon>,
                          <TestComponent />,
                          <InputGroupAddon
                            addonType="append"
                            tag="div"
                          >
                            blubb
                          </InputGroupAddon>,
                          null,
                          <FieldError
                            context={
                              Object {
                                "stringFormatter": [MockFunction] {
                                  "calls": Array [
                                    Array [
                                      "ojs_select_placeholder",
                                    ],
                                    Array [
                                      "demo",
                                    ],
                                    Array [
                                      "blubb",
                                    ],
                                  ],
                                  "results": Array [
                                    Object {
                                      "isThrow": false,
                                      "value": "ojs_select_placeholder",
                                    },
                                    Object {
                                      "isThrow": false,
                                      "value": "demo",
                                    },
                                    Object {
                                      "isThrow": false,
                                      "value": "blubb",
                                    },
                                  ],
                                },
                              }
                            }
                            error={null}
                            id="field0_errors"
                            invalid={false}
                          />,
                        ],
                        "tag": "div",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": Array [
                          <InputGroupAddon
                            addonType="prepend"
                            tag="div"
                          >
                            demo
                          </InputGroupAddon>,
                          <TestComponent />,
                          <InputGroupAddon
                            addonType="append"
                            tag="div"
                          >
                            blubb
                          </InputGroupAddon>,
                          null,
                          <FieldError
                            context={
                              Object {
                                "stringFormatter": [MockFunction] {
                                  "calls": Array [
                                    Array [
                                      "ojs_select_placeholder",
                                    ],
                                    Array [
                                      "demo",
                                    ],
                                    Array [
                                      "blubb",
                                    ],
                                  ],
                                  "results": Array [
                                    Object {
                                      "isThrow": false,
                                      "value": "ojs_select_placeholder",
                                    },
                                    Object {
                                      "isThrow": false,
                                      "value": "demo",
                                    },
                                    Object {
                                      "isThrow": false,
                                      "value": "blubb",
                                    },
                                  ],
                                },
                              }
                            }
                            error={null}
                            id="field0_errors"
                            invalid={false}
                          />,
                        ],
                        "tag": "div",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseTime": 0,
                      "sibling": null,
                      "stateNode": null,
                      "tag": 1,
                      "treeBaseTime": 0,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": Array [
                        <InputGroup
                          tag="div"
                        >
                          <InputGroupAddon
                            addonType="prepend"
                            tag="div"
                          >
                            demo
                          </InputGroupAddon>
                          <TestComponent />
                          <InputGroupAddon
                            addonType="append"
                            tag="div"
                          >
                            blubb
                          </InputGroupAddon>
                          <FieldError
                            context={
                              Object {
                                "stringFormatter": [MockFunction] {
                                  "calls": Array [
                                    Array [
                                      "ojs_select_placeholder",
                                    ],
                                    Array [
                                      "demo",
                                    ],
                                    Array [
                                      "blubb",
                                    ],
                                  ],
                                  "results": Array [
                                    Object {
                                      "isThrow": false,
                                      "value": "ojs_select_placeholder",
                                    },
                                    Object {
                                      "isThrow": false,
                                      "value": "demo",
                                    },
                                    Object {
                                      "isThrow": false,
                                      "value": "blubb",
                                    },
                                  ],
                                },
                              }
                            }
                            error={null}
                            id="field0_errors"
                            invalid={false}
                          />
                        </InputGroup>,
                        null,
                      ],
                      "className": "col-sm-9",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": Array [
                        <InputGroup
                          tag="div"
                        >
                          <InputGroupAddon
                            addonType="prepend"
                            tag="div"
                          >
                            demo
                          </InputGroupAddon>
                          <TestComponent />
                          <InputGroupAddon
                            addonType="append"
                            tag="div"
                          >
                            blubb
                          </InputGroupAddon>
                          <FieldError
                            context={
                              Object {
                                "stringFormatter": [MockFunction] {
                                  "calls": Array [
                                    Array [
                                      "ojs_select_placeholder",
                                    ],
                                    Array [
                                      "demo",
                                    ],
                                    Array [
                                      "blubb",
                                    ],
                                  ],
                                  "results": Array [
                                    Object {
                                      "isThrow": false,
                                      "value": "ojs_select_placeholder",
                                    },
                                    Object {
                                      "isThrow": false,
                                      "value": "demo",
                                    },
                                    Object {
                                      "isThrow": false,
                                      "value": "blubb",
                                    },
                                  ],
                                },
                              }
                            }
                            error={null}
                            id="field0_errors"
                            invalid={false}
                          />
                        </InputGroup>,
                        null,
                      ],
                      "className": "col-sm-9",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseTime": 0,
                    "sibling": null,
                    "stateNode": <div
                      class="col-sm-9"
                    >
                      <div
                        class="input-group"
                      >
                        <div
                          class="input-group-prepend"
                        >
                          <span
                            class="input-group-text"
                          >
                            demo
                          </span>
                        </div>
                        <div
                          id="field0"
                        />
                        <div
                          class="input-group-append"
                        >
                          <span
                            class="input-group-text"
                          >
                            blubb
                          </span>
                        </div>
                      </div>
                    </div>,
                    "tag": 5,
                    "treeBaseTime": 0,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "effectTag": 1,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 1,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": Array [
                      <InputGroup
                        tag="div"
                      >
                        <InputGroupAddon
                          addonType="prepend"
                          tag="div"
                        >
                          demo
                        </InputGroupAddon>
                        <TestComponent />
                        <InputGroupAddon
                          addonType="append"
                          tag="div"
                        >
                          blubb
                        </InputGroupAddon>
                        <FieldError
                          context={
                            Object {
                              "stringFormatter": [MockFunction] {
                                "calls": Array [
                                  Array [
                                    "ojs_select_placeholder",
                                  ],
                                  Array [
                                    "demo",
                                  ],
                                  Array [
                                    "blubb",
                                  ],
                                ],
                                "results": Array [
                                  Object {
                                    "isThrow": false,
                                    "value": "ojs_select_placeholder",
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": "demo",
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": "blubb",
                                  },
                                ],
                              },
                            }
                          }
                          error={null}
                          id="field0_errors"
                          invalid={false}
                        />
                      </InputGroup>,
                      null,
                    ],
                    "sm": "9",
                    "tag": "div",
                    "widths": Array [
                      "xs",
                      "sm",
                      "md",
                      "lg",
                      "xl",
                    ],
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": Array [
                      <InputGroup
                        tag="div"
                      >
                        <InputGroupAddon
                          addonType="prepend"
                          tag="div"
                        >
                          demo
                        </InputGroupAddon>
                        <TestComponent />
                        <InputGroupAddon
                          addonType="append"
                          tag="div"
                        >
                          blubb
                        </InputGroupAddon>
                        <FieldError
                          context={
                            Object {
                              "stringFormatter": [MockFunction] {
                                "calls": Array [
                                  Array [
                                    "ojs_select_placeholder",
                                  ],
                                  Array [
                                    "demo",
                                  ],
                                  Array [
                                    "blubb",
                                  ],
                                ],
                                "results": Array [
                                  Object {
                                    "isThrow": false,
                                    "value": "ojs_select_placeholder",
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": "demo",
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": "blubb",
                                  },
                                ],
                              },
                            }
                          }
                          error={null}
                          id="field0_errors"
                          invalid={false}
                        />
                      </InputGroup>,
                      null,
                    ],
                    "sm": "9",
                    "tag": "div",
                    "widths": Array [
                      "xs",
                      "sm",
                      "md",
                      "lg",
                      "xl",
                    ],
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseTime": 0,
                  "sibling": null,
                  "stateNode": null,
                  "tag": 1,
                  "treeBaseTime": 0,
                  "type": [Function],
                  "updateQueue": null,
                },
                "stateNode": null,
                "tag": 1,
                "treeBaseTime": 0,
                "type": [Function],
                "updateQueue": null,
              },
              "effectTag": 0,
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": Array [
                  <Label
                    className="text-right"
                    for="field0"
                    sm="3"
                    tag="label"
                    widths={
                      Array [
                        "xs",
                        "sm",
                        "md",
                        "lg",
                        "xl",
                      ]
                    }
                  >
                    ojs_select_placeholder
                  </Label>,
                  <Col
                    sm="9"
                    tag="div"
                    widths={
                      Array [
                        "xs",
                        "sm",
                        "md",
                        "lg",
                        "xl",
                      ]
                    }
                  >
                    <InputGroup
                      tag="div"
                    >
                      <InputGroupAddon
                        addonType="prepend"
                        tag="div"
                      >
                        demo
                      </InputGroupAddon>
                      <TestComponent />
                      <InputGroupAddon
                        addonType="append"
                        tag="div"
                      >
                        blubb
                      </InputGroupAddon>
                      <FieldError
                        context={
                          Object {
                            "stringFormatter": [MockFunction] {
                              "calls": Array [
                                Array [
                                  "ojs_select_placeholder",
                                ],
                                Array [
                                  "demo",
                                ],
                                Array [
                                  "blubb",
                                ],
                              ],
                              "results": Array [
                                Object {
                                  "isThrow": false,
                                  "value": "ojs_select_placeholder",
                                },
                                Object {
                                  "isThrow": false,
                                  "value": "demo",
                                },
                                Object {
                                  "isThrow": false,
                                  "value": "blubb",
                                },
                              ],
                            },
                          }
                        }
                        error={null}
                        id="field0_errors"
                        invalid={false}
                      />
                    </InputGroup>
                  </Col>,
                ],
                "className": "row form-group",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": Array [
                  <Label
                    className="text-right"
                    for="field0"
                    sm="3"
                    tag="label"
                    widths={
                      Array [
                        "xs",
                        "sm",
                        "md",
                        "lg",
                        "xl",
                      ]
                    }
                  >
                    ojs_select_placeholder
                  </Label>,
                  <Col
                    sm="9"
                    tag="div"
                    widths={
                      Array [
                        "xs",
                        "sm",
                        "md",
                        "lg",
                        "xl",
                      ]
                    }
                  >
                    <InputGroup
                      tag="div"
                    >
                      <InputGroupAddon
                        addonType="prepend"
                        tag="div"
                      >
                        demo
                      </InputGroupAddon>
                      <TestComponent />
                      <InputGroupAddon
                        addonType="append"
                        tag="div"
                      >
                        blubb
                      </InputGroupAddon>
                      <FieldError
                        context={
                          Object {
                            "stringFormatter": [MockFunction] {
                              "calls": Array [
                                Array [
                                  "ojs_select_placeholder",
                                ],
                                Array [
                                  "demo",
                                ],
                                Array [
                                  "blubb",
                                ],
                              ],
                              "results": Array [
                                Object {
                                  "isThrow": false,
                                  "value": "ojs_select_placeholder",
                                },
                                Object {
                                  "isThrow": false,
                                  "value": "demo",
                                },
                                Object {
                                  "isThrow": false,
                                  "value": "blubb",
                                },
                              ],
                            },
                          }
                        }
                        error={null}
                        id="field0_errors"
                        invalid={false}
                      />
                    </InputGroup>
                  </Col>,
                ],
                "className": "row form-group",
              },
              "ref": null,
              "return": [Circular],
              "selfBaseTime": 0,
              "sibling": null,
              "stateNode": <div
                class="row form-group"
              >
                <label
                  class="text-right col-sm-3 col-form-label"
                  for="field0"
                >
                  ojs_select_placeholder
                </label>
                <div
                  class="col-sm-9"
                >
                  <div
                    class="input-group"
                  >
                    <div
                      class="input-group-prepend"
                    >
                      <span
                        class="input-group-text"
                      >
                        demo
                      </span>
                    </div>
                    <div
                      id="field0"
                    />
                    <div
                      class="input-group-append"
                    >
                      <span
                        class="input-group-text"
                      >
                        blubb
                      </span>
                    </div>
                  </div>
                </div>
              </div>,
              "tag": 5,
              "treeBaseTime": 0,
              "type": "div",
              "updateQueue": null,
            },
            "effectTag": 1,
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "children": Array [
                <Label
                  className="text-right"
                  for="field0"
                  sm="3"
                  tag="label"
                  widths={
                    Array [
                      "xs",
                      "sm",
                      "md",
                      "lg",
                      "xl",
                    ]
                  }
                >
                  ojs_select_placeholder
                </Label>,
                <Col
                  sm="9"
                  tag="div"
                  widths={
                    Array [
                      "xs",
                      "sm",
                      "md",
                      "lg",
                      "xl",
                    ]
                  }
                >
                  <InputGroup
                    tag="div"
                  >
                    <InputGroupAddon
                      addonType="prepend"
                      tag="div"
                    >
                      demo
                    </InputGroupAddon>
                    <TestComponent />
                    <InputGroupAddon
                      addonType="append"
                      tag="div"
                    >
                      blubb
                    </InputGroupAddon>
                    <FieldError
                      context={
                        Object {
                          "stringFormatter": [MockFunction] {
                            "calls": Array [
                              Array [
                                "ojs_select_placeholder",
                              ],
                              Array [
                                "demo",
                              ],
                              Array [
                                "blubb",
                              ],
                            ],
                            "results": Array [
                              Object {
                                "isThrow": false,
                                "value": "ojs_select_placeholder",
                              },
                              Object {
                                "isThrow": false,
                                "value": "demo",
                              },
                              Object {
                                "isThrow": false,
                                "value": "blubb",
                              },
                            ],
                          },
                        }
                      }
                      error={null}
                      id="field0_errors"
                      invalid={false}
                    />
                  </InputGroup>
                </Col>,
              ],
              "className": "",
              "row": true,
              "tag": "div",
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "children": Array [
                <Label
                  className="text-right"
                  for="field0"
                  sm="3"
                  tag="label"
                  widths={
                    Array [
                      "xs",
                      "sm",
                      "md",
                      "lg",
                      "xl",
                    ]
                  }
                >
                  ojs_select_placeholder
                </Label>,
                <Col
                  sm="9"
                  tag="div"
                  widths={
                    Array [
                      "xs",
                      "sm",
                      "md",
                      "lg",
                      "xl",
                    ]
                  }
                >
                  <InputGroup
                    tag="div"
                  >
                    <InputGroupAddon
                      addonType="prepend"
                      tag="div"
                    >
                      demo
                    </InputGroupAddon>
                    <TestComponent />
                    <InputGroupAddon
                      addonType="append"
                      tag="div"
                    >
                      blubb
                    </InputGroupAddon>
                    <FieldError
                      context={
                        Object {
                          "stringFormatter": [MockFunction] {
                            "calls": Array [
                              Array [
                                "ojs_select_placeholder",
                              ],
                              Array [
                                "demo",
                              ],
                              Array [
                                "blubb",
                              ],
                            ],
                            "results": Array [
                              Object {
                                "isThrow": false,
                                "value": "ojs_select_placeholder",
                              },
                              Object {
                                "isThrow": false,
                                "value": "demo",
                              },
                              Object {
                                "isThrow": false,
                                "value": "blubb",
                              },
                            ],
                          },
                        }
                      }
                      error={null}
                      id="field0_errors"
                      invalid={false}
                    />
                  </InputGroup>
                </Col>,
              ],
              "className": "",
              "row": true,
              "tag": "div",
            },
            "ref": null,
            "return": [Circular],
            "selfBaseTime": 0,
            "sibling": null,
            "stateNode": null,
            "tag": 1,
            "treeBaseTime": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "effectTag": 1,
          "expirationTime": 0,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "children": <TestComponent />,
            "field": Object {
              "id": "field0",
              "invalid": false,
              "name": "field0",
              "onBlur": [MockFunction],
              "onChange": [MockFunction],
              "value": "",
            },
            "info": null,
            "label": "ojs_select_placeholder",
            "meta": Object {
              "error": null,
              "isValidating": false,
              "stringFormatter": [MockFunction] {
                "calls": Array [
                  Array [
                    "ojs_select_placeholder",
                  ],
                  Array [
                    "demo",
                  ],
                  Array [
                    "blubb",
                  ],
                ],
                "results": Array [
                  Object {
                    "isThrow": false,
                    "value": "ojs_select_placeholder",
                  },
                  Object {
                    "isThrow": false,
                    "value": "demo",
                  },
                  Object {
                    "isThrow": false,
                    "value": "blubb",
                  },
                ],
              },
              "valid": true,
            },
            "prefix": "demo",
            "suffix": "blubb",
            "validators": null,
          },
          "memoizedState": Object {
            "infoVisible": false,
          },
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "children": <TestComponent />,
            "field": Object {
              "id": "field0",
              "invalid": false,
              "name": "field0",
              "onBlur": [MockFunction],
              "onChange": [MockFunction],
              "value": "",
            },
            "info": null,
            "label": "ojs_select_placeholder",
            "meta": Object {
              "error": null,
              "isValidating": false,
              "stringFormatter": [MockFunction] {
                "calls": Array [
                  Array [
                    "ojs_select_placeholder",
                  ],
                  Array [
                    "demo",
                  ],
                  Array [
                    "blubb",
                  ],
                ],
                "results": Array [
                  Object {
                    "isThrow": false,
                    "value": "ojs_select_placeholder",
                  },
                  Object {
                    "isThrow": false,
                    "value": "demo",
                  },
                  Object {
                    "isThrow": false,
                    "value": "blubb",
                  },
                ],
              },
              "valid": true,
            },
            "prefix": "demo",
            "suffix": "blubb",
            "validators": null,
          },
          "ref": null,
          "return": FiberNode {
            "_debugID": 161,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "alternate": null,
            "child": [Circular],
            "effectTag": 1,
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "children": <TestComponent />,
                "field": Object {
                  "id": "field0",
                  "invalid": false,
                  "name": "field0",
                  "onBlur": [MockFunction],
                  "onChange": [MockFunction],
                  "value": "",
                },
                "info": null,
                "label": "ojs_select_placeholder",
                "meta": Object {
                  "error": null,
                  "isValidating": false,
                  "stringFormatter": [MockFunction] {
                    "calls": Array [
                      Array [
                        "ojs_select_placeholder",
                      ],
                      Array [
                        "demo",
                      ],
                      Array [
                        "blubb",
                      ],
                    ],
                    "results": Array [
                      Object {
                        "isThrow": false,
                        "value": "ojs_select_placeholder",
                      },
                      Object {
                        "isThrow": false,
                        "value": "demo",
                      },
                      Object {
                        "isThrow": false,
                        "value": "blubb",
                      },
                    ],
                  },
                  "valid": true,
                },
                "prefix": "demo",
                "suffix": "blubb",
                "validators": null,
              },
            },
            "memoizedState": Object {
              "context": null,
              "mount": true,
              "props": Object {
                "children": <TestComponent />,
                "field": Object {
                  "id": "field0",
                  "invalid": false,
                  "name": "field0",
                  "onBlur": [MockFunction],
                  "onChange": [MockFunction],
                  "value": "",
                },
                "info": null,
                "label": "ojs_select_placeholder",
                "meta": Object {
                  "error": null,
                  "isValidating": false,
                  "stringFormatter": [MockFunction] {
                    "calls": Array [
                      Array [
                        "ojs_select_placeholder",
                      ],
                      Array [
                        "demo",
                      ],
                      Array [
                        "blubb",
                      ],
                    ],
                    "results": Array [
                      Object {
                        "isThrow": false,
                        "value": "ojs_select_placeholder",
                      },
                      Object {
                        "isThrow": false,
                        "value": "demo",
                      },
                      Object {
                        "isThrow": false,
                        "value": "blubb",
                      },
                    ],
                  },
                  "valid": true,
                },
                "prefix": "demo",
                "suffix": "blubb",
                "validators": null,
              },
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "children": <TestComponent />,
                "field": Object {
                  "id": "field0",
                  "invalid": false,
                  "name": "field0",
                  "onBlur": [MockFunction],
                  "onChange": [MockFunction],
                  "value": "",
                },
                "info": null,
                "label": "ojs_select_placeholder",
                "meta": Object {
                  "error": null,
                  "isValidating": false,
                  "stringFormatter": [MockFunction] {
                    "calls": Array [
                      Array [
                        "ojs_select_placeholder",
                      ],
                      Array [
                        "demo",
                      ],
                      Array [
                        "blubb",
                      ],
                    ],
                    "results": Array [
                      Object {
                        "isThrow": false,
                        "value": "ojs_select_placeholder",
                      },
                      Object {
                        "isThrow": false,
                        "value": "demo",
                      },
                      Object {
                        "isThrow": false,
                        "value": "blubb",
                      },
                    ],
                  },
                  "valid": true,
                },
                "prefix": "demo",
                "suffix": "blubb",
                "validators": null,
              },
            },
            "ref": null,
            "return": FiberNode {
              "_debugID": 159,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "alternate": FiberNode {
                "_debugID": 159,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "alternate": [Circular],
                "child": null,
                "effectTag": 0,
                "expirationTime": 1,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": null,
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "selfBaseTime": 0,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div>
                    <div
                      class="row form-group"
                    >
                      <label
                        class="text-right col-sm-3 col-form-label"
                        for="field0"
                      >
                        ojs_select_placeholder
                      </label>
                      <div
                        class="col-sm-9"
                      >
                        <div
                          class="input-group"
                        >
                          <div
                            class="input-group-prepend"
                          >
                            <span
                              class="input-group-text"
                            >
                              demo
                            </span>
                          </div>
                          <div
                            id="field0"
                          />
                          <div
                            class="input-group-append"
                          >
                            <span
                              class="input-group-text"
                            >
                              blubb
                            </span>
                          </div>
                        </div>
                      </div>
                    </div>
                  </div>,
                  "context": Object {},
                  "current": [Circular],
                  "earliestPendingTime": 0,
                  "earliestSuspendedTime": 0,
                  "finishedWork": null,
                  "firstBatch": null,
                  "hydrate": false,
                  "latestPendingTime": 0,
                  "latestPingedTime": 0,
                  "latestSuspendedTime": 0,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingCommitExpirationTime": 0,
                  "pendingContext": null,
                  "remainingExpirationTime": 0,
                },
                "tag": 3,
                "treeBaseTime": 0,
                "type": null,
                "updateQueue": Object {
                  "baseState": null,
                  "expirationTime": 1,
                  "firstCapturedEffect": null,
                  "firstCapturedUpdate": null,
                  "firstEffect": null,
                  "firstUpdate": Object {
                    "callback": null,
                    "expirationTime": 1,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "children": <TestComponent />,
                            "field": Object {
                              "id": "field0",
                              "invalid": false,
                              "name": "field0",
                              "onBlur": [MockFunction],
                              "onChange": [MockFunction],
                              "value": "",
                            },
                            "info": null,
                            "label": "ojs_select_placeholder",
                            "meta": Object {
                              "error": null,
                              "isValidating": false,
                              "stringFormatter": [MockFunction] {
                                "calls": Array [
                                  Array [
                                    "ojs_select_placeholder",
                                  ],
                                  Array [
                                    "demo",
                                  ],
                                  Array [
                                    "blubb",
                                  ],
                                ],
                                "results": Array [
                                  Object {
                                    "isThrow": false,
                                    "value": "ojs_select_placeholder",
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": "demo",
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": "blubb",
                                  },
                                ],
                              },
                              "valid": true,
                            },
                            "prefix": "demo",
                            "suffix": "blubb",
                            "validators": null,
                          }
                        }
                      />,
                    },
                    "tag": 0,
                  },
                  "lastCapturedEffect": null,
                  "lastCapturedUpdate": null,
                  "lastEffect": null,
                  "lastUpdate": Object {
                    "callback": null,
                    "expirationTime": 1,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "children": <TestComponent />,
                            "field": Object {
                              "id": "field0",
                              "invalid": false,
                              "name": "field0",
                              "onBlur": [MockFunction],
                              "onChange": [MockFunction],
                              "value": "",
                            },
                            "info": null,
                            "label": "ojs_select_placeholder",
                            "meta": Object {
                              "error": null,
                              "isValidating": false,
                              "stringFormatter": [MockFunction] {
                                "calls": Array [
                                  Array [
                                    "ojs_select_placeholder",
                                  ],
                                  Array [
                                    "demo",
                                  ],
                                  Array [
                                    "blubb",
                                  ],
                                ],
                                "results": Array [
                                  Object {
                                    "isThrow": false,
                                    "value": "ojs_select_placeholder",
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": "demo",
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": "blubb",
                                  },
                                ],
                              },
                              "valid": true,
                            },
                            "prefix": "demo",
                            "suffix": "blubb",
                            "validators": null,
                          }
                        }
                      />,
                    },
                    "tag": 0,
                  },
                },
              },
              "child": [Circular],
              "effectTag": 32,
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": null,
              "memoizedState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                    Object {
                      "children": <TestComponent />,
                      "field": Object {
                        "id": "field0",
                        "invalid": false,
                        "name": "field0",
                        "onBlur": [MockFunction],
                        "onChange": [MockFunction],
                        "value": "",
                      },
                      "info": null,
                      "label": "ojs_select_placeholder",
                      "meta": Object {
                        "error": null,
                        "isValidating": false,
                        "stringFormatter": [MockFunction] {
                          "calls": Array [
                            Array [
                              "ojs_select_placeholder",
                            ],
                            Array [
                              "demo",
                            ],
                            Array [
                              "blubb",
                            ],
                          ],
                          "results": Array [
                            Object {
                              "isThrow": false,
                              "value": "ojs_select_placeholder",
                            },
                            Object {
                              "isThrow": false,
                              "value": "demo",
                            },
                            Object {
                              "isThrow": false,
                              "value": "blubb",
                            },
                          ],
                        },
                        "valid": true,
                      },
                      "prefix": "demo",
                      "suffix": "blubb",
                      "validators": null,
                    }
                  }
                />,
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseTime": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                    class="row form-group"
                  >
                    <label
                      class="text-right col-sm-3 col-form-label"
                      for="field0"
                    >
                      ojs_select_placeholder
                    </label>
                    <div
                      class="col-sm-9"
                    >
                      <div
                        class="input-group"
                      >
                        <div
                          class="input-group-prepend"
                        >
                          <span
                            class="input-group-text"
                          >
                            demo
                          </span>
                        </div>
                        <div
                          id="field0"
                        />
                        <div
                          class="input-group-append"
                        >
                          <span
                            class="input-group-text"
                          >
                            blubb
                          </span>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "remainingExpirationTime": 0,
              },
              "tag": 3,
              "treeBaseTime": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={null}
                    props={
                      Object {
                        "children": <TestComponent />,
                        "field": Object {
                          "id": "field0",
                          "invalid": false,
                          "name": "field0",
                          "onBlur": [MockFunction],
                          "onChange": [MockFunction],
                          "value": "",
                        },
                        "info": null,
                        "label": "ojs_select_placeholder",
                        "meta": Object {
                          "error": null,
                          "isValidating": false,
                          "stringFormatter": [MockFunction] {
                            "calls": Array [
                              Array [
                                "ojs_select_placeholder",
                              ],
                              Array [
                                "demo",
                              ],
                              Array [
                                "blubb",
                              ],
                            ],
                            "results": Array [
                              Object {
                                "isThrow": false,
                                "value": "ojs_select_placeholder",
                              },
                              Object {
                                "isThrow": false,
                                "value": "demo",
                              },
                              Object {
                                "isThrow": false,
                                "value": "blubb",
                              },
                            ],
                          },
                          "valid": true,
                        },
                        "prefix": "demo",
                        "suffix": "blubb",
                        "validators": null,
                      }
                    }
                  />,
                },
                "expirationTime": 0,
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": null,
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": null,
              },
            },
            "selfBaseTime": 0,
            "sibling": null,
            "stateNode": WrapperComponent {
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {},
              "props": Object {
                "Component": [Function],
                "context": null,
                "props": Object {
                  "children": <TestComponent />,
                  "field": Object {
                    "id": "field0",
                    "invalid": false,
                    "name": "field0",
                    "onBlur": [MockFunction],
                    "onChange": [MockFunction],
                    "value": "",
                  },
                  "info": null,
                  "label": "ojs_select_placeholder",
                  "meta": Object {
                    "error": null,
                    "isValidating": false,
                    "stringFormatter": [MockFunction] {
                      "calls": Array [
                        Array [
                          "ojs_select_placeholder",
                        ],
                        Array [
                          "demo",
                        ],
                        Array [
                          "blubb",
                        ],
                      ],
                      "results": Array [
                        Object {
                          "isThrow": false,
                          "value": "ojs_select_placeholder",
                        },
                        Object {
                          "isThrow": false,
                          "value": "demo",
                        },
                        Object {
                          "isThrow": false,
                          "value": "blubb",
                        },
                      ],
                    },
                    "valid": true,
                  },
                  "prefix": "demo",
                  "suffix": "blubb",
                  "validators": null,
                },
              },
              "refs": Object {},
              "state": Object {
                "context": null,
                "mount": true,
                "props": Object {
                  "children": <TestComponent />,
                  "field": Object {
                    "id": "field0",
                    "invalid": false,
                    "name": "field0",
                    "onBlur": [MockFunction],
                    "onChange": [MockFunction],
                    "value": "",
                  },
                  "info": null,
                  "label": "ojs_select_placeholder",
                  "meta": Object {
                    "error": null,
                    "isValidating": false,
                    "stringFormatter": [MockFunction] {
                      "calls": Array [
                        Array [
                          "ojs_select_placeholder",
                        ],
                        Array [
                          "demo",
                        ],
                        Array [
                          "blubb",
                        ],
                      ],
                      "results": Array [
                        Object {
                          "isThrow": false,
                          "value": "ojs_select_placeholder",
                        },
                        Object {
                          "isThrow": false,
                          "value": "demo",
                        },
                        Object {
                          "isThrow": false,
                          "value": "blubb",
                        },
                      ],
                    },
                    "valid": true,
                  },
                  "prefix": "demo",
                  "suffix": "blubb",
                  "validators": null,
                },
              },
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 2,
            "treeBaseTime": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "selfBaseTime": 0,
          "sibling": null,
          "stateNode": [Circular],
          "tag": 2,
          "treeBaseTime": 0,
          "type": [Function],
          "updateQueue": null,
        },
        "_reactInternalInstance": Object {},
        "context": Object {},
        "props": Object {
          "children": <TestComponent />,
          "field": Object {
            "id": "field0",
            "invalid": false,
            "name": "field0",
            "onBlur": [MockFunction],
            "onChange": [MockFunction],
            "value": "",
          },
          "info": null,
          "label": "ojs_select_placeholder",
          "meta": Object {
            "error": null,
            "isValidating": false,
            "stringFormatter": [MockFunction] {
              "calls": Array [
                Array [
                  "ojs_select_placeholder",
                ],
                Array [
                  "demo",
                ],
                Array [
                  "blubb",
                ],
              ],
              "results": Array [
                Object {
                  "isThrow": false,
                  "value": "ojs_select_placeholder",
                },
                Object {
                  "isThrow": false,
                  "value": "demo",
                },
                Object {
                  "isThrow": false,
                  "value": "blubb",
                },
              ],
            },
            "valid": true,
          },
          "prefix": "demo",
          "suffix": "blubb",
          "validators": null,
        },
        "refs": Object {},
        "state": Object {
          "infoVisible": false,
        },
        "toggleInfo": [Function],
        "updater": Object {
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
        },
      },
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <TestComponent />,
        "field": Object {
          "id": "field0",
          "invalid": false,
          "name": "field0",
          "onBlur": [MockFunction],
          "onChange": [MockFunction],
          "value": "",
        },
        "info": null,
        "label": "ojs_select_placeholder",
        "meta": Object {
          "error": null,
          "isValidating": false,
          "stringFormatter": [MockFunction] {
            "calls": Array [
              Array [
                "ojs_select_placeholder",
              ],
              Array [
                "demo",
              ],
              Array [
                "blubb",
              ],
            ],
            "results": Array [
              Object {
                "isThrow": false,
                "value": "ojs_select_placeholder",
              },
              Object {
                "isThrow": false,
                "value": "demo",
              },
              Object {
                "isThrow": false,
                "value": "blubb",
              },
            ],
          },
          "valid": true,
        },
        "prefix": "demo",
        "suffix": "blubb",
        "validators": null,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <Label
              className="text-right"
              for="field0"
              sm="3"
              tag="label"
              widths={
                Array [
                  "xs",
                  "sm",
                  "md",
                  "lg",
                  "xl",
                ]
              }
            >
              ojs_select_placeholder
            </Label>,
            <Col
              sm="9"
              tag="div"
              widths={
                Array [
                  "xs",
                  "sm",
                  "md",
                  "lg",
                  "xl",
                ]
              }
            >
              <InputGroup
                tag="div"
              >
                <InputGroupAddon
                  addonType="prepend"
                  tag="div"
                >
                  demo
                </InputGroupAddon>
                <TestComponent />
                <InputGroupAddon
                  addonType="append"
                  tag="div"
                >
                  blubb
                </InputGroupAddon>
                <FieldError
                  context={
                    Object {
                      "stringFormatter": [MockFunction] {
                        "calls": Array [
                          Array [
                            "ojs_select_placeholder",
                          ],
                          Array [
                            "demo",
                          ],
                          Array [
                            "blubb",
                          ],
                        ],
                        "results": Array [
                          Object {
                            "isThrow": false,
                            "value": "ojs_select_placeholder",
                          },
                          Object {
                            "isThrow": false,
                            "value": "demo",
                          },
                          Object {
                            "isThrow": false,
                            "value": "blubb",
                          },
                        ],
                      },
                    }
                  }
                  error={null}
                  id="field0_errors"
                  invalid={false}
                />
              </InputGroup>
            </Col>,
          ],
          "className": "",
          "row": true,
          "tag": "div",
        },
        "ref": null,
        "rendered": Object {
          "instance": <div
            class="row form-group"
          >
            <label
              class="text-right col-sm-3 col-form-label"
              for="field0"
            >
              ojs_select_placeholder
            </label>
            <div
              class="col-sm-9"
            >
              <div
                class="input-group"
              >
                <div
                  class="input-group-prepend"
                >
                  <span
                    class="input-group-text"
                  >
                    demo
                  </span>
                </div>
                <div
                  id="field0"
                />
                <div
                  class="input-group-append"
                >
                  <span
                    class="input-group-text"
                  >
                    blubb
                  </span>
                </div>
              </div>
            </div>
          </div>,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <Label
                className="text-right"
                for="field0"
                sm="3"
                tag="label"
                widths={
                  Array [
                    "xs",
                    "sm",
                    "md",
                    "lg",
                    "xl",
                  ]
                }
              >
                ojs_select_placeholder
              </Label>,
              <Col
                sm="9"
                tag="div"
                widths={
                  Array [
                    "xs",
                    "sm",
                    "md",
                    "lg",
                    "xl",
                  ]
                }
              >
                <InputGroup
                  tag="div"
                >
                  <InputGroupAddon
                    addonType="prepend"
                    tag="div"
                  >
                    demo
                  </InputGroupAddon>
                  <TestComponent />
                  <InputGroupAddon
                    addonType="append"
                    tag="div"
                  >
                    blubb
                  </InputGroupAddon>
                  <FieldError
                    context={
                      Object {
                        "stringFormatter": [MockFunction] {
                          "calls": Array [
                            Array [
                              "ojs_select_placeholder",
                            ],
                            Array [
                              "demo",
                            ],
                            Array [
                              "blubb",
                            ],
                          ],
                          "results": Array [
                            Object {
                              "isThrow": false,
                              "value": "ojs_select_placeholder",
                            },
                            Object {
                              "isThrow": false,
                              "value": "demo",
                            },
                            Object {
                              "isThrow": false,
                              "value": "blubb",
                            },
                          ],
                        },
                      }
                    }
                    error={null}
                    id="field0_errors"
                    invalid={false}
                  />
                </InputGroup>
              </Col>,
            ],
            "className": "row form-group",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": Array [
                  null,
                  null,
                  "ojs_select_placeholder",
                  null,
                ],
                "className": "text-right",
                "for": "field0",
                "sm": "3",
                "tag": "label",
                "widths": Array [
                  "xs",
                  "sm",
                  "md",
                  "lg",
                  "xl",
                ],
              },
              "ref": null,
              "rendered": Object {
                "instance": <label
                  class="text-right col-sm-3 col-form-label"
                  for="field0"
                >
                  ojs_select_placeholder
                </label>,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    null,
                    null,
                    "ojs_select_placeholder",
                    null,
                  ],
                  "className": "text-right col-sm-3 col-form-label",
                  "htmlFor": "field0",
                },
                "ref": null,
                "rendered": Array [
                  "ojs_select_placeholder",
                ],
                "type": "label",
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": Array [
                  <InputGroup
                    tag="div"
                  >
                    <InputGroupAddon
                      addonType="prepend"
                      tag="div"
                    >
                      demo
                    </InputGroupAddon>
                    <TestComponent />
                    <InputGroupAddon
                      addonType="append"
                      tag="div"
                    >
                      blubb
                    </InputGroupAddon>
                    <FieldError
                      context={
                        Object {
                          "stringFormatter": [MockFunction] {
                            "calls": Array [
                              Array [
                                "ojs_select_placeholder",
                              ],
                              Array [
                                "demo",
                              ],
                              Array [
                                "blubb",
                              ],
                            ],
                            "results": Array [
                              Object {
                                "isThrow": false,
                                "value": "ojs_select_placeholder",
                              },
                              Object {
                                "isThrow": false,
                                "value": "demo",
                              },
                              Object {
                                "isThrow": false,
                                "value": "blubb",
                              },
                            ],
                          },
                        }
                      }
                      error={null}
                      id="field0_errors"
                      invalid={false}
                    />
                  </InputGroup>,
                  null,
                ],
                "sm": "9",
                "tag": "div",
                "widths": Array [
                  "xs",
                  "sm",
                  "md",
                  "lg",
                  "xl",
                ],
              },
              "ref": null,
              "rendered": Object {
                "instance": <div
                  class="col-sm-9"
                >
                  <div
                    class="input-group"
                  >
                    <div
                      class="input-group-prepend"
                    >
                      <span
                        class="input-group-text"
                      >
                        demo
                      </span>
                    </div>
                    <div
                      id="field0"
                    />
                    <div
                      class="input-group-append"
                    >
                      <span
                        class="input-group-text"
                      >
                        blubb
                      </span>
                    </div>
                  </div>
                </div>,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <InputGroup
                      tag="div"
                    >
                      <InputGroupAddon
                        addonType="prepend"
                        tag="div"
                      >
                        demo
                      </InputGroupAddon>
                      <TestComponent />
                      <InputGroupAddon
                        addonType="append"
                        tag="div"
                      >
                        blubb
                      </InputGroupAddon>
                      <FieldError
                        context={
                          Object {
                            "stringFormatter": [MockFunction] {
                              "calls": Array [
                                Array [
                                  "ojs_select_placeholder",
                                ],
                                Array [
                                  "demo",
                                ],
                                Array [
                                  "blubb",
                                ],
                              ],
                              "results": Array [
                                Object {
                                  "isThrow": false,
                                  "value": "ojs_select_placeholder",
                                },
                                Object {
                                  "isThrow": false,
                                  "value": "demo",
                                },
                                Object {
                                  "isThrow": false,
                                  "value": "blubb",
                                },
                              ],
                            },
                          }
                        }
                        error={null}
                        id="field0_errors"
                        invalid={false}
                      />
                    </InputGroup>,
                    null,
                  ],
                  "className": "col-sm-9",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "children": Array [
                        <InputGroupAddon
                          addonType="prepend"
                          tag="div"
                        >
                          demo
                        </InputGroupAddon>,
                        <TestComponent />,
                        <InputGroupAddon
                          addonType="append"
                          tag="div"
                        >
                          blubb
                        </InputGroupAddon>,
                        null,
                        <FieldError
                          context={
                            Object {
                              "stringFormatter": [MockFunction] {
                                "calls": Array [
                                  Array [
                                    "ojs_select_placeholder",
                                  ],
                                  Array [
                                    "demo",
                                  ],
                                  Array [
                                    "blubb",
                                  ],
                                ],
                                "results": Array [
                                  Object {
                                    "isThrow": false,
                                    "value": "ojs_select_placeholder",
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": "demo",
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": "blubb",
                                  },
                                ],
                              },
                            }
                          }
                          error={null}
                          id="field0_errors"
                          invalid={false}
                        />,
                      ],
                      "tag": "div",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": <div
                        class="input-group"
                      >
                        <div
                          class="input-group-prepend"
                        >
                          <span
                            class="input-group-text"
                          >
                            demo
                          </span>
                        </div>
                        <div
                          id="field0"
                        />
                        <div
                          class="input-group-append"
                        >
                          <span
                            class="input-group-text"
                          >
                            blubb
                          </span>
                        </div>
                      </div>,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": Array [
                          <InputGroupAddon
                            addonType="prepend"
                            tag="div"
                          >
                            demo
                          </InputGroupAddon>,
                          <TestComponent />,
                          <InputGroupAddon
                            addonType="append"
                            tag="div"
                          >
                            blubb
                          </InputGroupAddon>,
                          null,
                          <FieldError
                            context={
                              Object {
                                "stringFormatter": [MockFunction] {
                                  "calls": Array [
                                    Array [
                                      "ojs_select_placeholder",
                                    ],
                                    Array [
                                      "demo",
                                    ],
                                    Array [
                                      "blubb",
                                    ],
                                  ],
                                  "results": Array [
                                    Object {
                                      "isThrow": false,
                                      "value": "ojs_select_placeholder",
                                    },
                                    Object {
                                      "isThrow": false,
                                      "value": "demo",
                                    },
                                    Object {
                                      "isThrow": false,
                                      "value": "blubb",
                                    },
                                  ],
                                },
                              }
                            }
                            error={null}
                            id="field0_errors"
                            invalid={false}
                          />,
                        ],
                        "className": "input-group",
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "function",
                          "props": Object {
                            "addonType": "prepend",
                            "children": "demo",
                            "tag": "div",
                          },
                          "ref": null,
                          "rendered": Object {
                            "instance": <div
                              class="input-group-prepend"
                            >
                              <span
                                class="input-group-text"
                              >
                                demo
                              </span>
                            </div>,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": <InputGroupText
                                tag="span"
                              >
                                demo
                              </InputGroupText>,
                              "className": "input-group-prepend",
                            },
                            "ref": null,
                            "rendered": Array [
                              Object {
                                "instance": null,
                                "key": undefined,
                                "nodeType": "function",
                                "props": Object {
                                  "children": "demo",
                                  "tag": "span",
                                },
                                "ref": null,
                                "rendered": Object {
                                  "instance": <span
                                    class="input-group-text"
                                  >
                                    demo
                                  </span>,
                                  "key": undefined,
                                  "nodeType": "host",
                                  "props": Object {
                                    "children": "demo",
                                    "className": "input-group-text",
                                  },
                                  "ref": null,
                                  "rendered": Array [
                                    "demo",
                                  ],
                                  "type": "span",
                                },
                                "type": [Function],
                              },
                            ],
                            "type": "div",
                          },
                          "type": [Function],
                        },
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "function",
                          "props": Object {},
                          "ref": null,
                          "rendered": Object {
                            "instance": <div
                              id="field0"
                            />,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "id": "field0",
                            },
                            "ref": null,
                            "rendered": Array [
                              undefined,
                            ],
                            "type": "div",
                          },
                          "type": [Function],
                        },
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "function",
                          "props": Object {
                            "addonType": "append",
                            "children": "blubb",
                            "tag": "div",
                          },
                          "ref": null,
                          "rendered": Object {
                            "instance": <div
                              class="input-group-append"
                            >
                              <span
                                class="input-group-text"
                              >
                                blubb
                              </span>
                            </div>,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": <InputGroupText
                                tag="span"
                              >
                                blubb
                              </InputGroupText>,
                              "className": "input-group-append",
                            },
                            "ref": null,
                            "rendered": Array [
                              Object {
                                "instance": null,
                                "key": undefined,
                                "nodeType": "function",
                                "props": Object {
                                  "children": "blubb",
                                  "tag": "span",
                                },
                                "ref": null,
                                "rendered": Object {
                                  "instance": <span
                                    class="input-group-text"
                                  >
                                    blubb
                                  </span>,
                                  "key": undefined,
                                  "nodeType": "host",
                                  "props": Object {
                                    "children": "blubb",
                                    "className": "input-group-text",
                                  },
                                  "ref": null,
                                  "rendered": Array [
                                    "blubb",
                                  ],
                                  "type": "span",
                                },
                                "type": [Function],
                              },
                            ],
                            "type": "div",
                          },
                          "type": [Function],
                        },
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "function",
                          "props": Object {
                            "context": Object {
                              "stringFormatter": [MockFunction] {
                                "calls": Array [
                                  Array [
                                    "ojs_select_placeholder",
                                  ],
                                  Array [
                                    "demo",
                                  ],
                                  Array [
                                    "blubb",
                                  ],
                                ],
                                "results": Array [
                                  Object {
                                    "isThrow": false,
                                    "value": "ojs_select_placeholder",
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": "demo",
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": "blubb",
                                  },
                                ],
                              },
                            },
                            "error": null,
                            "id": "field0_errors",
                            "invalid": false,
                          },
                          "ref": null,
                          "rendered": null,
                          "type": [Function],
                        },
                      ],
                      "type": "div",
                    },
                    "type": [Function],
                  },
                ],
                "type": "div",
              },
              "type": [Function],
            },
          ],
          "type": "div",
        },
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`<FieldLine /> should support prefixes and suffixes with functions 1`] = `
ReactWrapper {
  "length": 1,
  Symbol(enzyme.__unrendered__): <FieldLine
    field={
      Object {
        "id": "field0",
        "invalid": false,
        "name": "field0",
        "onBlur": [MockFunction],
        "onChange": [MockFunction],
        "value": "",
      }
    }
    info={null}
    label="ojs_select_placeholder"
    meta={
      Object {
        "error": null,
        "isValidating": false,
        "stringFormatter": [MockFunction] {
          "calls": Array [
            Array [
              "ojs_select_placeholder",
            ],
          ],
          "results": Array [
            Object {
              "isThrow": false,
              "value": "ojs_select_placeholder",
            },
          ],
        },
        "valid": true,
      }
    }
    prefix={[Function]}
    suffix={[Function]}
    validators={null}
  >
    <TestComponent />
  </FieldLine>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__node__): Object {
    "instance": FieldLine {
      "_reactInternalFiber": FiberNode {
        "_debugID": 186,
        "_debugIsCurrentlyTiming": false,
        "_debugOwner": FiberNode {
          "_debugID": 185,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": null,
          "_debugSource": null,
          "alternate": null,
          "child": [Circular],
          "effectTag": 1,
          "expirationTime": 0,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {
              "children": <TestComponent />,
              "field": Object {
                "id": "field0",
                "invalid": false,
                "name": "field0",
                "onBlur": [MockFunction],
                "onChange": [MockFunction],
                "value": "",
              },
              "info": null,
              "label": "ojs_select_placeholder",
              "meta": Object {
                "error": null,
                "isValidating": false,
                "stringFormatter": [MockFunction] {
                  "calls": Array [
                    Array [
                      "ojs_select_placeholder",
                    ],
                  ],
                  "results": Array [
                    Object {
                      "isThrow": false,
                      "value": "ojs_select_placeholder",
                    },
                  ],
                },
                "valid": true,
              },
              "prefix": [Function],
              "suffix": [Function],
              "validators": null,
            },
          },
          "memoizedState": Object {
            "context": null,
            "mount": true,
            "props": Object {
              "children": <TestComponent />,
              "field": Object {
                "id": "field0",
                "invalid": false,
                "name": "field0",
                "onBlur": [MockFunction],
                "onChange": [MockFunction],
                "value": "",
              },
              "info": null,
              "label": "ojs_select_placeholder",
              "meta": Object {
                "error": null,
                "isValidating": false,
                "stringFormatter": [MockFunction] {
                  "calls": Array [
                    Array [
                      "ojs_select_placeholder",
                    ],
                  ],
                  "results": Array [
                    Object {
                      "isThrow": false,
                      "value": "ojs_select_placeholder",
                    },
                  ],
                },
                "valid": true,
              },
              "prefix": [Function],
              "suffix": [Function],
              "validators": null,
            },
          },
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {
              "children": <TestComponent />,
              "field": Object {
                "id": "field0",
                "invalid": false,
                "name": "field0",
                "onBlur": [MockFunction],
                "onChange": [MockFunction],
                "value": "",
              },
              "info": null,
              "label": "ojs_select_placeholder",
              "meta": Object {
                "error": null,
                "isValidating": false,
                "stringFormatter": [MockFunction] {
                  "calls": Array [
                    Array [
                      "ojs_select_placeholder",
                    ],
                  ],
                  "results": Array [
                    Object {
                      "isThrow": false,
                      "value": "ojs_select_placeholder",
                    },
                  ],
                },
                "valid": true,
              },
              "prefix": [Function],
              "suffix": [Function],
              "validators": null,
            },
          },
          "ref": null,
          "return": FiberNode {
            "_debugID": 183,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "alternate": FiberNode {
              "_debugID": 183,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "alternate": [Circular],
              "child": null,
              "effectTag": 0,
              "expirationTime": 1,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": null,
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseTime": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                    class="row form-group"
                  >
                    <label
                      class="text-right col-sm-3 col-form-label"
                      for="field0"
                    >
                      ojs_select_placeholder
                    </label>
                    <div
                      class="col-sm-9"
                    >
                      <div
                        class="input-group"
                      >
                        <div
                          class="input-group-prepend"
                        >
                          <div>
                            custom prefix
                          </div>
                        </div>
                        <div
                          id="field0"
                        />
                        <div
                          class="input-group-append"
                        >
                          <div>
                            custom suffix
                          </div>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "remainingExpirationTime": 0,
              },
              "tag": 3,
              "treeBaseTime": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": null,
                "expirationTime": 1,
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": Object {
                  "callback": null,
                  "expirationTime": 1,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "children": <TestComponent />,
                          "field": Object {
                            "id": "field0",
                            "invalid": false,
                            "name": "field0",
                            "onBlur": [MockFunction],
                            "onChange": [MockFunction],
                            "value": "",
                          },
                          "info": null,
                          "label": "ojs_select_placeholder",
                          "meta": Object {
                            "error": null,
                            "isValidating": false,
                            "stringFormatter": [MockFunction] {
                              "calls": Array [
                                Array [
                                  "ojs_select_placeholder",
                                ],
                              ],
                              "results": Array [
                                Object {
                                  "isThrow": false,
                                  "value": "ojs_select_placeholder",
                                },
                              ],
                            },
                            "valid": true,
                          },
                          "prefix": [Function],
                          "suffix": [Function],
                          "validators": null,
                        }
                      }
                    />,
                  },
                  "tag": 0,
                },
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": Object {
                  "callback": null,
                  "expirationTime": 1,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "children": <TestComponent />,
                          "field": Object {
                            "id": "field0",
                            "invalid": false,
                            "name": "field0",
                            "onBlur": [MockFunction],
                            "onChange": [MockFunction],
                            "value": "",
                          },
                          "info": null,
                          "label": "ojs_select_placeholder",
                          "meta": Object {
                            "error": null,
                            "isValidating": false,
                            "stringFormatter": [MockFunction] {
                              "calls": Array [
                                Array [
                                  "ojs_select_placeholder",
                                ],
                              ],
                              "results": Array [
                                Object {
                                  "isThrow": false,
                                  "value": "ojs_select_placeholder",
                                },
                              ],
                            },
                            "valid": true,
                          },
                          "prefix": [Function],
                          "suffix": [Function],
                          "validators": null,
                        }
                      }
                    />,
                  },
                  "tag": 0,
                },
              },
            },
            "child": [Circular],
            "effectTag": 32,
            "expirationTime": 0,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": null,
            "memoizedState": Object {
              "element": <WrapperComponent
                Component={[Function]}
                context={null}
                props={
                  Object {
                    "children": <TestComponent />,
                    "field": Object {
                      "id": "field0",
                      "invalid": false,
                      "name": "field0",
                      "onBlur": [MockFunction],
                      "onChange": [MockFunction],
                      "value": "",
                    },
                    "info": null,
                    "label": "ojs_select_placeholder",
                    "meta": Object {
                      "error": null,
                      "isValidating": false,
                      "stringFormatter": [MockFunction] {
                        "calls": Array [
                          Array [
                            "ojs_select_placeholder",
                          ],
                        ],
                        "results": Array [
                          Object {
                            "isThrow": false,
                            "value": "ojs_select_placeholder",
                          },
                        ],
                      },
                      "valid": true,
                    },
                    "prefix": [Function],
                    "suffix": [Function],
                    "validators": null,
                  }
                }
              />,
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": null,
            "selfBaseTime": 0,
            "sibling": null,
            "stateNode": Object {
              "containerInfo": <div>
                <div
                  class="row form-group"
                >
                  <label
                    class="text-right col-sm-3 col-form-label"
                    for="field0"
                  >
                    ojs_select_placeholder
                  </label>
                  <div
                    class="col-sm-9"
                  >
                    <div
                      class="input-group"
                    >
                      <div
                        class="input-group-prepend"
                      >
                        <div>
                          custom prefix
                        </div>
                      </div>
                      <div
                        id="field0"
                      />
                      <div
                        class="input-group-append"
                      >
                        <div>
                          custom suffix
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </div>,
              "context": Object {},
              "current": [Circular],
              "earliestPendingTime": 0,
              "earliestSuspendedTime": 0,
              "finishedWork": null,
              "firstBatch": null,
              "hydrate": false,
              "latestPendingTime": 0,
              "latestPingedTime": 0,
              "latestSuspendedTime": 0,
              "nextScheduledRoot": null,
              "pendingChildren": null,
              "pendingCommitExpirationTime": 0,
              "pendingContext": null,
              "remainingExpirationTime": 0,
            },
            "tag": 3,
            "treeBaseTime": 0,
            "type": null,
            "updateQueue": Object {
              "baseState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                    Object {
                      "children": <TestComponent />,
                      "field": Object {
                        "id": "field0",
                        "invalid": false,
                        "name": "field0",
                        "onBlur": [MockFunction],
                        "onChange": [MockFunction],
                        "value": "",
                      },
                      "info": null,
                      "label": "ojs_select_placeholder",
                      "meta": Object {
                        "error": null,
                        "isValidating": false,
                        "stringFormatter": [MockFunction] {
                          "calls": Array [
                            Array [
                              "ojs_select_placeholder",
                            ],
                          ],
                          "results": Array [
                            Object {
                              "isThrow": false,
                              "value": "ojs_select_placeholder",
                            },
                          ],
                        },
                        "valid": true,
                      },
                      "prefix": [Function],
                      "suffix": [Function],
                      "validators": null,
                    }
                  }
                />,
              },
              "expirationTime": 0,
              "firstCapturedEffect": null,
              "firstCapturedUpdate": null,
              "firstEffect": null,
              "firstUpdate": null,
              "lastCapturedEffect": null,
              "lastCapturedUpdate": null,
              "lastEffect": null,
              "lastUpdate": null,
            },
          },
          "selfBaseTime": 0,
          "sibling": null,
          "stateNode": WrapperComponent {
            "_reactInternalFiber": [Circular],
            "_reactInternalInstance": Object {},
            "context": Object {},
            "props": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "children": <TestComponent />,
                "field": Object {
                  "id": "field0",
                  "invalid": false,
                  "name": "field0",
                  "onBlur": [MockFunction],
                  "onChange": [MockFunction],
                  "value": "",
                },
                "info": null,
                "label": "ojs_select_placeholder",
                "meta": Object {
                  "error": null,
                  "isValidating": false,
                  "stringFormatter": [MockFunction] {
                    "calls": Array [
                      Array [
                        "ojs_select_placeholder",
                      ],
                    ],
                    "results": Array [
                      Object {
                        "isThrow": false,
                        "value": "ojs_select_placeholder",
                      },
                    ],
                  },
                  "valid": true,
                },
                "prefix": [Function],
                "suffix": [Function],
                "validators": null,
              },
            },
            "refs": Object {},
            "state": Object {
              "context": null,
              "mount": true,
              "props": Object {
                "children": <TestComponent />,
                "field": Object {
                  "id": "field0",
                  "invalid": false,
                  "name": "field0",
                  "onBlur": [MockFunction],
                  "onChange": [MockFunction],
                  "value": "",
                },
                "info": null,
                "label": "ojs_select_placeholder",
                "meta": Object {
                  "error": null,
                  "isValidating": false,
                  "stringFormatter": [MockFunction] {
                    "calls": Array [
                      Array [
                        "ojs_select_placeholder",
                      ],
                    ],
                    "results": Array [
                      Object {
                        "isThrow": false,
                        "value": "ojs_select_placeholder",
                      },
                    ],
                  },
                  "valid": true,
                },
                "prefix": [Function],
                "suffix": [Function],
                "validators": null,
              },
            },
            "updater": Object {
              "enqueueForceUpdate": [Function],
              "enqueueReplaceState": [Function],
              "enqueueSetState": [Function],
              "isMounted": [Function],
            },
          },
          "tag": 2,
          "treeBaseTime": 0,
          "type": [Function],
          "updateQueue": null,
        },
        "_debugSource": null,
        "alternate": null,
        "child": FiberNode {
          "_debugID": 187,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": [Circular],
          "_debugSource": null,
          "alternate": null,
          "child": FiberNode {
            "_debugID": 188,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": null,
            "alternate": null,
            "child": FiberNode {
              "_debugID": 189,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "alternate": null,
              "child": FiberNode {
                "_debugID": 191,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 192,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "alternate": null,
                  "child": null,
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 2,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": "ojs_select_placeholder",
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": "ojs_select_placeholder",
                  "ref": null,
                  "return": [Circular],
                  "selfBaseTime": 0,
                  "sibling": null,
                  "stateNode": ojs_select_placeholder,
                  "tag": 6,
                  "treeBaseTime": 0,
                  "type": null,
                  "updateQueue": null,
                },
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": Array [
                    null,
                    null,
                    "ojs_select_placeholder",
                    null,
                  ],
                  "className": "text-right col-sm-3 col-form-label",
                  "htmlFor": "field0",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": Array [
                    null,
                    null,
                    "ojs_select_placeholder",
                    null,
                  ],
                  "className": "text-right col-sm-3 col-form-label",
                  "htmlFor": "field0",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseTime": 0,
                "sibling": null,
                "stateNode": <label
                  class="text-right col-sm-3 col-form-label"
                  for="field0"
                >
                  ojs_select_placeholder
                </label>,
                "tag": 5,
                "treeBaseTime": 0,
                "type": "label",
                "updateQueue": null,
              },
              "effectTag": 1,
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": Array [
                  null,
                  null,
                  "ojs_select_placeholder",
                  null,
                ],
                "className": "text-right",
                "for": "field0",
                "sm": "3",
                "tag": "label",
                "widths": Array [
                  "xs",
                  "sm",
                  "md",
                  "lg",
                  "xl",
                ],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": Array [
                  null,
                  null,
                  "ojs_select_placeholder",
                  null,
                ],
                "className": "text-right",
                "for": "field0",
                "sm": "3",
                "tag": "label",
                "widths": Array [
                  "xs",
                  "sm",
                  "md",
                  "lg",
                  "xl",
                ],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseTime": 0,
              "sibling": FiberNode {
                "_debugID": 190,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 193,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 194,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 195,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": null,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 196,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": null,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 200,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": null,
                          "alternate": null,
                          "child": FiberNode {
                            "_debugID": 201,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": null,
                            "alternate": null,
                            "child": null,
                            "effectTag": 0,
                            "expirationTime": 0,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": "custom prefix",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": "custom prefix",
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseTime": 0,
                            "sibling": null,
                            "stateNode": <div>
                              custom prefix
                            </div>,
                            "tag": 5,
                            "treeBaseTime": 0,
                            "type": "div",
                            "updateQueue": null,
                          },
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": <div>
                              custom prefix
                            </div>,
                            "className": "input-group-prepend",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": <div>
                              custom prefix
                            </div>,
                            "className": "input-group-prepend",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseTime": 0,
                          "sibling": null,
                          "stateNode": <div
                            class="input-group-prepend"
                          >
                            <div>
                              custom prefix
                            </div>
                          </div>,
                          "tag": 5,
                          "treeBaseTime": 0,
                          "type": "div",
                          "updateQueue": null,
                        },
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "addonType": "prepend",
                          "children": <div>
                            custom prefix
                          </div>,
                          "tag": "div",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "addonType": "prepend",
                          "children": <div>
                            custom prefix
                          </div>,
                          "tag": "div",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseTime": 0,
                        "sibling": FiberNode {
                          "_debugID": 197,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": null,
                          "child": FiberNode {
                            "_debugID": 202,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": null,
                            "alternate": null,
                            "child": null,
                            "effectTag": 0,
                            "expirationTime": 0,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "id": "field0",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "id": "field0",
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseTime": 0,
                            "sibling": null,
                            "stateNode": <div
                              id="field0"
                            />,
                            "tag": 5,
                            "treeBaseTime": 0,
                            "type": "div",
                            "updateQueue": null,
                          },
                          "effectTag": 1,
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 1,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {},
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {},
                          "ref": null,
                          "return": [Circular],
                          "selfBaseTime": 0,
                          "sibling": FiberNode {
                            "_debugID": 198,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": null,
                            "alternate": null,
                            "child": FiberNode {
                              "_debugID": 203,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": null,
                              "alternate": null,
                              "child": FiberNode {
                                "_debugID": 204,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": [Circular],
                                "_debugSource": null,
                                "alternate": null,
                                "child": null,
                                "effectTag": 0,
                                "expirationTime": 0,
                                "firstEffect": null,
                                "index": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "children": "custom suffix",
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": Object {
                                  "children": "custom suffix",
                                },
                                "ref": null,
                                "return": [Circular],
                                "selfBaseTime": 0,
                                "sibling": null,
                                "stateNode": <div>
                                  custom suffix
                                </div>,
                                "tag": 5,
                                "treeBaseTime": 0,
                                "type": "div",
                                "updateQueue": null,
                              },
                              "effectTag": 0,
                              "expirationTime": 0,
                              "firstEffect": null,
                              "index": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": <div>
                                  custom suffix
                                </div>,
                                "className": "input-group-append",
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "children": <div>
                                  custom suffix
                                </div>,
                                "className": "input-group-append",
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseTime": 0,
                              "sibling": null,
                              "stateNode": <div
                                class="input-group-append"
                              >
                                <div>
                                  custom suffix
                                </div>
                              </div>,
                              "tag": 5,
                              "treeBaseTime": 0,
                              "type": "div",
                              "updateQueue": null,
                            },
                            "effectTag": 1,
                            "expirationTime": 0,
                            "firstEffect": null,
                            "index": 2,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "addonType": "append",
                              "children": <div>
                                custom suffix
                              </div>,
                              "tag": "div",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "addonType": "append",
                              "children": <div>
                                custom suffix
                              </div>,
                              "tag": "div",
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseTime": 0,
                            "sibling": FiberNode {
                              "_debugID": 199,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": null,
                              "alternate": null,
                              "child": null,
                              "effectTag": 1,
                              "expirationTime": 0,
                              "firstEffect": null,
                              "index": 4,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "context": Object {
                                  "stringFormatter": [MockFunction] {
                                    "calls": Array [
                                      Array [
                                        "ojs_select_placeholder",
                                      ],
                                    ],
                                    "results": Array [
                                      Object {
                                        "isThrow": false,
                                        "value": "ojs_select_placeholder",
                                      },
                                    ],
                                  },
                                },
                                "error": null,
                                "id": "field0_errors",
                                "invalid": false,
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "context": Object {
                                  "stringFormatter": [MockFunction] {
                                    "calls": Array [
                                      Array [
                                        "ojs_select_placeholder",
                                      ],
                                    ],
                                    "results": Array [
                                      Object {
                                        "isThrow": false,
                                        "value": "ojs_select_placeholder",
                                      },
                                    ],
                                  },
                                },
                                "error": null,
                                "id": "field0_errors",
                                "invalid": false,
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseTime": 0,
                              "sibling": null,
                              "stateNode": null,
                              "tag": 1,
                              "treeBaseTime": 0,
                              "type": [Function],
                              "updateQueue": null,
                            },
                            "stateNode": null,
                            "tag": 1,
                            "treeBaseTime": 0,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "stateNode": null,
                          "tag": 1,
                          "treeBaseTime": 0,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "stateNode": null,
                        "tag": 1,
                        "treeBaseTime": 0,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": Array [
                          <InputGroupAddon
                            addonType="prepend"
                            tag="div"
                          >
                            <div>
                              custom prefix
                            </div>
                          </InputGroupAddon>,
                          <TestComponent />,
                          <InputGroupAddon
                            addonType="append"
                            tag="div"
                          >
                            <div>
                              custom suffix
                            </div>
                          </InputGroupAddon>,
                          null,
                          <FieldError
                            context={
                              Object {
                                "stringFormatter": [MockFunction] {
                                  "calls": Array [
                                    Array [
                                      "ojs_select_placeholder",
                                    ],
                                  ],
                                  "results": Array [
                                    Object {
                                      "isThrow": false,
                                      "value": "ojs_select_placeholder",
                                    },
                                  ],
                                },
                              }
                            }
                            error={null}
                            id="field0_errors"
                            invalid={false}
                          />,
                        ],
                        "className": "input-group",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": Array [
                          <InputGroupAddon
                            addonType="prepend"
                            tag="div"
                          >
                            <div>
                              custom prefix
                            </div>
                          </InputGroupAddon>,
                          <TestComponent />,
                          <InputGroupAddon
                            addonType="append"
                            tag="div"
                          >
                            <div>
                              custom suffix
                            </div>
                          </InputGroupAddon>,
                          null,
                          <FieldError
                            context={
                              Object {
                                "stringFormatter": [MockFunction] {
                                  "calls": Array [
                                    Array [
                                      "ojs_select_placeholder",
                                    ],
                                  ],
                                  "results": Array [
                                    Object {
                                      "isThrow": false,
                                      "value": "ojs_select_placeholder",
                                    },
                                  ],
                                },
                              }
                            }
                            error={null}
                            id="field0_errors"
                            invalid={false}
                          />,
                        ],
                        "className": "input-group",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseTime": 0,
                      "sibling": null,
                      "stateNode": <div
                        class="input-group"
                      >
                        <div
                          class="input-group-prepend"
                        >
                          <div>
                            custom prefix
                          </div>
                        </div>
                        <div
                          id="field0"
                        />
                        <div
                          class="input-group-append"
                        >
                          <div>
                            custom suffix
                          </div>
                        </div>
                      </div>,
                      "tag": 5,
                      "treeBaseTime": 0,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "effectTag": 1,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": Array [
                        <InputGroupAddon
                          addonType="prepend"
                          tag="div"
                        >
                          <div>
                            custom prefix
                          </div>
                        </InputGroupAddon>,
                        <TestComponent />,
                        <InputGroupAddon
                          addonType="append"
                          tag="div"
                        >
                          <div>
                            custom suffix
                          </div>
                        </InputGroupAddon>,
                        null,
                        <FieldError
                          context={
                            Object {
                              "stringFormatter": [MockFunction] {
                                "calls": Array [
                                  Array [
                                    "ojs_select_placeholder",
                                  ],
                                ],
                                "results": Array [
                                  Object {
                                    "isThrow": false,
                                    "value": "ojs_select_placeholder",
                                  },
                                ],
                              },
                            }
                          }
                          error={null}
                          id="field0_errors"
                          invalid={false}
                        />,
                      ],
                      "tag": "div",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": Array [
                        <InputGroupAddon
                          addonType="prepend"
                          tag="div"
                        >
                          <div>
                            custom prefix
                          </div>
                        </InputGroupAddon>,
                        <TestComponent />,
                        <InputGroupAddon
                          addonType="append"
                          tag="div"
                        >
                          <div>
                            custom suffix
                          </div>
                        </InputGroupAddon>,
                        null,
                        <FieldError
                          context={
                            Object {
                              "stringFormatter": [MockFunction] {
                                "calls": Array [
                                  Array [
                                    "ojs_select_placeholder",
                                  ],
                                ],
                                "results": Array [
                                  Object {
                                    "isThrow": false,
                                    "value": "ojs_select_placeholder",
                                  },
                                ],
                              },
                            }
                          }
                          error={null}
                          id="field0_errors"
                          invalid={false}
                        />,
                      ],
                      "tag": "div",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseTime": 0,
                    "sibling": null,
                    "stateNode": null,
                    "tag": 1,
                    "treeBaseTime": 0,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": Array [
                      <InputGroup
                        tag="div"
                      >
                        <InputGroupAddon
                          addonType="prepend"
                          tag="div"
                        >
                          <div>
                            custom prefix
                          </div>
                        </InputGroupAddon>
                        <TestComponent />
                        <InputGroupAddon
                          addonType="append"
                          tag="div"
                        >
                          <div>
                            custom suffix
                          </div>
                        </InputGroupAddon>
                        <FieldError
                          context={
                            Object {
                              "stringFormatter": [MockFunction] {
                                "calls": Array [
                                  Array [
                                    "ojs_select_placeholder",
                                  ],
                                ],
                                "results": Array [
                                  Object {
                                    "isThrow": false,
                                    "value": "ojs_select_placeholder",
                                  },
                                ],
                              },
                            }
                          }
                          error={null}
                          id="field0_errors"
                          invalid={false}
                        />
                      </InputGroup>,
                      null,
                    ],
                    "className": "col-sm-9",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": Array [
                      <InputGroup
                        tag="div"
                      >
                        <InputGroupAddon
                          addonType="prepend"
                          tag="div"
                        >
                          <div>
                            custom prefix
                          </div>
                        </InputGroupAddon>
                        <TestComponent />
                        <InputGroupAddon
                          addonType="append"
                          tag="div"
                        >
                          <div>
                            custom suffix
                          </div>
                        </InputGroupAddon>
                        <FieldError
                          context={
                            Object {
                              "stringFormatter": [MockFunction] {
                                "calls": Array [
                                  Array [
                                    "ojs_select_placeholder",
                                  ],
                                ],
                                "results": Array [
                                  Object {
                                    "isThrow": false,
                                    "value": "ojs_select_placeholder",
                                  },
                                ],
                              },
                            }
                          }
                          error={null}
                          id="field0_errors"
                          invalid={false}
                        />
                      </InputGroup>,
                      null,
                    ],
                    "className": "col-sm-9",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseTime": 0,
                  "sibling": null,
                  "stateNode": <div
                    class="col-sm-9"
                  >
                    <div
                      class="input-group"
                    >
                      <div
                        class="input-group-prepend"
                      >
                        <div>
                          custom prefix
                        </div>
                      </div>
                      <div
                        id="field0"
                      />
                      <div
                        class="input-group-append"
                      >
                        <div>
                          custom suffix
                        </div>
                      </div>
                    </div>
                  </div>,
                  "tag": 5,
                  "treeBaseTime": 0,
                  "type": "div",
                  "updateQueue": null,
                },
                "effectTag": 1,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 1,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": Array [
                    <InputGroup
                      tag="div"
                    >
                      <InputGroupAddon
                        addonType="prepend"
                        tag="div"
                      >
                        <div>
                          custom prefix
                        </div>
                      </InputGroupAddon>
                      <TestComponent />
                      <InputGroupAddon
                        addonType="append"
                        tag="div"
                      >
                        <div>
                          custom suffix
                        </div>
                      </InputGroupAddon>
                      <FieldError
                        context={
                          Object {
                            "stringFormatter": [MockFunction] {
                              "calls": Array [
                                Array [
                                  "ojs_select_placeholder",
                                ],
                              ],
                              "results": Array [
                                Object {
                                  "isThrow": false,
                                  "value": "ojs_select_placeholder",
                                },
                              ],
                            },
                          }
                        }
                        error={null}
                        id="field0_errors"
                        invalid={false}
                      />
                    </InputGroup>,
                    null,
                  ],
                  "sm": "9",
                  "tag": "div",
                  "widths": Array [
                    "xs",
                    "sm",
                    "md",
                    "lg",
                    "xl",
                  ],
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": Array [
                    <InputGroup
                      tag="div"
                    >
                      <InputGroupAddon
                        addonType="prepend"
                        tag="div"
                      >
                        <div>
                          custom prefix
                        </div>
                      </InputGroupAddon>
                      <TestComponent />
                      <InputGroupAddon
                        addonType="append"
                        tag="div"
                      >
                        <div>
                          custom suffix
                        </div>
                      </InputGroupAddon>
                      <FieldError
                        context={
                          Object {
                            "stringFormatter": [MockFunction] {
                              "calls": Array [
                                Array [
                                  "ojs_select_placeholder",
                                ],
                              ],
                              "results": Array [
                                Object {
                                  "isThrow": false,
                                  "value": "ojs_select_placeholder",
                                },
                              ],
                            },
                          }
                        }
                        error={null}
                        id="field0_errors"
                        invalid={false}
                      />
                    </InputGroup>,
                    null,
                  ],
                  "sm": "9",
                  "tag": "div",
                  "widths": Array [
                    "xs",
                    "sm",
                    "md",
                    "lg",
                    "xl",
                  ],
                },
                "ref": null,
                "return": [Circular],
                "selfBaseTime": 0,
                "sibling": null,
                "stateNode": null,
                "tag": 1,
                "treeBaseTime": 0,
                "type": [Function],
                "updateQueue": null,
              },
              "stateNode": null,
              "tag": 1,
              "treeBaseTime": 0,
              "type": [Function],
              "updateQueue": null,
            },
            "effectTag": 0,
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "children": Array [
                <Label
                  className="text-right"
                  for="field0"
                  sm="3"
                  tag="label"
                  widths={
                    Array [
                      "xs",
                      "sm",
                      "md",
                      "lg",
                      "xl",
                    ]
                  }
                >
                  ojs_select_placeholder
                </Label>,
                <Col
                  sm="9"
                  tag="div"
                  widths={
                    Array [
                      "xs",
                      "sm",
                      "md",
                      "lg",
                      "xl",
                    ]
                  }
                >
                  <InputGroup
                    tag="div"
                  >
                    <InputGroupAddon
                      addonType="prepend"
                      tag="div"
                    >
                      <div>
                        custom prefix
                      </div>
                    </InputGroupAddon>
                    <TestComponent />
                    <InputGroupAddon
                      addonType="append"
                      tag="div"
                    >
                      <div>
                        custom suffix
                      </div>
                    </InputGroupAddon>
                    <FieldError
                      context={
                        Object {
                          "stringFormatter": [MockFunction] {
                            "calls": Array [
                              Array [
                                "ojs_select_placeholder",
                              ],
                            ],
                            "results": Array [
                              Object {
                                "isThrow": false,
                                "value": "ojs_select_placeholder",
                              },
                            ],
                          },
                        }
                      }
                      error={null}
                      id="field0_errors"
                      invalid={false}
                    />
                  </InputGroup>
                </Col>,
              ],
              "className": "row form-group",
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "children": Array [
                <Label
                  className="text-right"
                  for="field0"
                  sm="3"
                  tag="label"
                  widths={
                    Array [
                      "xs",
                      "sm",
                      "md",
                      "lg",
                      "xl",
                    ]
                  }
                >
                  ojs_select_placeholder
                </Label>,
                <Col
                  sm="9"
                  tag="div"
                  widths={
                    Array [
                      "xs",
                      "sm",
                      "md",
                      "lg",
                      "xl",
                    ]
                  }
                >
                  <InputGroup
                    tag="div"
                  >
                    <InputGroupAddon
                      addonType="prepend"
                      tag="div"
                    >
                      <div>
                        custom prefix
                      </div>
                    </InputGroupAddon>
                    <TestComponent />
                    <InputGroupAddon
                      addonType="append"
                      tag="div"
                    >
                      <div>
                        custom suffix
                      </div>
                    </InputGroupAddon>
                    <FieldError
                      context={
                        Object {
                          "stringFormatter": [MockFunction] {
                            "calls": Array [
                              Array [
                                "ojs_select_placeholder",
                              ],
                            ],
                            "results": Array [
                              Object {
                                "isThrow": false,
                                "value": "ojs_select_placeholder",
                              },
                            ],
                          },
                        }
                      }
                      error={null}
                      id="field0_errors"
                      invalid={false}
                    />
                  </InputGroup>
                </Col>,
              ],
              "className": "row form-group",
            },
            "ref": null,
            "return": [Circular],
            "selfBaseTime": 0,
            "sibling": null,
            "stateNode": <div
              class="row form-group"
            >
              <label
                class="text-right col-sm-3 col-form-label"
                for="field0"
              >
                ojs_select_placeholder
              </label>
              <div
                class="col-sm-9"
              >
                <div
                  class="input-group"
                >
                  <div
                    class="input-group-prepend"
                  >
                    <div>
                      custom prefix
                    </div>
                  </div>
                  <div
                    id="field0"
                  />
                  <div
                    class="input-group-append"
                  >
                    <div>
                      custom suffix
                    </div>
                  </div>
                </div>
              </div>
            </div>,
            "tag": 5,
            "treeBaseTime": 0,
            "type": "div",
            "updateQueue": null,
          },
          "effectTag": 1,
          "expirationTime": 0,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "children": Array [
              <Label
                className="text-right"
                for="field0"
                sm="3"
                tag="label"
                widths={
                  Array [
                    "xs",
                    "sm",
                    "md",
                    "lg",
                    "xl",
                  ]
                }
              >
                ojs_select_placeholder
              </Label>,
              <Col
                sm="9"
                tag="div"
                widths={
                  Array [
                    "xs",
                    "sm",
                    "md",
                    "lg",
                    "xl",
                  ]
                }
              >
                <InputGroup
                  tag="div"
                >
                  <InputGroupAddon
                    addonType="prepend"
                    tag="div"
                  >
                    <div>
                      custom prefix
                    </div>
                  </InputGroupAddon>
                  <TestComponent />
                  <InputGroupAddon
                    addonType="append"
                    tag="div"
                  >
                    <div>
                      custom suffix
                    </div>
                  </InputGroupAddon>
                  <FieldError
                    context={
                      Object {
                        "stringFormatter": [MockFunction] {
                          "calls": Array [
                            Array [
                              "ojs_select_placeholder",
                            ],
                          ],
                          "results": Array [
                            Object {
                              "isThrow": false,
                              "value": "ojs_select_placeholder",
                            },
                          ],
                        },
                      }
                    }
                    error={null}
                    id="field0_errors"
                    invalid={false}
                  />
                </InputGroup>
              </Col>,
            ],
            "className": "",
            "row": true,
            "tag": "div",
          },
          "memoizedState": null,
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "children": Array [
              <Label
                className="text-right"
                for="field0"
                sm="3"
                tag="label"
                widths={
                  Array [
                    "xs",
                    "sm",
                    "md",
                    "lg",
                    "xl",
                  ]
                }
              >
                ojs_select_placeholder
              </Label>,
              <Col
                sm="9"
                tag="div"
                widths={
                  Array [
                    "xs",
                    "sm",
                    "md",
                    "lg",
                    "xl",
                  ]
                }
              >
                <InputGroup
                  tag="div"
                >
                  <InputGroupAddon
                    addonType="prepend"
                    tag="div"
                  >
                    <div>
                      custom prefix
                    </div>
                  </InputGroupAddon>
                  <TestComponent />
                  <InputGroupAddon
                    addonType="append"
                    tag="div"
                  >
                    <div>
                      custom suffix
                    </div>
                  </InputGroupAddon>
                  <FieldError
                    context={
                      Object {
                        "stringFormatter": [MockFunction] {
                          "calls": Array [
                            Array [
                              "ojs_select_placeholder",
                            ],
                          ],
                          "results": Array [
                            Object {
                              "isThrow": false,
                              "value": "ojs_select_placeholder",
                            },
                          ],
                        },
                      }
                    }
                    error={null}
                    id="field0_errors"
                    invalid={false}
                  />
                </InputGroup>
              </Col>,
            ],
            "className": "",
            "row": true,
            "tag": "div",
          },
          "ref": null,
          "return": [Circular],
          "selfBaseTime": 0,
          "sibling": null,
          "stateNode": null,
          "tag": 1,
          "treeBaseTime": 0,
          "type": [Function],
          "updateQueue": null,
        },
        "effectTag": 1,
        "expirationTime": 0,
        "firstEffect": null,
        "index": 0,
        "key": null,
        "lastEffect": null,
        "memoizedProps": Object {
          "children": <TestComponent />,
          "field": Object {
            "id": "field0",
            "invalid": false,
            "name": "field0",
            "onBlur": [MockFunction],
            "onChange": [MockFunction],
            "value": "",
          },
          "info": null,
          "label": "ojs_select_placeholder",
          "meta": Object {
            "error": null,
            "isValidating": false,
            "stringFormatter": [MockFunction] {
              "calls": Array [
                Array [
                  "ojs_select_placeholder",
                ],
              ],
              "results": Array [
                Object {
                  "isThrow": false,
                  "value": "ojs_select_placeholder",
                },
              ],
            },
            "valid": true,
          },
          "prefix": [Function],
          "suffix": [Function],
          "validators": null,
        },
        "memoizedState": Object {
          "infoVisible": false,
        },
        "mode": 0,
        "nextEffect": null,
        "pendingProps": Object {
          "children": <TestComponent />,
          "field": Object {
            "id": "field0",
            "invalid": false,
            "name": "field0",
            "onBlur": [MockFunction],
            "onChange": [MockFunction],
            "value": "",
          },
          "info": null,
          "label": "ojs_select_placeholder",
          "meta": Object {
            "error": null,
            "isValidating": false,
            "stringFormatter": [MockFunction] {
              "calls": Array [
                Array [
                  "ojs_select_placeholder",
                ],
              ],
              "results": Array [
                Object {
                  "isThrow": false,
                  "value": "ojs_select_placeholder",
                },
              ],
            },
            "valid": true,
          },
          "prefix": [Function],
          "suffix": [Function],
          "validators": null,
        },
        "ref": null,
        "return": FiberNode {
          "_debugID": 185,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": null,
          "_debugSource": null,
          "alternate": null,
          "child": [Circular],
          "effectTag": 1,
          "expirationTime": 0,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {
              "children": <TestComponent />,
              "field": Object {
                "id": "field0",
                "invalid": false,
                "name": "field0",
                "onBlur": [MockFunction],
                "onChange": [MockFunction],
                "value": "",
              },
              "info": null,
              "label": "ojs_select_placeholder",
              "meta": Object {
                "error": null,
                "isValidating": false,
                "stringFormatter": [MockFunction] {
                  "calls": Array [
                    Array [
                      "ojs_select_placeholder",
                    ],
                  ],
                  "results": Array [
                    Object {
                      "isThrow": false,
                      "value": "ojs_select_placeholder",
                    },
                  ],
                },
                "valid": true,
              },
              "prefix": [Function],
              "suffix": [Function],
              "validators": null,
            },
          },
          "memoizedState": Object {
            "context": null,
            "mount": true,
            "props": Object {
              "children": <TestComponent />,
              "field": Object {
                "id": "field0",
                "invalid": false,
                "name": "field0",
                "onBlur": [MockFunction],
                "onChange": [MockFunction],
                "value": "",
              },
              "info": null,
              "label": "ojs_select_placeholder",
              "meta": Object {
                "error": null,
                "isValidating": false,
                "stringFormatter": [MockFunction] {
                  "calls": Array [
                    Array [
                      "ojs_select_placeholder",
                    ],
                  ],
                  "results": Array [
                    Object {
                      "isThrow": false,
                      "value": "ojs_select_placeholder",
                    },
                  ],
                },
                "valid": true,
              },
              "prefix": [Function],
              "suffix": [Function],
              "validators": null,
            },
          },
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {
              "children": <TestComponent />,
              "field": Object {
                "id": "field0",
                "invalid": false,
                "name": "field0",
                "onBlur": [MockFunction],
                "onChange": [MockFunction],
                "value": "",
              },
              "info": null,
              "label": "ojs_select_placeholder",
              "meta": Object {
                "error": null,
                "isValidating": false,
                "stringFormatter": [MockFunction] {
                  "calls": Array [
                    Array [
                      "ojs_select_placeholder",
                    ],
                  ],
                  "results": Array [
                    Object {
                      "isThrow": false,
                      "value": "ojs_select_placeholder",
                    },
                  ],
                },
                "valid": true,
              },
              "prefix": [Function],
              "suffix": [Function],
              "validators": null,
            },
          },
          "ref": null,
          "return": FiberNode {
            "_debugID": 183,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "alternate": FiberNode {
              "_debugID": 183,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "alternate": [Circular],
              "child": null,
              "effectTag": 0,
              "expirationTime": 1,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": null,
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseTime": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                    class="row form-group"
                  >
                    <label
                      class="text-right col-sm-3 col-form-label"
                      for="field0"
                    >
                      ojs_select_placeholder
                    </label>
                    <div
                      class="col-sm-9"
                    >
                      <div
                        class="input-group"
                      >
                        <div
                          class="input-group-prepend"
                        >
                          <div>
                            custom prefix
                          </div>
                        </div>
                        <div
                          id="field0"
                        />
                        <div
                          class="input-group-append"
                        >
                          <div>
                            custom suffix
                          </div>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "remainingExpirationTime": 0,
              },
              "tag": 3,
              "treeBaseTime": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": null,
                "expirationTime": 1,
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": Object {
                  "callback": null,
                  "expirationTime": 1,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "children": <TestComponent />,
                          "field": Object {
                            "id": "field0",
                            "invalid": false,
                            "name": "field0",
                            "onBlur": [MockFunction],
                            "onChange": [MockFunction],
                            "value": "",
                          },
                          "info": null,
                          "label": "ojs_select_placeholder",
                          "meta": Object {
                            "error": null,
                            "isValidating": false,
                            "stringFormatter": [MockFunction] {
                              "calls": Array [
                                Array [
                                  "ojs_select_placeholder",
                                ],
                              ],
                              "results": Array [
                                Object {
                                  "isThrow": false,
                                  "value": "ojs_select_placeholder",
                                },
                              ],
                            },
                            "valid": true,
                          },
                          "prefix": [Function],
                          "suffix": [Function],
                          "validators": null,
                        }
                      }
                    />,
                  },
                  "tag": 0,
                },
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": Object {
                  "callback": null,
                  "expirationTime": 1,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "children": <TestComponent />,
                          "field": Object {
                            "id": "field0",
                            "invalid": false,
                            "name": "field0",
                            "onBlur": [MockFunction],
                            "onChange": [MockFunction],
                            "value": "",
                          },
                          "info": null,
                          "label": "ojs_select_placeholder",
                          "meta": Object {
                            "error": null,
                            "isValidating": false,
                            "stringFormatter": [MockFunction] {
                              "calls": Array [
                                Array [
                                  "ojs_select_placeholder",
                                ],
                              ],
                              "results": Array [
                                Object {
                                  "isThrow": false,
                                  "value": "ojs_select_placeholder",
                                },
                              ],
                            },
                            "valid": true,
                          },
                          "prefix": [Function],
                          "suffix": [Function],
                          "validators": null,
                        }
                      }
                    />,
                  },
                  "tag": 0,
                },
              },
            },
            "child": [Circular],
            "effectTag": 32,
            "expirationTime": 0,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": null,
            "memoizedState": Object {
              "element": <WrapperComponent
                Component={[Function]}
                context={null}
                props={
                  Object {
                    "children": <TestComponent />,
                    "field": Object {
                      "id": "field0",
                      "invalid": false,
                      "name": "field0",
                      "onBlur": [MockFunction],
                      "onChange": [MockFunction],
                      "value": "",
                    },
                    "info": null,
                    "label": "ojs_select_placeholder",
                    "meta": Object {
                      "error": null,
                      "isValidating": false,
                      "stringFormatter": [MockFunction] {
                        "calls": Array [
                          Array [
                            "ojs_select_placeholder",
                          ],
                        ],
                        "results": Array [
                          Object {
                            "isThrow": false,
                            "value": "ojs_select_placeholder",
                          },
                        ],
                      },
                      "valid": true,
                    },
                    "prefix": [Function],
                    "suffix": [Function],
                    "validators": null,
                  }
                }
              />,
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": null,
            "selfBaseTime": 0,
            "sibling": null,
            "stateNode": Object {
              "containerInfo": <div>
                <div
                  class="row form-group"
                >
                  <label
                    class="text-right col-sm-3 col-form-label"
                    for="field0"
                  >
                    ojs_select_placeholder
                  </label>
                  <div
                    class="col-sm-9"
                  >
                    <div
                      class="input-group"
                    >
                      <div
                        class="input-group-prepend"
                      >
                        <div>
                          custom prefix
                        </div>
                      </div>
                      <div
                        id="field0"
                      />
                      <div
                        class="input-group-append"
                      >
                        <div>
                          custom suffix
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </div>,
              "context": Object {},
              "current": [Circular],
              "earliestPendingTime": 0,
              "earliestSuspendedTime": 0,
              "finishedWork": null,
              "firstBatch": null,
              "hydrate": false,
              "latestPendingTime": 0,
              "latestPingedTime": 0,
              "latestSuspendedTime": 0,
              "nextScheduledRoot": null,
              "pendingChildren": null,
              "pendingCommitExpirationTime": 0,
              "pendingContext": null,
              "remainingExpirationTime": 0,
            },
            "tag": 3,
            "treeBaseTime": 0,
            "type": null,
            "updateQueue": Object {
              "baseState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                    Object {
                      "children": <TestComponent />,
                      "field": Object {
                        "id": "field0",
                        "invalid": false,
                        "name": "field0",
                        "onBlur": [MockFunction],
                        "onChange": [MockFunction],
                        "value": "",
                      },
                      "info": null,
                      "label": "ojs_select_placeholder",
                      "meta": Object {
                        "error": null,
                        "isValidating": false,
                        "stringFormatter": [MockFunction] {
                          "calls": Array [
                            Array [
                              "ojs_select_placeholder",
                            ],
                          ],
                          "results": Array [
                            Object {
                              "isThrow": false,
                              "value": "ojs_select_placeholder",
                            },
                          ],
                        },
                        "valid": true,
                      },
                      "prefix": [Function],
                      "suffix": [Function],
                      "validators": null,
                    }
                  }
                />,
              },
              "expirationTime": 0,
              "firstCapturedEffect": null,
              "firstCapturedUpdate": null,
              "firstEffect": null,
              "firstUpdate": null,
              "lastCapturedEffect": null,
              "lastCapturedUpdate": null,
              "lastEffect": null,
              "lastUpdate": null,
            },
          },
          "selfBaseTime": 0,
          "sibling": null,
          "stateNode": WrapperComponent {
            "_reactInternalFiber": [Circular],
            "_reactInternalInstance": Object {},
            "context": Object {},
            "props": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "children": <TestComponent />,
                "field": Object {
                  "id": "field0",
                  "invalid": false,
                  "name": "field0",
                  "onBlur": [MockFunction],
                  "onChange": [MockFunction],
                  "value": "",
                },
                "info": null,
                "label": "ojs_select_placeholder",
                "meta": Object {
                  "error": null,
                  "isValidating": false,
                  "stringFormatter": [MockFunction] {
                    "calls": Array [
                      Array [
                        "ojs_select_placeholder",
                      ],
                    ],
                    "results": Array [
                      Object {
                        "isThrow": false,
                        "value": "ojs_select_placeholder",
                      },
                    ],
                  },
                  "valid": true,
                },
                "prefix": [Function],
                "suffix": [Function],
                "validators": null,
              },
            },
            "refs": Object {},
            "state": Object {
              "context": null,
              "mount": true,
              "props": Object {
                "children": <TestComponent />,
                "field": Object {
                  "id": "field0",
                  "invalid": false,
                  "name": "field0",
                  "onBlur": [MockFunction],
                  "onChange": [MockFunction],
                  "value": "",
                },
                "info": null,
                "label": "ojs_select_placeholder",
                "meta": Object {
                  "error": null,
                  "isValidating": false,
                  "stringFormatter": [MockFunction] {
                    "calls": Array [
                      Array [
                        "ojs_select_placeholder",
                      ],
                    ],
                    "results": Array [
                      Object {
                        "isThrow": false,
                        "value": "ojs_select_placeholder",
                      },
                    ],
                  },
                  "valid": true,
                },
                "prefix": [Function],
                "suffix": [Function],
                "validators": null,
              },
            },
            "updater": Object {
              "enqueueForceUpdate": [Function],
              "enqueueReplaceState": [Function],
              "enqueueSetState": [Function],
              "isMounted": [Function],
            },
          },
          "tag": 2,
          "treeBaseTime": 0,
          "type": [Function],
          "updateQueue": null,
        },
        "selfBaseTime": 0,
        "sibling": null,
        "stateNode": [Circular],
        "tag": 2,
        "treeBaseTime": 0,
        "type": [Function],
        "updateQueue": null,
      },
      "_reactInternalInstance": Object {},
      "context": Object {},
      "props": Object {
        "children": <TestComponent />,
        "field": Object {
          "id": "field0",
          "invalid": false,
          "name": "field0",
          "onBlur": [MockFunction],
          "onChange": [MockFunction],
          "value": "",
        },
        "info": null,
        "label": "ojs_select_placeholder",
        "meta": Object {
          "error": null,
          "isValidating": false,
          "stringFormatter": [MockFunction] {
            "calls": Array [
              Array [
                "ojs_select_placeholder",
              ],
            ],
            "results": Array [
              Object {
                "isThrow": false,
                "value": "ojs_select_placeholder",
              },
            ],
          },
          "valid": true,
        },
        "prefix": [Function],
        "suffix": [Function],
        "validators": null,
      },
      "refs": Object {},
      "state": Object {
        "infoVisible": false,
      },
      "toggleInfo": [Function],
      "updater": Object {
        "enqueueForceUpdate": [Function],
        "enqueueReplaceState": [Function],
        "enqueueSetState": [Function],
        "isMounted": [Function],
      },
    },
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <TestComponent />,
      "field": Object {
        "id": "field0",
        "invalid": false,
        "name": "field0",
        "onBlur": [MockFunction],
        "onChange": [MockFunction],
        "value": "",
      },
      "info": null,
      "label": "ojs_select_placeholder",
      "meta": Object {
        "error": null,
        "isValidating": false,
        "stringFormatter": [MockFunction] {
          "calls": Array [
            Array [
              "ojs_select_placeholder",
            ],
          ],
          "results": Array [
            Object {
              "isThrow": false,
              "value": "ojs_select_placeholder",
            },
          ],
        },
        "valid": true,
      },
      "prefix": [Function],
      "suffix": [Function],
      "validators": null,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <Label
            className="text-right"
            for="field0"
            sm="3"
            tag="label"
            widths={
              Array [
                "xs",
                "sm",
                "md",
                "lg",
                "xl",
              ]
            }
          >
            ojs_select_placeholder
          </Label>,
          <Col
            sm="9"
            tag="div"
            widths={
              Array [
                "xs",
                "sm",
                "md",
                "lg",
                "xl",
              ]
            }
          >
            <InputGroup
              tag="div"
            >
              <InputGroupAddon
                addonType="prepend"
                tag="div"
              >
                <div>
                  custom prefix
                </div>
              </InputGroupAddon>
              <TestComponent />
              <InputGroupAddon
                addonType="append"
                tag="div"
              >
                <div>
                  custom suffix
                </div>
              </InputGroupAddon>
              <FieldError
                context={
                  Object {
                    "stringFormatter": [MockFunction] {
                      "calls": Array [
                        Array [
                          "ojs_select_placeholder",
                        ],
                      ],
                      "results": Array [
                        Object {
                          "isThrow": false,
                          "value": "ojs_select_placeholder",
                        },
                      ],
                    },
                  }
                }
                error={null}
                id="field0_errors"
                invalid={false}
              />
            </InputGroup>
          </Col>,
        ],
        "className": "",
        "row": true,
        "tag": "div",
      },
      "ref": null,
      "rendered": Object {
        "instance": <div
          class="row form-group"
        >
          <label
            class="text-right col-sm-3 col-form-label"
            for="field0"
          >
            ojs_select_placeholder
          </label>
          <div
            class="col-sm-9"
          >
            <div
              class="input-group"
            >
              <div
                class="input-group-prepend"
              >
                <div>
                  custom prefix
                </div>
              </div>
              <div
                id="field0"
              />
              <div
                class="input-group-append"
              >
                <div>
                  custom suffix
                </div>
              </div>
            </div>
          </div>
        </div>,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <Label
              className="text-right"
              for="field0"
              sm="3"
              tag="label"
              widths={
                Array [
                  "xs",
                  "sm",
                  "md",
                  "lg",
                  "xl",
                ]
              }
            >
              ojs_select_placeholder
            </Label>,
            <Col
              sm="9"
              tag="div"
              widths={
                Array [
                  "xs",
                  "sm",
                  "md",
                  "lg",
                  "xl",
                ]
              }
            >
              <InputGroup
                tag="div"
              >
                <InputGroupAddon
                  addonType="prepend"
                  tag="div"
                >
                  <div>
                    custom prefix
                  </div>
                </InputGroupAddon>
                <TestComponent />
                <InputGroupAddon
                  addonType="append"
                  tag="div"
                >
                  <div>
                    custom suffix
                  </div>
                </InputGroupAddon>
                <FieldError
                  context={
                    Object {
                      "stringFormatter": [MockFunction] {
                        "calls": Array [
                          Array [
                            "ojs_select_placeholder",
                          ],
                        ],
                        "results": Array [
                          Object {
                            "isThrow": false,
                            "value": "ojs_select_placeholder",
                          },
                        ],
                      },
                    }
                  }
                  error={null}
                  id="field0_errors"
                  invalid={false}
                />
              </InputGroup>
            </Col>,
          ],
          "className": "row form-group",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": Array [
                null,
                null,
                "ojs_select_placeholder",
                null,
              ],
              "className": "text-right",
              "for": "field0",
              "sm": "3",
              "tag": "label",
              "widths": Array [
                "xs",
                "sm",
                "md",
                "lg",
                "xl",
              ],
            },
            "ref": null,
            "rendered": Object {
              "instance": <label
                class="text-right col-sm-3 col-form-label"
                for="field0"
              >
                ojs_select_placeholder
              </label>,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  null,
                  null,
                  "ojs_select_placeholder",
                  null,
                ],
                "className": "text-right col-sm-3 col-form-label",
                "htmlFor": "field0",
              },
              "ref": null,
              "rendered": Array [
                "ojs_select_placeholder",
              ],
              "type": "label",
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": Array [
                <InputGroup
                  tag="div"
                >
                  <InputGroupAddon
                    addonType="prepend"
                    tag="div"
                  >
                    <div>
                      custom prefix
                    </div>
                  </InputGroupAddon>
                  <TestComponent />
                  <InputGroupAddon
                    addonType="append"
                    tag="div"
                  >
                    <div>
                      custom suffix
                    </div>
                  </InputGroupAddon>
                  <FieldError
                    context={
                      Object {
                        "stringFormatter": [MockFunction] {
                          "calls": Array [
                            Array [
                              "ojs_select_placeholder",
                            ],
                          ],
                          "results": Array [
                            Object {
                              "isThrow": false,
                              "value": "ojs_select_placeholder",
                            },
                          ],
                        },
                      }
                    }
                    error={null}
                    id="field0_errors"
                    invalid={false}
                  />
                </InputGroup>,
                null,
              ],
              "sm": "9",
              "tag": "div",
              "widths": Array [
                "xs",
                "sm",
                "md",
                "lg",
                "xl",
              ],
            },
            "ref": null,
            "rendered": Object {
              "instance": <div
                class="col-sm-9"
              >
                <div
                  class="input-group"
                >
                  <div
                    class="input-group-prepend"
                  >
                    <div>
                      custom prefix
                    </div>
                  </div>
                  <div
                    id="field0"
                  />
                  <div
                    class="input-group-append"
                  >
                    <div>
                      custom suffix
                    </div>
                  </div>
                </div>
              </div>,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <InputGroup
                    tag="div"
                  >
                    <InputGroupAddon
                      addonType="prepend"
                      tag="div"
                    >
                      <div>
                        custom prefix
                      </div>
                    </InputGroupAddon>
                    <TestComponent />
                    <InputGroupAddon
                      addonType="append"
                      tag="div"
                    >
                      <div>
                        custom suffix
                      </div>
                    </InputGroupAddon>
                    <FieldError
                      context={
                        Object {
                          "stringFormatter": [MockFunction] {
                            "calls": Array [
                              Array [
                                "ojs_select_placeholder",
                              ],
                            ],
                            "results": Array [
                              Object {
                                "isThrow": false,
                                "value": "ojs_select_placeholder",
                              },
                            ],
                          },
                        }
                      }
                      error={null}
                      id="field0_errors"
                      invalid={false}
                    />
                  </InputGroup>,
                  null,
                ],
                "className": "col-sm-9",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": Array [
                      <InputGroupAddon
                        addonType="prepend"
                        tag="div"
                      >
                        <div>
                          custom prefix
                        </div>
                      </InputGroupAddon>,
                      <TestComponent />,
                      <InputGroupAddon
                        addonType="append"
                        tag="div"
                      >
                        <div>
                          custom suffix
                        </div>
                      </InputGroupAddon>,
                      null,
                      <FieldError
                        context={
                          Object {
                            "stringFormatter": [MockFunction] {
                              "calls": Array [
                                Array [
                                  "ojs_select_placeholder",
                                ],
                              ],
                              "results": Array [
                                Object {
                                  "isThrow": false,
                                  "value": "ojs_select_placeholder",
                                },
                              ],
                            },
                          }
                        }
                        error={null}
                        id="field0_errors"
                        invalid={false}
                      />,
                    ],
                    "tag": "div",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": <div
                      class="input-group"
                    >
                      <div
                        class="input-group-prepend"
                      >
                        <div>
                          custom prefix
                        </div>
                      </div>
                      <div
                        id="field0"
                      />
                      <div
                        class="input-group-append"
                      >
                        <div>
                          custom suffix
                        </div>
                      </div>
                    </div>,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        <InputGroupAddon
                          addonType="prepend"
                          tag="div"
                        >
                          <div>
                            custom prefix
                          </div>
                        </InputGroupAddon>,
                        <TestComponent />,
                        <InputGroupAddon
                          addonType="append"
                          tag="div"
                        >
                          <div>
                            custom suffix
                          </div>
                        </InputGroupAddon>,
                        null,
                        <FieldError
                          context={
                            Object {
                              "stringFormatter": [MockFunction] {
                                "calls": Array [
                                  Array [
                                    "ojs_select_placeholder",
                                  ],
                                ],
                                "results": Array [
                                  Object {
                                    "isThrow": false,
                                    "value": "ojs_select_placeholder",
                                  },
                                ],
                              },
                            }
                          }
                          error={null}
                          id="field0_errors"
                          invalid={false}
                        />,
                      ],
                      "className": "input-group",
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "function",
                        "props": Object {
                          "addonType": "prepend",
                          "children": <div>
                            custom prefix
                          </div>,
                          "tag": "div",
                        },
                        "ref": null,
                        "rendered": Object {
                          "instance": <div
                            class="input-group-prepend"
                          >
                            <div>
                              custom prefix
                            </div>
                          </div>,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": <div>
                              custom prefix
                            </div>,
                            "className": "input-group-prepend",
                          },
                          "ref": null,
                          "rendered": Array [
                            Object {
                              "instance": <div>
                                custom prefix
                              </div>,
                              "key": undefined,
                              "nodeType": "host",
                              "props": Object {
                                "children": "custom prefix",
                              },
                              "ref": null,
                              "rendered": Array [
                                "custom prefix",
                              ],
                              "type": "div",
                            },
                          ],
                          "type": "div",
                        },
                        "type": [Function],
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "function",
                        "props": Object {},
                        "ref": null,
                        "rendered": Object {
                          "instance": <div
                            id="field0"
                          />,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "id": "field0",
                          },
                          "ref": null,
                          "rendered": Array [
                            undefined,
                          ],
                          "type": "div",
                        },
                        "type": [Function],
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "function",
                        "props": Object {
                          "addonType": "append",
                          "children": <div>
                            custom suffix
                          </div>,
                          "tag": "div",
                        },
                        "ref": null,
                        "rendered": Object {
                          "instance": <div
                            class="input-group-append"
                          >
                            <div>
                              custom suffix
                            </div>
                          </div>,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": <div>
                              custom suffix
                            </div>,
                            "className": "input-group-append",
                          },
                          "ref": null,
                          "rendered": Array [
                            Object {
                              "instance": <div>
                                custom suffix
                              </div>,
                              "key": undefined,
                              "nodeType": "host",
                              "props": Object {
                                "children": "custom suffix",
                              },
                              "ref": null,
                              "rendered": Array [
                                "custom suffix",
                              ],
                              "type": "div",
                            },
                          ],
                          "type": "div",
                        },
                        "type": [Function],
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "function",
                        "props": Object {
                          "context": Object {
                            "stringFormatter": [MockFunction] {
                              "calls": Array [
                                Array [
                                  "ojs_select_placeholder",
                                ],
                              ],
                              "results": Array [
                                Object {
                                  "isThrow": false,
                                  "value": "ojs_select_placeholder",
                                },
                              ],
                            },
                          },
                          "error": null,
                          "id": "field0_errors",
                          "invalid": false,
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                    ],
                    "type": "div",
                  },
                  "type": [Function],
                },
              ],
              "type": "div",
            },
            "type": [Function],
          },
        ],
        "type": "div",
      },
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": FieldLine {
        "_reactInternalFiber": FiberNode {
          "_debugID": 186,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": FiberNode {
            "_debugID": 185,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "alternate": null,
            "child": [Circular],
            "effectTag": 1,
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "children": <TestComponent />,
                "field": Object {
                  "id": "field0",
                  "invalid": false,
                  "name": "field0",
                  "onBlur": [MockFunction],
                  "onChange": [MockFunction],
                  "value": "",
                },
                "info": null,
                "label": "ojs_select_placeholder",
                "meta": Object {
                  "error": null,
                  "isValidating": false,
                  "stringFormatter": [MockFunction] {
                    "calls": Array [
                      Array [
                        "ojs_select_placeholder",
                      ],
                    ],
                    "results": Array [
                      Object {
                        "isThrow": false,
                        "value": "ojs_select_placeholder",
                      },
                    ],
                  },
                  "valid": true,
                },
                "prefix": [Function],
                "suffix": [Function],
                "validators": null,
              },
            },
            "memoizedState": Object {
              "context": null,
              "mount": true,
              "props": Object {
                "children": <TestComponent />,
                "field": Object {
                  "id": "field0",
                  "invalid": false,
                  "name": "field0",
                  "onBlur": [MockFunction],
                  "onChange": [MockFunction],
                  "value": "",
                },
                "info": null,
                "label": "ojs_select_placeholder",
                "meta": Object {
                  "error": null,
                  "isValidating": false,
                  "stringFormatter": [MockFunction] {
                    "calls": Array [
                      Array [
                        "ojs_select_placeholder",
                      ],
                    ],
                    "results": Array [
                      Object {
                        "isThrow": false,
                        "value": "ojs_select_placeholder",
                      },
                    ],
                  },
                  "valid": true,
                },
                "prefix": [Function],
                "suffix": [Function],
                "validators": null,
              },
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "children": <TestComponent />,
                "field": Object {
                  "id": "field0",
                  "invalid": false,
                  "name": "field0",
                  "onBlur": [MockFunction],
                  "onChange": [MockFunction],
                  "value": "",
                },
                "info": null,
                "label": "ojs_select_placeholder",
                "meta": Object {
                  "error": null,
                  "isValidating": false,
                  "stringFormatter": [MockFunction] {
                    "calls": Array [
                      Array [
                        "ojs_select_placeholder",
                      ],
                    ],
                    "results": Array [
                      Object {
                        "isThrow": false,
                        "value": "ojs_select_placeholder",
                      },
                    ],
                  },
                  "valid": true,
                },
                "prefix": [Function],
                "suffix": [Function],
                "validators": null,
              },
            },
            "ref": null,
            "return": FiberNode {
              "_debugID": 183,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "alternate": FiberNode {
                "_debugID": 183,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "alternate": [Circular],
                "child": null,
                "effectTag": 0,
                "expirationTime": 1,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": null,
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "selfBaseTime": 0,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div>
                    <div
                      class="row form-group"
                    >
                      <label
                        class="text-right col-sm-3 col-form-label"
                        for="field0"
                      >
                        ojs_select_placeholder
                      </label>
                      <div
                        class="col-sm-9"
                      >
                        <div
                          class="input-group"
                        >
                          <div
                            class="input-group-prepend"
                          >
                            <div>
                              custom prefix
                            </div>
                          </div>
                          <div
                            id="field0"
                          />
                          <div
                            class="input-group-append"
                          >
                            <div>
                              custom suffix
                            </div>
                          </div>
                        </div>
                      </div>
                    </div>
                  </div>,
                  "context": Object {},
                  "current": [Circular],
                  "earliestPendingTime": 0,
                  "earliestSuspendedTime": 0,
                  "finishedWork": null,
                  "firstBatch": null,
                  "hydrate": false,
                  "latestPendingTime": 0,
                  "latestPingedTime": 0,
                  "latestSuspendedTime": 0,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingCommitExpirationTime": 0,
                  "pendingContext": null,
                  "remainingExpirationTime": 0,
                },
                "tag": 3,
                "treeBaseTime": 0,
                "type": null,
                "updateQueue": Object {
                  "baseState": null,
                  "expirationTime": 1,
                  "firstCapturedEffect": null,
                  "firstCapturedUpdate": null,
                  "firstEffect": null,
                  "firstUpdate": Object {
                    "callback": null,
                    "expirationTime": 1,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "children": <TestComponent />,
                            "field": Object {
                              "id": "field0",
                              "invalid": false,
                              "name": "field0",
                              "onBlur": [MockFunction],
                              "onChange": [MockFunction],
                              "value": "",
                            },
                            "info": null,
                            "label": "ojs_select_placeholder",
                            "meta": Object {
                              "error": null,
                              "isValidating": false,
                              "stringFormatter": [MockFunction] {
                                "calls": Array [
                                  Array [
                                    "ojs_select_placeholder",
                                  ],
                                ],
                                "results": Array [
                                  Object {
                                    "isThrow": false,
                                    "value": "ojs_select_placeholder",
                                  },
                                ],
                              },
                              "valid": true,
                            },
                            "prefix": [Function],
                            "suffix": [Function],
                            "validators": null,
                          }
                        }
                      />,
                    },
                    "tag": 0,
                  },
                  "lastCapturedEffect": null,
                  "lastCapturedUpdate": null,
                  "lastEffect": null,
                  "lastUpdate": Object {
                    "callback": null,
                    "expirationTime": 1,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "children": <TestComponent />,
                            "field": Object {
                              "id": "field0",
                              "invalid": false,
                              "name": "field0",
                              "onBlur": [MockFunction],
                              "onChange": [MockFunction],
                              "value": "",
                            },
                            "info": null,
                            "label": "ojs_select_placeholder",
                            "meta": Object {
                              "error": null,
                              "isValidating": false,
                              "stringFormatter": [MockFunction] {
                                "calls": Array [
                                  Array [
                                    "ojs_select_placeholder",
                                  ],
                                ],
                                "results": Array [
                                  Object {
                                    "isThrow": false,
                                    "value": "ojs_select_placeholder",
                                  },
                                ],
                              },
                              "valid": true,
                            },
                            "prefix": [Function],
                            "suffix": [Function],
                            "validators": null,
                          }
                        }
                      />,
                    },
                    "tag": 0,
                  },
                },
              },
              "child": [Circular],
              "effectTag": 32,
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": null,
              "memoizedState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                    Object {
                      "children": <TestComponent />,
                      "field": Object {
                        "id": "field0",
                        "invalid": false,
                        "name": "field0",
                        "onBlur": [MockFunction],
                        "onChange": [MockFunction],
                        "value": "",
                      },
                      "info": null,
                      "label": "ojs_select_placeholder",
                      "meta": Object {
                        "error": null,
                        "isValidating": false,
                        "stringFormatter": [MockFunction] {
                          "calls": Array [
                            Array [
                              "ojs_select_placeholder",
                            ],
                          ],
                          "results": Array [
                            Object {
                              "isThrow": false,
                              "value": "ojs_select_placeholder",
                            },
                          ],
                        },
                        "valid": true,
                      },
                      "prefix": [Function],
                      "suffix": [Function],
                      "validators": null,
                    }
                  }
                />,
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseTime": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                    class="row form-group"
                  >
                    <label
                      class="text-right col-sm-3 col-form-label"
                      for="field0"
                    >
                      ojs_select_placeholder
                    </label>
                    <div
                      class="col-sm-9"
                    >
                      <div
                        class="input-group"
                      >
                        <div
                          class="input-group-prepend"
                        >
                          <div>
                            custom prefix
                          </div>
                        </div>
                        <div
                          id="field0"
                        />
                        <div
                          class="input-group-append"
                        >
                          <div>
                            custom suffix
                          </div>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "remainingExpirationTime": 0,
              },
              "tag": 3,
              "treeBaseTime": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={null}
                    props={
                      Object {
                        "children": <TestComponent />,
                        "field": Object {
                          "id": "field0",
                          "invalid": false,
                          "name": "field0",
                          "onBlur": [MockFunction],
                          "onChange": [MockFunction],
                          "value": "",
                        },
                        "info": null,
                        "label": "ojs_select_placeholder",
                        "meta": Object {
                          "error": null,
                          "isValidating": false,
                          "stringFormatter": [MockFunction] {
                            "calls": Array [
                              Array [
                                "ojs_select_placeholder",
                              ],
                            ],
                            "results": Array [
                              Object {
                                "isThrow": false,
                                "value": "ojs_select_placeholder",
                              },
                            ],
                          },
                          "valid": true,
                        },
                        "prefix": [Function],
                        "suffix": [Function],
                        "validators": null,
                      }
                    }
                  />,
                },
                "expirationTime": 0,
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": null,
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": null,
              },
            },
            "selfBaseTime": 0,
            "sibling": null,
            "stateNode": WrapperComponent {
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {},
              "props": Object {
                "Component": [Function],
                "context": null,
                "props": Object {
                  "children": <TestComponent />,
                  "field": Object {
                    "id": "field0",
                    "invalid": false,
                    "name": "field0",
                    "onBlur": [MockFunction],
                    "onChange": [MockFunction],
                    "value": "",
                  },
                  "info": null,
                  "label": "ojs_select_placeholder",
                  "meta": Object {
                    "error": null,
                    "isValidating": false,
                    "stringFormatter": [MockFunction] {
                      "calls": Array [
                        Array [
                          "ojs_select_placeholder",
                        ],
                      ],
                      "results": Array [
                        Object {
                          "isThrow": false,
                          "value": "ojs_select_placeholder",
                        },
                      ],
                    },
                    "valid": true,
                  },
                  "prefix": [Function],
                  "suffix": [Function],
                  "validators": null,
                },
              },
              "refs": Object {},
              "state": Object {
                "context": null,
                "mount": true,
                "props": Object {
                  "children": <TestComponent />,
                  "field": Object {
                    "id": "field0",
                    "invalid": false,
                    "name": "field0",
                    "onBlur": [MockFunction],
                    "onChange": [MockFunction],
                    "value": "",
                  },
                  "info": null,
                  "label": "ojs_select_placeholder",
                  "meta": Object {
                    "error": null,
                    "isValidating": false,
                    "stringFormatter": [MockFunction] {
                      "calls": Array [
                        Array [
                          "ojs_select_placeholder",
                        ],
                      ],
                      "results": Array [
                        Object {
                          "isThrow": false,
                          "value": "ojs_select_placeholder",
                        },
                      ],
                    },
                    "valid": true,
                  },
                  "prefix": [Function],
                  "suffix": [Function],
                  "validators": null,
                },
              },
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 2,
            "treeBaseTime": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "_debugSource": null,
          "alternate": null,
          "child": FiberNode {
            "_debugID": 187,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": null,
            "alternate": null,
            "child": FiberNode {
              "_debugID": 188,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "alternate": null,
              "child": FiberNode {
                "_debugID": 189,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 191,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 192,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "alternate": null,
                    "child": null,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 2,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": "ojs_select_placeholder",
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": "ojs_select_placeholder",
                    "ref": null,
                    "return": [Circular],
                    "selfBaseTime": 0,
                    "sibling": null,
                    "stateNode": ojs_select_placeholder,
                    "tag": 6,
                    "treeBaseTime": 0,
                    "type": null,
                    "updateQueue": null,
                  },
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": Array [
                      null,
                      null,
                      "ojs_select_placeholder",
                      null,
                    ],
                    "className": "text-right col-sm-3 col-form-label",
                    "htmlFor": "field0",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": Array [
                      null,
                      null,
                      "ojs_select_placeholder",
                      null,
                    ],
                    "className": "text-right col-sm-3 col-form-label",
                    "htmlFor": "field0",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseTime": 0,
                  "sibling": null,
                  "stateNode": <label
                    class="text-right col-sm-3 col-form-label"
                    for="field0"
                  >
                    ojs_select_placeholder
                  </label>,
                  "tag": 5,
                  "treeBaseTime": 0,
                  "type": "label",
                  "updateQueue": null,
                },
                "effectTag": 1,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": Array [
                    null,
                    null,
                    "ojs_select_placeholder",
                    null,
                  ],
                  "className": "text-right",
                  "for": "field0",
                  "sm": "3",
                  "tag": "label",
                  "widths": Array [
                    "xs",
                    "sm",
                    "md",
                    "lg",
                    "xl",
                  ],
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": Array [
                    null,
                    null,
                    "ojs_select_placeholder",
                    null,
                  ],
                  "className": "text-right",
                  "for": "field0",
                  "sm": "3",
                  "tag": "label",
                  "widths": Array [
                    "xs",
                    "sm",
                    "md",
                    "lg",
                    "xl",
                  ],
                },
                "ref": null,
                "return": [Circular],
                "selfBaseTime": 0,
                "sibling": FiberNode {
                  "_debugID": 190,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 193,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 194,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": null,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 195,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": null,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 196,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": null,
                          "alternate": null,
                          "child": FiberNode {
                            "_debugID": 200,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": null,
                            "alternate": null,
                            "child": FiberNode {
                              "_debugID": 201,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": null,
                              "alternate": null,
                              "child": null,
                              "effectTag": 0,
                              "expirationTime": 0,
                              "firstEffect": null,
                              "index": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": "custom prefix",
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "children": "custom prefix",
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseTime": 0,
                              "sibling": null,
                              "stateNode": <div>
                                custom prefix
                              </div>,
                              "tag": 5,
                              "treeBaseTime": 0,
                              "type": "div",
                              "updateQueue": null,
                            },
                            "effectTag": 0,
                            "expirationTime": 0,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": <div>
                                custom prefix
                              </div>,
                              "className": "input-group-prepend",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": <div>
                                custom prefix
                              </div>,
                              "className": "input-group-prepend",
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseTime": 0,
                            "sibling": null,
                            "stateNode": <div
                              class="input-group-prepend"
                            >
                              <div>
                                custom prefix
                              </div>
                            </div>,
                            "tag": 5,
                            "treeBaseTime": 0,
                            "type": "div",
                            "updateQueue": null,
                          },
                          "effectTag": 1,
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "addonType": "prepend",
                            "children": <div>
                              custom prefix
                            </div>,
                            "tag": "div",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "addonType": "prepend",
                            "children": <div>
                              custom prefix
                            </div>,
                            "tag": "div",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseTime": 0,
                          "sibling": FiberNode {
                            "_debugID": 197,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": null,
                            "child": FiberNode {
                              "_debugID": 202,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": null,
                              "alternate": null,
                              "child": null,
                              "effectTag": 0,
                              "expirationTime": 0,
                              "firstEffect": null,
                              "index": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "id": "field0",
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "id": "field0",
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseTime": 0,
                              "sibling": null,
                              "stateNode": <div
                                id="field0"
                              />,
                              "tag": 5,
                              "treeBaseTime": 0,
                              "type": "div",
                              "updateQueue": null,
                            },
                            "effectTag": 1,
                            "expirationTime": 0,
                            "firstEffect": null,
                            "index": 1,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {},
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {},
                            "ref": null,
                            "return": [Circular],
                            "selfBaseTime": 0,
                            "sibling": FiberNode {
                              "_debugID": 198,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": null,
                              "alternate": null,
                              "child": FiberNode {
                                "_debugID": 203,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": [Circular],
                                "_debugSource": null,
                                "alternate": null,
                                "child": FiberNode {
                                  "_debugID": 204,
                                  "_debugIsCurrentlyTiming": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": null,
                                  "alternate": null,
                                  "child": null,
                                  "effectTag": 0,
                                  "expirationTime": 0,
                                  "firstEffect": null,
                                  "index": 0,
                                  "key": null,
                                  "lastEffect": null,
                                  "memoizedProps": Object {
                                    "children": "custom suffix",
                                  },
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": Object {
                                    "children": "custom suffix",
                                  },
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseTime": 0,
                                  "sibling": null,
                                  "stateNode": <div>
                                    custom suffix
                                  </div>,
                                  "tag": 5,
                                  "treeBaseTime": 0,
                                  "type": "div",
                                  "updateQueue": null,
                                },
                                "effectTag": 0,
                                "expirationTime": 0,
                                "firstEffect": null,
                                "index": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "children": <div>
                                    custom suffix
                                  </div>,
                                  "className": "input-group-append",
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": Object {
                                  "children": <div>
                                    custom suffix
                                  </div>,
                                  "className": "input-group-append",
                                },
                                "ref": null,
                                "return": [Circular],
                                "selfBaseTime": 0,
                                "sibling": null,
                                "stateNode": <div
                                  class="input-group-append"
                                >
                                  <div>
                                    custom suffix
                                  </div>
                                </div>,
                                "tag": 5,
                                "treeBaseTime": 0,
                                "type": "div",
                                "updateQueue": null,
                              },
                              "effectTag": 1,
                              "expirationTime": 0,
                              "firstEffect": null,
                              "index": 2,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "addonType": "append",
                                "children": <div>
                                  custom suffix
                                </div>,
                                "tag": "div",
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "addonType": "append",
                                "children": <div>
                                  custom suffix
                                </div>,
                                "tag": "div",
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseTime": 0,
                              "sibling": FiberNode {
                                "_debugID": 199,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": [Circular],
                                "_debugSource": null,
                                "alternate": null,
                                "child": null,
                                "effectTag": 1,
                                "expirationTime": 0,
                                "firstEffect": null,
                                "index": 4,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "context": Object {
                                    "stringFormatter": [MockFunction] {
                                      "calls": Array [
                                        Array [
                                          "ojs_select_placeholder",
                                        ],
                                      ],
                                      "results": Array [
                                        Object {
                                          "isThrow": false,
                                          "value": "ojs_select_placeholder",
                                        },
                                      ],
                                    },
                                  },
                                  "error": null,
                                  "id": "field0_errors",
                                  "invalid": false,
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": Object {
                                  "context": Object {
                                    "stringFormatter": [MockFunction] {
                                      "calls": Array [
                                        Array [
                                          "ojs_select_placeholder",
                                        ],
                                      ],
                                      "results": Array [
                                        Object {
                                          "isThrow": false,
                                          "value": "ojs_select_placeholder",
                                        },
                                      ],
                                    },
                                  },
                                  "error": null,
                                  "id": "field0_errors",
                                  "invalid": false,
                                },
                                "ref": null,
                                "return": [Circular],
                                "selfBaseTime": 0,
                                "sibling": null,
                                "stateNode": null,
                                "tag": 1,
                                "treeBaseTime": 0,
                                "type": [Function],
                                "updateQueue": null,
                              },
                              "stateNode": null,
                              "tag": 1,
                              "treeBaseTime": 0,
                              "type": [Function],
                              "updateQueue": null,
                            },
                            "stateNode": null,
                            "tag": 1,
                            "treeBaseTime": 0,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "stateNode": null,
                          "tag": 1,
                          "treeBaseTime": 0,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": Array [
                            <InputGroupAddon
                              addonType="prepend"
                              tag="div"
                            >
                              <div>
                                custom prefix
                              </div>
                            </InputGroupAddon>,
                            <TestComponent />,
                            <InputGroupAddon
                              addonType="append"
                              tag="div"
                            >
                              <div>
                                custom suffix
                              </div>
                            </InputGroupAddon>,
                            null,
                            <FieldError
                              context={
                                Object {
                                  "stringFormatter": [MockFunction] {
                                    "calls": Array [
                                      Array [
                                        "ojs_select_placeholder",
                                      ],
                                    ],
                                    "results": Array [
                                      Object {
                                        "isThrow": false,
                                        "value": "ojs_select_placeholder",
                                      },
                                    ],
                                  },
                                }
                              }
                              error={null}
                              id="field0_errors"
                              invalid={false}
                            />,
                          ],
                          "className": "input-group",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": Array [
                            <InputGroupAddon
                              addonType="prepend"
                              tag="div"
                            >
                              <div>
                                custom prefix
                              </div>
                            </InputGroupAddon>,
                            <TestComponent />,
                            <InputGroupAddon
                              addonType="append"
                              tag="div"
                            >
                              <div>
                                custom suffix
                              </div>
                            </InputGroupAddon>,
                            null,
                            <FieldError
                              context={
                                Object {
                                  "stringFormatter": [MockFunction] {
                                    "calls": Array [
                                      Array [
                                        "ojs_select_placeholder",
                                      ],
                                    ],
                                    "results": Array [
                                      Object {
                                        "isThrow": false,
                                        "value": "ojs_select_placeholder",
                                      },
                                    ],
                                  },
                                }
                              }
                              error={null}
                              id="field0_errors"
                              invalid={false}
                            />,
                          ],
                          "className": "input-group",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseTime": 0,
                        "sibling": null,
                        "stateNode": <div
                          class="input-group"
                        >
                          <div
                            class="input-group-prepend"
                          >
                            <div>
                              custom prefix
                            </div>
                          </div>
                          <div
                            id="field0"
                          />
                          <div
                            class="input-group-append"
                          >
                            <div>
                              custom suffix
                            </div>
                          </div>
                        </div>,
                        "tag": 5,
                        "treeBaseTime": 0,
                        "type": "div",
                        "updateQueue": null,
                      },
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": Array [
                          <InputGroupAddon
                            addonType="prepend"
                            tag="div"
                          >
                            <div>
                              custom prefix
                            </div>
                          </InputGroupAddon>,
                          <TestComponent />,
                          <InputGroupAddon
                            addonType="append"
                            tag="div"
                          >
                            <div>
                              custom suffix
                            </div>
                          </InputGroupAddon>,
                          null,
                          <FieldError
                            context={
                              Object {
                                "stringFormatter": [MockFunction] {
                                  "calls": Array [
                                    Array [
                                      "ojs_select_placeholder",
                                    ],
                                  ],
                                  "results": Array [
                                    Object {
                                      "isThrow": false,
                                      "value": "ojs_select_placeholder",
                                    },
                                  ],
                                },
                              }
                            }
                            error={null}
                            id="field0_errors"
                            invalid={false}
                          />,
                        ],
                        "tag": "div",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": Array [
                          <InputGroupAddon
                            addonType="prepend"
                            tag="div"
                          >
                            <div>
                              custom prefix
                            </div>
                          </InputGroupAddon>,
                          <TestComponent />,
                          <InputGroupAddon
                            addonType="append"
                            tag="div"
                          >
                            <div>
                              custom suffix
                            </div>
                          </InputGroupAddon>,
                          null,
                          <FieldError
                            context={
                              Object {
                                "stringFormatter": [MockFunction] {
                                  "calls": Array [
                                    Array [
                                      "ojs_select_placeholder",
                                    ],
                                  ],
                                  "results": Array [
                                    Object {
                                      "isThrow": false,
                                      "value": "ojs_select_placeholder",
                                    },
                                  ],
                                },
                              }
                            }
                            error={null}
                            id="field0_errors"
                            invalid={false}
                          />,
                        ],
                        "tag": "div",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseTime": 0,
                      "sibling": null,
                      "stateNode": null,
                      "tag": 1,
                      "treeBaseTime": 0,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": Array [
                        <InputGroup
                          tag="div"
                        >
                          <InputGroupAddon
                            addonType="prepend"
                            tag="div"
                          >
                            <div>
                              custom prefix
                            </div>
                          </InputGroupAddon>
                          <TestComponent />
                          <InputGroupAddon
                            addonType="append"
                            tag="div"
                          >
                            <div>
                              custom suffix
                            </div>
                          </InputGroupAddon>
                          <FieldError
                            context={
                              Object {
                                "stringFormatter": [MockFunction] {
                                  "calls": Array [
                                    Array [
                                      "ojs_select_placeholder",
                                    ],
                                  ],
                                  "results": Array [
                                    Object {
                                      "isThrow": false,
                                      "value": "ojs_select_placeholder",
                                    },
                                  ],
                                },
                              }
                            }
                            error={null}
                            id="field0_errors"
                            invalid={false}
                          />
                        </InputGroup>,
                        null,
                      ],
                      "className": "col-sm-9",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": Array [
                        <InputGroup
                          tag="div"
                        >
                          <InputGroupAddon
                            addonType="prepend"
                            tag="div"
                          >
                            <div>
                              custom prefix
                            </div>
                          </InputGroupAddon>
                          <TestComponent />
                          <InputGroupAddon
                            addonType="append"
                            tag="div"
                          >
                            <div>
                              custom suffix
                            </div>
                          </InputGroupAddon>
                          <FieldError
                            context={
                              Object {
                                "stringFormatter": [MockFunction] {
                                  "calls": Array [
                                    Array [
                                      "ojs_select_placeholder",
                                    ],
                                  ],
                                  "results": Array [
                                    Object {
                                      "isThrow": false,
                                      "value": "ojs_select_placeholder",
                                    },
                                  ],
                                },
                              }
                            }
                            error={null}
                            id="field0_errors"
                            invalid={false}
                          />
                        </InputGroup>,
                        null,
                      ],
                      "className": "col-sm-9",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseTime": 0,
                    "sibling": null,
                    "stateNode": <div
                      class="col-sm-9"
                    >
                      <div
                        class="input-group"
                      >
                        <div
                          class="input-group-prepend"
                        >
                          <div>
                            custom prefix
                          </div>
                        </div>
                        <div
                          id="field0"
                        />
                        <div
                          class="input-group-append"
                        >
                          <div>
                            custom suffix
                          </div>
                        </div>
                      </div>
                    </div>,
                    "tag": 5,
                    "treeBaseTime": 0,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "effectTag": 1,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 1,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": Array [
                      <InputGroup
                        tag="div"
                      >
                        <InputGroupAddon
                          addonType="prepend"
                          tag="div"
                        >
                          <div>
                            custom prefix
                          </div>
                        </InputGroupAddon>
                        <TestComponent />
                        <InputGroupAddon
                          addonType="append"
                          tag="div"
                        >
                          <div>
                            custom suffix
                          </div>
                        </InputGroupAddon>
                        <FieldError
                          context={
                            Object {
                              "stringFormatter": [MockFunction] {
                                "calls": Array [
                                  Array [
                                    "ojs_select_placeholder",
                                  ],
                                ],
                                "results": Array [
                                  Object {
                                    "isThrow": false,
                                    "value": "ojs_select_placeholder",
                                  },
                                ],
                              },
                            }
                          }
                          error={null}
                          id="field0_errors"
                          invalid={false}
                        />
                      </InputGroup>,
                      null,
                    ],
                    "sm": "9",
                    "tag": "div",
                    "widths": Array [
                      "xs",
                      "sm",
                      "md",
                      "lg",
                      "xl",
                    ],
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": Array [
                      <InputGroup
                        tag="div"
                      >
                        <InputGroupAddon
                          addonType="prepend"
                          tag="div"
                        >
                          <div>
                            custom prefix
                          </div>
                        </InputGroupAddon>
                        <TestComponent />
                        <InputGroupAddon
                          addonType="append"
                          tag="div"
                        >
                          <div>
                            custom suffix
                          </div>
                        </InputGroupAddon>
                        <FieldError
                          context={
                            Object {
                              "stringFormatter": [MockFunction] {
                                "calls": Array [
                                  Array [
                                    "ojs_select_placeholder",
                                  ],
                                ],
                                "results": Array [
                                  Object {
                                    "isThrow": false,
                                    "value": "ojs_select_placeholder",
                                  },
                                ],
                              },
                            }
                          }
                          error={null}
                          id="field0_errors"
                          invalid={false}
                        />
                      </InputGroup>,
                      null,
                    ],
                    "sm": "9",
                    "tag": "div",
                    "widths": Array [
                      "xs",
                      "sm",
                      "md",
                      "lg",
                      "xl",
                    ],
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseTime": 0,
                  "sibling": null,
                  "stateNode": null,
                  "tag": 1,
                  "treeBaseTime": 0,
                  "type": [Function],
                  "updateQueue": null,
                },
                "stateNode": null,
                "tag": 1,
                "treeBaseTime": 0,
                "type": [Function],
                "updateQueue": null,
              },
              "effectTag": 0,
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": Array [
                  <Label
                    className="text-right"
                    for="field0"
                    sm="3"
                    tag="label"
                    widths={
                      Array [
                        "xs",
                        "sm",
                        "md",
                        "lg",
                        "xl",
                      ]
                    }
                  >
                    ojs_select_placeholder
                  </Label>,
                  <Col
                    sm="9"
                    tag="div"
                    widths={
                      Array [
                        "xs",
                        "sm",
                        "md",
                        "lg",
                        "xl",
                      ]
                    }
                  >
                    <InputGroup
                      tag="div"
                    >
                      <InputGroupAddon
                        addonType="prepend"
                        tag="div"
                      >
                        <div>
                          custom prefix
                        </div>
                      </InputGroupAddon>
                      <TestComponent />
                      <InputGroupAddon
                        addonType="append"
                        tag="div"
                      >
                        <div>
                          custom suffix
                        </div>
                      </InputGroupAddon>
                      <FieldError
                        context={
                          Object {
                            "stringFormatter": [MockFunction] {
                              "calls": Array [
                                Array [
                                  "ojs_select_placeholder",
                                ],
                              ],
                              "results": Array [
                                Object {
                                  "isThrow": false,
                                  "value": "ojs_select_placeholder",
                                },
                              ],
                            },
                          }
                        }
                        error={null}
                        id="field0_errors"
                        invalid={false}
                      />
                    </InputGroup>
                  </Col>,
                ],
                "className": "row form-group",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": Array [
                  <Label
                    className="text-right"
                    for="field0"
                    sm="3"
                    tag="label"
                    widths={
                      Array [
                        "xs",
                        "sm",
                        "md",
                        "lg",
                        "xl",
                      ]
                    }
                  >
                    ojs_select_placeholder
                  </Label>,
                  <Col
                    sm="9"
                    tag="div"
                    widths={
                      Array [
                        "xs",
                        "sm",
                        "md",
                        "lg",
                        "xl",
                      ]
                    }
                  >
                    <InputGroup
                      tag="div"
                    >
                      <InputGroupAddon
                        addonType="prepend"
                        tag="div"
                      >
                        <div>
                          custom prefix
                        </div>
                      </InputGroupAddon>
                      <TestComponent />
                      <InputGroupAddon
                        addonType="append"
                        tag="div"
                      >
                        <div>
                          custom suffix
                        </div>
                      </InputGroupAddon>
                      <FieldError
                        context={
                          Object {
                            "stringFormatter": [MockFunction] {
                              "calls": Array [
                                Array [
                                  "ojs_select_placeholder",
                                ],
                              ],
                              "results": Array [
                                Object {
                                  "isThrow": false,
                                  "value": "ojs_select_placeholder",
                                },
                              ],
                            },
                          }
                        }
                        error={null}
                        id="field0_errors"
                        invalid={false}
                      />
                    </InputGroup>
                  </Col>,
                ],
                "className": "row form-group",
              },
              "ref": null,
              "return": [Circular],
              "selfBaseTime": 0,
              "sibling": null,
              "stateNode": <div
                class="row form-group"
              >
                <label
                  class="text-right col-sm-3 col-form-label"
                  for="field0"
                >
                  ojs_select_placeholder
                </label>
                <div
                  class="col-sm-9"
                >
                  <div
                    class="input-group"
                  >
                    <div
                      class="input-group-prepend"
                    >
                      <div>
                        custom prefix
                      </div>
                    </div>
                    <div
                      id="field0"
                    />
                    <div
                      class="input-group-append"
                    >
                      <div>
                        custom suffix
                      </div>
                    </div>
                  </div>
                </div>
              </div>,
              "tag": 5,
              "treeBaseTime": 0,
              "type": "div",
              "updateQueue": null,
            },
            "effectTag": 1,
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "children": Array [
                <Label
                  className="text-right"
                  for="field0"
                  sm="3"
                  tag="label"
                  widths={
                    Array [
                      "xs",
                      "sm",
                      "md",
                      "lg",
                      "xl",
                    ]
                  }
                >
                  ojs_select_placeholder
                </Label>,
                <Col
                  sm="9"
                  tag="div"
                  widths={
                    Array [
                      "xs",
                      "sm",
                      "md",
                      "lg",
                      "xl",
                    ]
                  }
                >
                  <InputGroup
                    tag="div"
                  >
                    <InputGroupAddon
                      addonType="prepend"
                      tag="div"
                    >
                      <div>
                        custom prefix
                      </div>
                    </InputGroupAddon>
                    <TestComponent />
                    <InputGroupAddon
                      addonType="append"
                      tag="div"
                    >
                      <div>
                        custom suffix
                      </div>
                    </InputGroupAddon>
                    <FieldError
                      context={
                        Object {
                          "stringFormatter": [MockFunction] {
                            "calls": Array [
                              Array [
                                "ojs_select_placeholder",
                              ],
                            ],
                            "results": Array [
                              Object {
                                "isThrow": false,
                                "value": "ojs_select_placeholder",
                              },
                            ],
                          },
                        }
                      }
                      error={null}
                      id="field0_errors"
                      invalid={false}
                    />
                  </InputGroup>
                </Col>,
              ],
              "className": "",
              "row": true,
              "tag": "div",
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "children": Array [
                <Label
                  className="text-right"
                  for="field0"
                  sm="3"
                  tag="label"
                  widths={
                    Array [
                      "xs",
                      "sm",
                      "md",
                      "lg",
                      "xl",
                    ]
                  }
                >
                  ojs_select_placeholder
                </Label>,
                <Col
                  sm="9"
                  tag="div"
                  widths={
                    Array [
                      "xs",
                      "sm",
                      "md",
                      "lg",
                      "xl",
                    ]
                  }
                >
                  <InputGroup
                    tag="div"
                  >
                    <InputGroupAddon
                      addonType="prepend"
                      tag="div"
                    >
                      <div>
                        custom prefix
                      </div>
                    </InputGroupAddon>
                    <TestComponent />
                    <InputGroupAddon
                      addonType="append"
                      tag="div"
                    >
                      <div>
                        custom suffix
                      </div>
                    </InputGroupAddon>
                    <FieldError
                      context={
                        Object {
                          "stringFormatter": [MockFunction] {
                            "calls": Array [
                              Array [
                                "ojs_select_placeholder",
                              ],
                            ],
                            "results": Array [
                              Object {
                                "isThrow": false,
                                "value": "ojs_select_placeholder",
                              },
                            ],
                          },
                        }
                      }
                      error={null}
                      id="field0_errors"
                      invalid={false}
                    />
                  </InputGroup>
                </Col>,
              ],
              "className": "",
              "row": true,
              "tag": "div",
            },
            "ref": null,
            "return": [Circular],
            "selfBaseTime": 0,
            "sibling": null,
            "stateNode": null,
            "tag": 1,
            "treeBaseTime": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "effectTag": 1,
          "expirationTime": 0,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "children": <TestComponent />,
            "field": Object {
              "id": "field0",
              "invalid": false,
              "name": "field0",
              "onBlur": [MockFunction],
              "onChange": [MockFunction],
              "value": "",
            },
            "info": null,
            "label": "ojs_select_placeholder",
            "meta": Object {
              "error": null,
              "isValidating": false,
              "stringFormatter": [MockFunction] {
                "calls": Array [
                  Array [
                    "ojs_select_placeholder",
                  ],
                ],
                "results": Array [
                  Object {
                    "isThrow": false,
                    "value": "ojs_select_placeholder",
                  },
                ],
              },
              "valid": true,
            },
            "prefix": [Function],
            "suffix": [Function],
            "validators": null,
          },
          "memoizedState": Object {
            "infoVisible": false,
          },
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "children": <TestComponent />,
            "field": Object {
              "id": "field0",
              "invalid": false,
              "name": "field0",
              "onBlur": [MockFunction],
              "onChange": [MockFunction],
              "value": "",
            },
            "info": null,
            "label": "ojs_select_placeholder",
            "meta": Object {
              "error": null,
              "isValidating": false,
              "stringFormatter": [MockFunction] {
                "calls": Array [
                  Array [
                    "ojs_select_placeholder",
                  ],
                ],
                "results": Array [
                  Object {
                    "isThrow": false,
                    "value": "ojs_select_placeholder",
                  },
                ],
              },
              "valid": true,
            },
            "prefix": [Function],
            "suffix": [Function],
            "validators": null,
          },
          "ref": null,
          "return": FiberNode {
            "_debugID": 185,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "alternate": null,
            "child": [Circular],
            "effectTag": 1,
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "children": <TestComponent />,
                "field": Object {
                  "id": "field0",
                  "invalid": false,
                  "name": "field0",
                  "onBlur": [MockFunction],
                  "onChange": [MockFunction],
                  "value": "",
                },
                "info": null,
                "label": "ojs_select_placeholder",
                "meta": Object {
                  "error": null,
                  "isValidating": false,
                  "stringFormatter": [MockFunction] {
                    "calls": Array [
                      Array [
                        "ojs_select_placeholder",
                      ],
                    ],
                    "results": Array [
                      Object {
                        "isThrow": false,
                        "value": "ojs_select_placeholder",
                      },
                    ],
                  },
                  "valid": true,
                },
                "prefix": [Function],
                "suffix": [Function],
                "validators": null,
              },
            },
            "memoizedState": Object {
              "context": null,
              "mount": true,
              "props": Object {
                "children": <TestComponent />,
                "field": Object {
                  "id": "field0",
                  "invalid": false,
                  "name": "field0",
                  "onBlur": [MockFunction],
                  "onChange": [MockFunction],
                  "value": "",
                },
                "info": null,
                "label": "ojs_select_placeholder",
                "meta": Object {
                  "error": null,
                  "isValidating": false,
                  "stringFormatter": [MockFunction] {
                    "calls": Array [
                      Array [
                        "ojs_select_placeholder",
                      ],
                    ],
                    "results": Array [
                      Object {
                        "isThrow": false,
                        "value": "ojs_select_placeholder",
                      },
                    ],
                  },
                  "valid": true,
                },
                "prefix": [Function],
                "suffix": [Function],
                "validators": null,
              },
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "children": <TestComponent />,
                "field": Object {
                  "id": "field0",
                  "invalid": false,
                  "name": "field0",
                  "onBlur": [MockFunction],
                  "onChange": [MockFunction],
                  "value": "",
                },
                "info": null,
                "label": "ojs_select_placeholder",
                "meta": Object {
                  "error": null,
                  "isValidating": false,
                  "stringFormatter": [MockFunction] {
                    "calls": Array [
                      Array [
                        "ojs_select_placeholder",
                      ],
                    ],
                    "results": Array [
                      Object {
                        "isThrow": false,
                        "value": "ojs_select_placeholder",
                      },
                    ],
                  },
                  "valid": true,
                },
                "prefix": [Function],
                "suffix": [Function],
                "validators": null,
              },
            },
            "ref": null,
            "return": FiberNode {
              "_debugID": 183,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "alternate": FiberNode {
                "_debugID": 183,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "alternate": [Circular],
                "child": null,
                "effectTag": 0,
                "expirationTime": 1,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": null,
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "selfBaseTime": 0,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div>
                    <div
                      class="row form-group"
                    >
                      <label
                        class="text-right col-sm-3 col-form-label"
                        for="field0"
                      >
                        ojs_select_placeholder
                      </label>
                      <div
                        class="col-sm-9"
                      >
                        <div
                          class="input-group"
                        >
                          <div
                            class="input-group-prepend"
                          >
                            <div>
                              custom prefix
                            </div>
                          </div>
                          <div
                            id="field0"
                          />
                          <div
                            class="input-group-append"
                          >
                            <div>
                              custom suffix
                            </div>
                          </div>
                        </div>
                      </div>
                    </div>
                  </div>,
                  "context": Object {},
                  "current": [Circular],
                  "earliestPendingTime": 0,
                  "earliestSuspendedTime": 0,
                  "finishedWork": null,
                  "firstBatch": null,
                  "hydrate": false,
                  "latestPendingTime": 0,
                  "latestPingedTime": 0,
                  "latestSuspendedTime": 0,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingCommitExpirationTime": 0,
                  "pendingContext": null,
                  "remainingExpirationTime": 0,
                },
                "tag": 3,
                "treeBaseTime": 0,
                "type": null,
                "updateQueue": Object {
                  "baseState": null,
                  "expirationTime": 1,
                  "firstCapturedEffect": null,
                  "firstCapturedUpdate": null,
                  "firstEffect": null,
                  "firstUpdate": Object {
                    "callback": null,
                    "expirationTime": 1,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "children": <TestComponent />,
                            "field": Object {
                              "id": "field0",
                              "invalid": false,
                              "name": "field0",
                              "onBlur": [MockFunction],
                              "onChange": [MockFunction],
                              "value": "",
                            },
                            "info": null,
                            "label": "ojs_select_placeholder",
                            "meta": Object {
                              "error": null,
                              "isValidating": false,
                              "stringFormatter": [MockFunction] {
                                "calls": Array [
                                  Array [
                                    "ojs_select_placeholder",
                                  ],
                                ],
                                "results": Array [
                                  Object {
                                    "isThrow": false,
                                    "value": "ojs_select_placeholder",
                                  },
                                ],
                              },
                              "valid": true,
                            },
                            "prefix": [Function],
                            "suffix": [Function],
                            "validators": null,
                          }
                        }
                      />,
                    },
                    "tag": 0,
                  },
                  "lastCapturedEffect": null,
                  "lastCapturedUpdate": null,
                  "lastEffect": null,
                  "lastUpdate": Object {
                    "callback": null,
                    "expirationTime": 1,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "children": <TestComponent />,
                            "field": Object {
                              "id": "field0",
                              "invalid": false,
                              "name": "field0",
                              "onBlur": [MockFunction],
                              "onChange": [MockFunction],
                              "value": "",
                            },
                            "info": null,
                            "label": "ojs_select_placeholder",
                            "meta": Object {
                              "error": null,
                              "isValidating": false,
                              "stringFormatter": [MockFunction] {
                                "calls": Array [
                                  Array [
                                    "ojs_select_placeholder",
                                  ],
                                ],
                                "results": Array [
                                  Object {
                                    "isThrow": false,
                                    "value": "ojs_select_placeholder",
                                  },
                                ],
                              },
                              "valid": true,
                            },
                            "prefix": [Function],
                            "suffix": [Function],
                            "validators": null,
                          }
                        }
                      />,
                    },
                    "tag": 0,
                  },
                },
              },
              "child": [Circular],
              "effectTag": 32,
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": null,
              "memoizedState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                    Object {
                      "children": <TestComponent />,
                      "field": Object {
                        "id": "field0",
                        "invalid": false,
                        "name": "field0",
                        "onBlur": [MockFunction],
                        "onChange": [MockFunction],
                        "value": "",
                      },
                      "info": null,
                      "label": "ojs_select_placeholder",
                      "meta": Object {
                        "error": null,
                        "isValidating": false,
                        "stringFormatter": [MockFunction] {
                          "calls": Array [
                            Array [
                              "ojs_select_placeholder",
                            ],
                          ],
                          "results": Array [
                            Object {
                              "isThrow": false,
                              "value": "ojs_select_placeholder",
                            },
                          ],
                        },
                        "valid": true,
                      },
                      "prefix": [Function],
                      "suffix": [Function],
                      "validators": null,
                    }
                  }
                />,
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseTime": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                    class="row form-group"
                  >
                    <label
                      class="text-right col-sm-3 col-form-label"
                      for="field0"
                    >
                      ojs_select_placeholder
                    </label>
                    <div
                      class="col-sm-9"
                    >
                      <div
                        class="input-group"
                      >
                        <div
                          class="input-group-prepend"
                        >
                          <div>
                            custom prefix
                          </div>
                        </div>
                        <div
                          id="field0"
                        />
                        <div
                          class="input-group-append"
                        >
                          <div>
                            custom suffix
                          </div>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "remainingExpirationTime": 0,
              },
              "tag": 3,
              "treeBaseTime": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={null}
                    props={
                      Object {
                        "children": <TestComponent />,
                        "field": Object {
                          "id": "field0",
                          "invalid": false,
                          "name": "field0",
                          "onBlur": [MockFunction],
                          "onChange": [MockFunction],
                          "value": "",
                        },
                        "info": null,
                        "label": "ojs_select_placeholder",
                        "meta": Object {
                          "error": null,
                          "isValidating": false,
                          "stringFormatter": [MockFunction] {
                            "calls": Array [
                              Array [
                                "ojs_select_placeholder",
                              ],
                            ],
                            "results": Array [
                              Object {
                                "isThrow": false,
                                "value": "ojs_select_placeholder",
                              },
                            ],
                          },
                          "valid": true,
                        },
                        "prefix": [Function],
                        "suffix": [Function],
                        "validators": null,
                      }
                    }
                  />,
                },
                "expirationTime": 0,
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": null,
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": null,
              },
            },
            "selfBaseTime": 0,
            "sibling": null,
            "stateNode": WrapperComponent {
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {},
              "props": Object {
                "Component": [Function],
                "context": null,
                "props": Object {
                  "children": <TestComponent />,
                  "field": Object {
                    "id": "field0",
                    "invalid": false,
                    "name": "field0",
                    "onBlur": [MockFunction],
                    "onChange": [MockFunction],
                    "value": "",
                  },
                  "info": null,
                  "label": "ojs_select_placeholder",
                  "meta": Object {
                    "error": null,
                    "isValidating": false,
                    "stringFormatter": [MockFunction] {
                      "calls": Array [
                        Array [
                          "ojs_select_placeholder",
                        ],
                      ],
                      "results": Array [
                        Object {
                          "isThrow": false,
                          "value": "ojs_select_placeholder",
                        },
                      ],
                    },
                    "valid": true,
                  },
                  "prefix": [Function],
                  "suffix": [Function],
                  "validators": null,
                },
              },
              "refs": Object {},
              "state": Object {
                "context": null,
                "mount": true,
                "props": Object {
                  "children": <TestComponent />,
                  "field": Object {
                    "id": "field0",
                    "invalid": false,
                    "name": "field0",
                    "onBlur": [MockFunction],
                    "onChange": [MockFunction],
                    "value": "",
                  },
                  "info": null,
                  "label": "ojs_select_placeholder",
                  "meta": Object {
                    "error": null,
                    "isValidating": false,
                    "stringFormatter": [MockFunction] {
                      "calls": Array [
                        Array [
                          "ojs_select_placeholder",
                        ],
                      ],
                      "results": Array [
                        Object {
                          "isThrow": false,
                          "value": "ojs_select_placeholder",
                        },
                      ],
                    },
                    "valid": true,
                  },
                  "prefix": [Function],
                  "suffix": [Function],
                  "validators": null,
                },
              },
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 2,
            "treeBaseTime": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "selfBaseTime": 0,
          "sibling": null,
          "stateNode": [Circular],
          "tag": 2,
          "treeBaseTime": 0,
          "type": [Function],
          "updateQueue": null,
        },
        "_reactInternalInstance": Object {},
        "context": Object {},
        "props": Object {
          "children": <TestComponent />,
          "field": Object {
            "id": "field0",
            "invalid": false,
            "name": "field0",
            "onBlur": [MockFunction],
            "onChange": [MockFunction],
            "value": "",
          },
          "info": null,
          "label": "ojs_select_placeholder",
          "meta": Object {
            "error": null,
            "isValidating": false,
            "stringFormatter": [MockFunction] {
              "calls": Array [
                Array [
                  "ojs_select_placeholder",
                ],
              ],
              "results": Array [
                Object {
                  "isThrow": false,
                  "value": "ojs_select_placeholder",
                },
              ],
            },
            "valid": true,
          },
          "prefix": [Function],
          "suffix": [Function],
          "validators": null,
        },
        "refs": Object {},
        "state": Object {
          "infoVisible": false,
        },
        "toggleInfo": [Function],
        "updater": Object {
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
        },
      },
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <TestComponent />,
        "field": Object {
          "id": "field0",
          "invalid": false,
          "name": "field0",
          "onBlur": [MockFunction],
          "onChange": [MockFunction],
          "value": "",
        },
        "info": null,
        "label": "ojs_select_placeholder",
        "meta": Object {
          "error": null,
          "isValidating": false,
          "stringFormatter": [MockFunction] {
            "calls": Array [
              Array [
                "ojs_select_placeholder",
              ],
            ],
            "results": Array [
              Object {
                "isThrow": false,
                "value": "ojs_select_placeholder",
              },
            ],
          },
          "valid": true,
        },
        "prefix": [Function],
        "suffix": [Function],
        "validators": null,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <Label
              className="text-right"
              for="field0"
              sm="3"
              tag="label"
              widths={
                Array [
                  "xs",
                  "sm",
                  "md",
                  "lg",
                  "xl",
                ]
              }
            >
              ojs_select_placeholder
            </Label>,
            <Col
              sm="9"
              tag="div"
              widths={
                Array [
                  "xs",
                  "sm",
                  "md",
                  "lg",
                  "xl",
                ]
              }
            >
              <InputGroup
                tag="div"
              >
                <InputGroupAddon
                  addonType="prepend"
                  tag="div"
                >
                  <div>
                    custom prefix
                  </div>
                </InputGroupAddon>
                <TestComponent />
                <InputGroupAddon
                  addonType="append"
                  tag="div"
                >
                  <div>
                    custom suffix
                  </div>
                </InputGroupAddon>
                <FieldError
                  context={
                    Object {
                      "stringFormatter": [MockFunction] {
                        "calls": Array [
                          Array [
                            "ojs_select_placeholder",
                          ],
                        ],
                        "results": Array [
                          Object {
                            "isThrow": false,
                            "value": "ojs_select_placeholder",
                          },
                        ],
                      },
                    }
                  }
                  error={null}
                  id="field0_errors"
                  invalid={false}
                />
              </InputGroup>
            </Col>,
          ],
          "className": "",
          "row": true,
          "tag": "div",
        },
        "ref": null,
        "rendered": Object {
          "instance": <div
            class="row form-group"
          >
            <label
              class="text-right col-sm-3 col-form-label"
              for="field0"
            >
              ojs_select_placeholder
            </label>
            <div
              class="col-sm-9"
            >
              <div
                class="input-group"
              >
                <div
                  class="input-group-prepend"
                >
                  <div>
                    custom prefix
                  </div>
                </div>
                <div
                  id="field0"
                />
                <div
                  class="input-group-append"
                >
                  <div>
                    custom suffix
                  </div>
                </div>
              </div>
            </div>
          </div>,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <Label
                className="text-right"
                for="field0"
                sm="3"
                tag="label"
                widths={
                  Array [
                    "xs",
                    "sm",
                    "md",
                    "lg",
                    "xl",
                  ]
                }
              >
                ojs_select_placeholder
              </Label>,
              <Col
                sm="9"
                tag="div"
                widths={
                  Array [
                    "xs",
                    "sm",
                    "md",
                    "lg",
                    "xl",
                  ]
                }
              >
                <InputGroup
                  tag="div"
                >
                  <InputGroupAddon
                    addonType="prepend"
                    tag="div"
                  >
                    <div>
                      custom prefix
                    </div>
                  </InputGroupAddon>
                  <TestComponent />
                  <InputGroupAddon
                    addonType="append"
                    tag="div"
                  >
                    <div>
                      custom suffix
                    </div>
                  </InputGroupAddon>
                  <FieldError
                    context={
                      Object {
                        "stringFormatter": [MockFunction] {
                          "calls": Array [
                            Array [
                              "ojs_select_placeholder",
                            ],
                          ],
                          "results": Array [
                            Object {
                              "isThrow": false,
                              "value": "ojs_select_placeholder",
                            },
                          ],
                        },
                      }
                    }
                    error={null}
                    id="field0_errors"
                    invalid={false}
                  />
                </InputGroup>
              </Col>,
            ],
            "className": "row form-group",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": Array [
                  null,
                  null,
                  "ojs_select_placeholder",
                  null,
                ],
                "className": "text-right",
                "for": "field0",
                "sm": "3",
                "tag": "label",
                "widths": Array [
                  "xs",
                  "sm",
                  "md",
                  "lg",
                  "xl",
                ],
              },
              "ref": null,
              "rendered": Object {
                "instance": <label
                  class="text-right col-sm-3 col-form-label"
                  for="field0"
                >
                  ojs_select_placeholder
                </label>,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    null,
                    null,
                    "ojs_select_placeholder",
                    null,
                  ],
                  "className": "text-right col-sm-3 col-form-label",
                  "htmlFor": "field0",
                },
                "ref": null,
                "rendered": Array [
                  "ojs_select_placeholder",
                ],
                "type": "label",
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": Array [
                  <InputGroup
                    tag="div"
                  >
                    <InputGroupAddon
                      addonType="prepend"
                      tag="div"
                    >
                      <div>
                        custom prefix
                      </div>
                    </InputGroupAddon>
                    <TestComponent />
                    <InputGroupAddon
                      addonType="append"
                      tag="div"
                    >
                      <div>
                        custom suffix
                      </div>
                    </InputGroupAddon>
                    <FieldError
                      context={
                        Object {
                          "stringFormatter": [MockFunction] {
                            "calls": Array [
                              Array [
                                "ojs_select_placeholder",
                              ],
                            ],
                            "results": Array [
                              Object {
                                "isThrow": false,
                                "value": "ojs_select_placeholder",
                              },
                            ],
                          },
                        }
                      }
                      error={null}
                      id="field0_errors"
                      invalid={false}
                    />
                  </InputGroup>,
                  null,
                ],
                "sm": "9",
                "tag": "div",
                "widths": Array [
                  "xs",
                  "sm",
                  "md",
                  "lg",
                  "xl",
                ],
              },
              "ref": null,
              "rendered": Object {
                "instance": <div
                  class="col-sm-9"
                >
                  <div
                    class="input-group"
                  >
                    <div
                      class="input-group-prepend"
                    >
                      <div>
                        custom prefix
                      </div>
                    </div>
                    <div
                      id="field0"
                    />
                    <div
                      class="input-group-append"
                    >
                      <div>
                        custom suffix
                      </div>
                    </div>
                  </div>
                </div>,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <InputGroup
                      tag="div"
                    >
                      <InputGroupAddon
                        addonType="prepend"
                        tag="div"
                      >
                        <div>
                          custom prefix
                        </div>
                      </InputGroupAddon>
                      <TestComponent />
                      <InputGroupAddon
                        addonType="append"
                        tag="div"
                      >
                        <div>
                          custom suffix
                        </div>
                      </InputGroupAddon>
                      <FieldError
                        context={
                          Object {
                            "stringFormatter": [MockFunction] {
                              "calls": Array [
                                Array [
                                  "ojs_select_placeholder",
                                ],
                              ],
                              "results": Array [
                                Object {
                                  "isThrow": false,
                                  "value": "ojs_select_placeholder",
                                },
                              ],
                            },
                          }
                        }
                        error={null}
                        id="field0_errors"
                        invalid={false}
                      />
                    </InputGroup>,
                    null,
                  ],
                  "className": "col-sm-9",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "children": Array [
                        <InputGroupAddon
                          addonType="prepend"
                          tag="div"
                        >
                          <div>
                            custom prefix
                          </div>
                        </InputGroupAddon>,
                        <TestComponent />,
                        <InputGroupAddon
                          addonType="append"
                          tag="div"
                        >
                          <div>
                            custom suffix
                          </div>
                        </InputGroupAddon>,
                        null,
                        <FieldError
                          context={
                            Object {
                              "stringFormatter": [MockFunction] {
                                "calls": Array [
                                  Array [
                                    "ojs_select_placeholder",
                                  ],
                                ],
                                "results": Array [
                                  Object {
                                    "isThrow": false,
                                    "value": "ojs_select_placeholder",
                                  },
                                ],
                              },
                            }
                          }
                          error={null}
                          id="field0_errors"
                          invalid={false}
                        />,
                      ],
                      "tag": "div",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": <div
                        class="input-group"
                      >
                        <div
                          class="input-group-prepend"
                        >
                          <div>
                            custom prefix
                          </div>
                        </div>
                        <div
                          id="field0"
                        />
                        <div
                          class="input-group-append"
                        >
                          <div>
                            custom suffix
                          </div>
                        </div>
                      </div>,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": Array [
                          <InputGroupAddon
                            addonType="prepend"
                            tag="div"
                          >
                            <div>
                              custom prefix
                            </div>
                          </InputGroupAddon>,
                          <TestComponent />,
                          <InputGroupAddon
                            addonType="append"
                            tag="div"
                          >
                            <div>
                              custom suffix
                            </div>
                          </InputGroupAddon>,
                          null,
                          <FieldError
                            context={
                              Object {
                                "stringFormatter": [MockFunction] {
                                  "calls": Array [
                                    Array [
                                      "ojs_select_placeholder",
                                    ],
                                  ],
                                  "results": Array [
                                    Object {
                                      "isThrow": false,
                                      "value": "ojs_select_placeholder",
                                    },
                                  ],
                                },
                              }
                            }
                            error={null}
                            id="field0_errors"
                            invalid={false}
                          />,
                        ],
                        "className": "input-group",
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "function",
                          "props": Object {
                            "addonType": "prepend",
                            "children": <div>
                              custom prefix
                            </div>,
                            "tag": "div",
                          },
                          "ref": null,
                          "rendered": Object {
                            "instance": <div
                              class="input-group-prepend"
                            >
                              <div>
                                custom prefix
                              </div>
                            </div>,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": <div>
                                custom prefix
                              </div>,
                              "className": "input-group-prepend",
                            },
                            "ref": null,
                            "rendered": Array [
                              Object {
                                "instance": <div>
                                  custom prefix
                                </div>,
                                "key": undefined,
                                "nodeType": "host",
                                "props": Object {
                                  "children": "custom prefix",
                                },
                                "ref": null,
                                "rendered": Array [
                                  "custom prefix",
                                ],
                                "type": "div",
                              },
                            ],
                            "type": "div",
                          },
                          "type": [Function],
                        },
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "function",
                          "props": Object {},
                          "ref": null,
                          "rendered": Object {
                            "instance": <div
                              id="field0"
                            />,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "id": "field0",
                            },
                            "ref": null,
                            "rendered": Array [
                              undefined,
                            ],
                            "type": "div",
                          },
                          "type": [Function],
                        },
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "function",
                          "props": Object {
                            "addonType": "append",
                            "children": <div>
                              custom suffix
                            </div>,
                            "tag": "div",
                          },
                          "ref": null,
                          "rendered": Object {
                            "instance": <div
                              class="input-group-append"
                            >
                              <div>
                                custom suffix
                              </div>
                            </div>,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": <div>
                                custom suffix
                              </div>,
                              "className": "input-group-append",
                            },
                            "ref": null,
                            "rendered": Array [
                              Object {
                                "instance": <div>
                                  custom suffix
                                </div>,
                                "key": undefined,
                                "nodeType": "host",
                                "props": Object {
                                  "children": "custom suffix",
                                },
                                "ref": null,
                                "rendered": Array [
                                  "custom suffix",
                                ],
                                "type": "div",
                              },
                            ],
                            "type": "div",
                          },
                          "type": [Function],
                        },
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "function",
                          "props": Object {
                            "context": Object {
                              "stringFormatter": [MockFunction] {
                                "calls": Array [
                                  Array [
                                    "ojs_select_placeholder",
                                  ],
                                ],
                                "results": Array [
                                  Object {
                                    "isThrow": false,
                                    "value": "ojs_select_placeholder",
                                  },
                                ],
                              },
                            },
                            "error": null,
                            "id": "field0_errors",
                            "invalid": false,
                          },
                          "ref": null,
                          "rendered": null,
                          "type": [Function],
                        },
                      ],
                      "type": "div",
                    },
                    "type": [Function],
                  },
                ],
                "type": "div",
              },
              "type": [Function],
            },
          ],
          "type": "div",
        },
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
