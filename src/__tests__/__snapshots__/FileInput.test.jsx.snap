// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<FileInput /> should react on meta.plaintext correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <FileInput
    field={
      Object {
        "disabled": false,
        "id": "mock-field",
        "name": "field0",
        "onBlur": [MockFunction],
        "onChange": [MockFunction],
        "value": "",
      }
    }
    label="field0"
    meta={
      Object {
        "error": null,
        "isValidating": false,
        "plaintext": true,
        "stringFormatter": [MockFunction],
        "touched": false,
        "valid": true,
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <Input
        disabled={false}
        id="mock-field"
        name="field0"
        onBlur={[MockFunction]}
        onChange={[MockFunction]}
        plaintext={true}
        type="text"
        value=""
      >
        <FormComponent(FormText)
          text="ojs_form_select_file"
        />
      </Input>,
      "field": Object {
        "disabled": false,
        "id": "mock-field",
        "name": "field0",
        "onBlur": [MockFunction],
        "onChange": [MockFunction],
        "value": "",
      },
      "info": undefined,
      "label": "field0",
      "meta": Object {
        "error": null,
        "isValidating": false,
        "plaintext": true,
        "stringFormatter": [MockFunction],
        "touched": false,
        "valid": true,
      },
      "prefix": undefined,
      "suffix": undefined,
      "validators": undefined,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <FormComponent(FormText)
          text="ojs_form_select_file"
        />,
        "disabled": false,
        "id": "mock-field",
        "name": "field0",
        "onBlur": [MockFunction],
        "onChange": [MockFunction],
        "plaintext": true,
        "type": "text",
        "value": "",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "text": "ojs_form_select_file",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <Input
          disabled={false}
          id="mock-field"
          name="field0"
          onBlur={[MockFunction]}
          onChange={[MockFunction]}
          plaintext={true}
          type="text"
          value=""
        >
          <FormComponent(FormText)
            text="ojs_form_select_file"
          />
        </Input>,
        "field": Object {
          "disabled": false,
          "id": "mock-field",
          "name": "field0",
          "onBlur": [MockFunction],
          "onChange": [MockFunction],
          "value": "",
        },
        "info": undefined,
        "label": "field0",
        "meta": Object {
          "error": null,
          "isValidating": false,
          "plaintext": true,
          "stringFormatter": [MockFunction],
          "touched": false,
          "valid": true,
        },
        "prefix": undefined,
        "suffix": undefined,
        "validators": undefined,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <FormComponent(FormText)
            text="ojs_form_select_file"
          />,
          "disabled": false,
          "id": "mock-field",
          "name": "field0",
          "onBlur": [MockFunction],
          "onChange": [MockFunction],
          "plaintext": true,
          "type": "text",
          "value": "",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "text": "ojs_form_select_file",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getSnapshotBeforeUpdate": true,
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;

exports[`<FileInput /> should render correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <FileInput
    field={
      Object {
        "disabled": false,
        "id": "mock-field",
        "name": "field0",
        "onBlur": [MockFunction],
        "onChange": [MockFunction],
        "value": "",
      }
    }
    label="field0"
    meta={
      Object {
        "error": null,
        "isValidating": false,
        "plaintext": false,
        "stringFormatter": [MockFunction],
        "touched": false,
        "valid": true,
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <div
        className="custom-file"
      >
        <Input
          disabled={false}
          id="mock-field"
          name="field0"
          onBlur={[MockFunction]}
          onChange={[MockFunction]}
          type="file"
          value=""
        />
        <Label
          className="custom-file-label"
          for="mock-field"
          tag="label"
          widths={
            Array [
              "xs",
              "sm",
              "md",
              "lg",
              "xl",
            ]
          }
        >
          <FormComponent(FormText)
            text="ojs_form_select_file"
          />
        </Label>
      </div>,
      "field": Object {
        "disabled": false,
        "id": "mock-field",
        "name": "field0",
        "onBlur": [MockFunction],
        "onChange": [MockFunction],
        "value": "",
      },
      "info": undefined,
      "label": "field0",
      "meta": Object {
        "error": null,
        "isValidating": false,
        "plaintext": false,
        "stringFormatter": [MockFunction],
        "touched": false,
        "valid": true,
      },
      "prefix": undefined,
      "suffix": undefined,
      "validators": undefined,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Input
            disabled={false}
            id="mock-field"
            name="field0"
            onBlur={[MockFunction]}
            onChange={[MockFunction]}
            type="file"
            value=""
          />,
          <Label
            className="custom-file-label"
            for="mock-field"
            tag="label"
            widths={
              Array [
                "xs",
                "sm",
                "md",
                "lg",
                "xl",
              ]
            }
          >
            <FormComponent(FormText)
              text="ojs_form_select_file"
            />
          </Label>,
        ],
        "className": "custom-file",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "disabled": false,
            "id": "mock-field",
            "name": "field0",
            "onBlur": [MockFunction],
            "onChange": [MockFunction],
            "type": "file",
            "value": "",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <FormComponent(FormText)
              text="ojs_form_select_file"
            />,
            "className": "custom-file-label",
            "for": "mock-field",
            "tag": "label",
            "widths": Array [
              "xs",
              "sm",
              "md",
              "lg",
              "xl",
            ],
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "text": "ojs_form_select_file",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
      ],
      "type": "div",
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <div
          className="custom-file"
        >
          <Input
            disabled={false}
            id="mock-field"
            name="field0"
            onBlur={[MockFunction]}
            onChange={[MockFunction]}
            type="file"
            value=""
          />
          <Label
            className="custom-file-label"
            for="mock-field"
            tag="label"
            widths={
              Array [
                "xs",
                "sm",
                "md",
                "lg",
                "xl",
              ]
            }
          >
            <FormComponent(FormText)
              text="ojs_form_select_file"
            />
          </Label>
        </div>,
        "field": Object {
          "disabled": false,
          "id": "mock-field",
          "name": "field0",
          "onBlur": [MockFunction],
          "onChange": [MockFunction],
          "value": "",
        },
        "info": undefined,
        "label": "field0",
        "meta": Object {
          "error": null,
          "isValidating": false,
          "plaintext": false,
          "stringFormatter": [MockFunction],
          "touched": false,
          "valid": true,
        },
        "prefix": undefined,
        "suffix": undefined,
        "validators": undefined,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <Input
              disabled={false}
              id="mock-field"
              name="field0"
              onBlur={[MockFunction]}
              onChange={[MockFunction]}
              type="file"
              value=""
            />,
            <Label
              className="custom-file-label"
              for="mock-field"
              tag="label"
              widths={
                Array [
                  "xs",
                  "sm",
                  "md",
                  "lg",
                  "xl",
                ]
              }
            >
              <FormComponent(FormText)
                text="ojs_form_select_file"
              />
            </Label>,
          ],
          "className": "custom-file",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "disabled": false,
              "id": "mock-field",
              "name": "field0",
              "onBlur": [MockFunction],
              "onChange": [MockFunction],
              "type": "file",
              "value": "",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": <FormComponent(FormText)
                text="ojs_form_select_file"
              />,
              "className": "custom-file-label",
              "for": "mock-field",
              "tag": "label",
              "widths": Array [
                "xs",
                "sm",
                "md",
                "lg",
                "xl",
              ],
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "text": "ojs_form_select_file",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
        ],
        "type": "div",
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getSnapshotBeforeUpdate": true,
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
